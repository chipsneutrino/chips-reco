This README aims to outline how the PID for CHIPS should be run.

WHAT IS IN THIS DIRECTORY?

	- analysis     -> Contains the analysis scripts for finding the optimal ANN cut values and making output plots etc...
	- macros       -> Contains the root macros that run the PID, combining, training, reading etc... These are controlled by run_wcPID.py
	- oldPID       -> Contains the old macros and scripts for the PID, this is kept for now for referance if needed
	- run_wcPID.py -> Python script to run the PID, it takes an input directory that has the following form...
	
	- geometryDirectory
		- nue_cc_flux/NuMI/ElectronLike
		- nue_cc_flux/NuMI/MuonLike
		- numu_cc_flux/NuMI/ElectronLike
		- numu_cc_flux/NuMI/MuonLike
		- numu_nc_flux/NuMI/ElectronLike
		- numu_nc_flux/NuMI/MuonLike
		- nue_all_flux/NuMI/ElectronLike
		- nue_all_flux/NuMI/MuonLike
		- numu_all_flux/NuMI/ElectronLike
		- numu_all_flux/NuMI/MuonLike
		
	It then produced a PID directory in the geometryDirectory that contains all the associated PID files and PID output...
		

There are 5 different types of event sets that need to be used within the PID...
- numu_ccqe
- numu_all (i.e. CCQE + CC non-QE + NC events in the correct proportions)
- nuel_ccqe
- nuel_all (i.e. CCQE + CC non-QE + NC events in the correct proportions)
- numu_nc events

The event sets used for training the two ANN's are...
elANNmu -> Signal: nuel_ccqe , Background: numu_ccqe
elANNnc -> Signal: nuel_ccqe , Background: numu_nc
We use ccqe events so that they are trained on the cleanest subset of events.

A preselection is applied to any events that go into the training or are used as samples for testing...
- nHits < 50
- recoE_el < 550
- recoE_mu < 550
- recoE_el > 4950
- recoE_mu > 4950
- vtxRho_el > 1150
- vtxZ_el > 900
- vtxZ_el < -900
- veto
- fracHitsDownstream < 0
- nRings < 0
- firstRingHeight < 0
- lastRingHeight < 0
i.e. some activity in the detector, the reco energy not railing, and a 1m fiducial volume cut for the electron fit,
and a cut to remove escaping events that the veto would identify, aswell as addition cuts that act as checks that the events have run correctly.

The current variables that are used within the PID's are as follows...
- nHits
- deltaCharge2LnL
- deltaTime2LnL
- deltaCharge2LnLOverNHits
- fracHitsOutsideRing_mu
- fracHitsInRing_mu
- fracHitsInRingHole_mu
- fracHitsOutsideRing_el
- fracHitsInRing_el
- fracHitsInRingHole_el
- fracPredQOutsideRing_mu
- fracPredQOutsideRing_el
- predictedChargeOverTotalCharge_mu
- predictedChargeOverTotalCharge_el
- recoEOverQ_mu
- recoEOverQ_el
- nRings
- firstRingHeight
- lastRingHeight
- dirX_el (elANNnc ONLY)
- fracHitsDownstream (elANNnc ONLY)

You need ~20k events of each type to get the appropriate stats and ensure that the training converges.
A large proportion (~80%) of numu_nc events are removed by the cut, mainly due to their elFit and muFit reco energies being < 550Mev. 
This is a good thing, however, leads to some issues with having a lack of NC events to train the elANNnc on.

TO DO LIST... (the following need to be implemented)      

-	Make standardised plotting scripts that make all the appropriate PID output plots.
	These should be in the colour scheme Jenny specified, similar to NOVA.
	
-	Implement a way to dynamical calculate the best cut values. Using the (efficiency*purity) figure of merit. 
	It should then apply this when making all output plots etc....