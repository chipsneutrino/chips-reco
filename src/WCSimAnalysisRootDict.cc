//
// File generated by rootcint at Thu Jul 11 14:54:04 2013

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOdIsrcdIWCSimAnalysisRootDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "WCSimAnalysisRootDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::WCSimTimeLikelihood WCSimTimeLikelihood;
      #else
      class WCSimTimeLikelihood  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~WCSimTimeLikelihood() throw() {};
         ::WCSimLikelihoodTrack* fTrack; //
         ::WCSimLikelihoodDigitArray* fDigitArray; //
         bool fGotTrackParameters; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::WCSimLikelihoodFitter WCSimLikelihoodFitter;
      #else
      class WCSimLikelihoodFitter  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~WCSimLikelihoodFitter() throw() {};
         ::WCSimRootEvent* fRootEvent; //
         ::WCSimLikelihoodTrack* fTrack; //
         vector< ::WCSimRecoDigit* > fRecoDigitList; //
         ::WCSimLikelihoodDigitArray* fLikelihoodDigitArray; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::WCSimLikelihoodTuner WCSimLikelihoodTuner;
      #else
      class WCSimLikelihoodTuner  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~WCSimLikelihoodTuner() throw() {};
         double fDirCoeffs[3]; //
         double fIndCoeffs[3]; //
         ::TString* fProfileLocation; //
         ::TFile* fProfiles; //
         ::WCSimLikelihoodTrack::TrackType fIsOpen; //
         ::TObjArray* fHistArray; //
         ::TObjArray* fAngHistArray; //
         ::TObjArray* fFluxArray; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::WCSimChargeLikelihood WCSimChargeLikelihood;
      #else
      class WCSimChargeLikelihood  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~WCSimChargeLikelihood() throw() {};
         vector< Double_t > fCoeffsCh; //
         vector< Double_t > fCoeffsInd; //
         double fEnergy; //particle energy
         double fR0; //vertex to PMT distance
         double fCosTheta0; //angle to PMT as viewed from vertex
         double fEta; //angle of incidence of emitted light at the PMT
         double fEnergyInterval; //steps to increment variables by
         double fR0Interval; //from one bin of the lookup table
         double fCosTheta0Interval; //to the next
         double fChIntegral[100][1000][100]; //
         double fIndIntegral[100]; //
         double fRadius; //Distance from centre of tank to the source
         double fAngle; //Angle between source, centre of tank, and PMT
         double fTheta; //Angle between source direction and ray to PMT (same as theta0)
         double fPhi; //Angle between plane containing tank centre, PMT and source, and plane
         ::WCSimLikelihoodTrack* fTrack; //
         ::WCSimLikelihoodDigitArray* fDigitArray; //
         ::WCSimLikelihoodDigit* fDigit; //
         ::WCSimLikelihoodTuner* fTuner; //
         bool fGotTrackParameters; //
         bool fCalculateIntegrals; //
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void WCSimRecoDigit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_WCSimRecoDigit(void *p);
   static void deleteArray_WCSimRecoDigit(void *p);
   static void destruct_WCSimRecoDigit(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimRecoDigit*)
   {
      ::WCSimRecoDigit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimRecoDigit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimRecoDigit", ::WCSimRecoDigit::Class_Version(), "./include/WCSimRecoDigit.hh", 6,
                  typeid(::WCSimRecoDigit), DefineBehavior(ptr, ptr),
                  &::WCSimRecoDigit::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimRecoDigit) );
      instance.SetDelete(&delete_WCSimRecoDigit);
      instance.SetDeleteArray(&deleteArray_WCSimRecoDigit);
      instance.SetDestructor(&destruct_WCSimRecoDigit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimRecoDigit*)
   {
      return GenerateInitInstanceLocal((::WCSimRecoDigit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimRecoDigit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimLikelihoodDigit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_WCSimLikelihoodDigit(void *p);
   static void deleteArray_WCSimLikelihoodDigit(void *p);
   static void destruct_WCSimLikelihoodDigit(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimLikelihoodDigit*)
   {
      ::WCSimLikelihoodDigit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimLikelihoodDigit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimLikelihoodDigit", ::WCSimLikelihoodDigit::Class_Version(), "./include/WCSimLikelihoodDigit.hh", 10,
                  typeid(::WCSimLikelihoodDigit), DefineBehavior(ptr, ptr),
                  &::WCSimLikelihoodDigit::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimLikelihoodDigit) );
      instance.SetDelete(&delete_WCSimLikelihoodDigit);
      instance.SetDeleteArray(&deleteArray_WCSimLikelihoodDigit);
      instance.SetDestructor(&destruct_WCSimLikelihoodDigit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimLikelihoodDigit*)
   {
      return GenerateInitInstanceLocal((::WCSimLikelihoodDigit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimLikelihoodDigit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimLikelihoodDigitArray_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_WCSimLikelihoodDigitArray(void *p = 0);
   static void *newArray_WCSimLikelihoodDigitArray(Long_t size, void *p);
   static void delete_WCSimLikelihoodDigitArray(void *p);
   static void deleteArray_WCSimLikelihoodDigitArray(void *p);
   static void destruct_WCSimLikelihoodDigitArray(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimLikelihoodDigitArray*)
   {
      ::WCSimLikelihoodDigitArray *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimLikelihoodDigitArray >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimLikelihoodDigitArray", ::WCSimLikelihoodDigitArray::Class_Version(), "./include/WCSimLikelihoodDigitArray.hh", 11,
                  typeid(::WCSimLikelihoodDigitArray), DefineBehavior(ptr, ptr),
                  &::WCSimLikelihoodDigitArray::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimLikelihoodDigitArray) );
      instance.SetNew(&new_WCSimLikelihoodDigitArray);
      instance.SetNewArray(&newArray_WCSimLikelihoodDigitArray);
      instance.SetDelete(&delete_WCSimLikelihoodDigitArray);
      instance.SetDeleteArray(&deleteArray_WCSimLikelihoodDigitArray);
      instance.SetDestructor(&destruct_WCSimLikelihoodDigitArray);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimLikelihoodDigitArray*)
   {
      return GenerateInitInstanceLocal((::WCSimLikelihoodDigitArray*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimLikelihoodDigitArray*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimLikelihoodTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_WCSimLikelihoodTrack(void *p = 0);
   static void *newArray_WCSimLikelihoodTrack(Long_t size, void *p);
   static void delete_WCSimLikelihoodTrack(void *p);
   static void deleteArray_WCSimLikelihoodTrack(void *p);
   static void destruct_WCSimLikelihoodTrack(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimLikelihoodTrack*)
   {
      ::WCSimLikelihoodTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimLikelihoodTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimLikelihoodTrack", ::WCSimLikelihoodTrack::Class_Version(), "./include/WCSimLikelihoodTrack.hh", 9,
                  typeid(::WCSimLikelihoodTrack), DefineBehavior(ptr, ptr),
                  &::WCSimLikelihoodTrack::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimLikelihoodTrack) );
      instance.SetNew(&new_WCSimLikelihoodTrack);
      instance.SetNewArray(&newArray_WCSimLikelihoodTrack);
      instance.SetDelete(&delete_WCSimLikelihoodTrack);
      instance.SetDeleteArray(&deleteArray_WCSimLikelihoodTrack);
      instance.SetDestructor(&destruct_WCSimLikelihoodTrack);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimLikelihoodTrack*)
   {
      return GenerateInitInstanceLocal((::WCSimLikelihoodTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimLikelihoodTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimRecoVertex_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_WCSimRecoVertex(void *p = 0);
   static void *newArray_WCSimRecoVertex(Long_t size, void *p);
   static void delete_WCSimRecoVertex(void *p);
   static void deleteArray_WCSimRecoVertex(void *p);
   static void destruct_WCSimRecoVertex(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimRecoVertex*)
   {
      ::WCSimRecoVertex *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimRecoVertex >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimRecoVertex", ::WCSimRecoVertex::Class_Version(), "./include/WCSimRecoVertex.hh", 6,
                  typeid(::WCSimRecoVertex), DefineBehavior(ptr, ptr),
                  &::WCSimRecoVertex::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimRecoVertex) );
      instance.SetNew(&new_WCSimRecoVertex);
      instance.SetNewArray(&newArray_WCSimRecoVertex);
      instance.SetDelete(&delete_WCSimRecoVertex);
      instance.SetDeleteArray(&deleteArray_WCSimRecoVertex);
      instance.SetDestructor(&destruct_WCSimRecoVertex);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimRecoVertex*)
   {
      return GenerateInitInstanceLocal((::WCSimRecoVertex*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimRecoVertex*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimRecoRing_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_WCSimRecoRing(void *p);
   static void deleteArray_WCSimRecoRing(void *p);
   static void destruct_WCSimRecoRing(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimRecoRing*)
   {
      ::WCSimRecoRing *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimRecoRing >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimRecoRing", ::WCSimRecoRing::Class_Version(), "./include/WCSimRecoRing.hh", 6,
                  typeid(::WCSimRecoRing), DefineBehavior(ptr, ptr),
                  &::WCSimRecoRing::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimRecoRing) );
      instance.SetDelete(&delete_WCSimRecoRing);
      instance.SetDeleteArray(&deleteArray_WCSimRecoRing);
      instance.SetDestructor(&destruct_WCSimRecoRing);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimRecoRing*)
   {
      return GenerateInitInstanceLocal((::WCSimRecoRing*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimRecoRing*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimRecoEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_WCSimRecoEvent(void *p = 0);
   static void *newArray_WCSimRecoEvent(Long_t size, void *p);
   static void delete_WCSimRecoEvent(void *p);
   static void deleteArray_WCSimRecoEvent(void *p);
   static void destruct_WCSimRecoEvent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimRecoEvent*)
   {
      ::WCSimRecoEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimRecoEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimRecoEvent", ::WCSimRecoEvent::Class_Version(), "./include/WCSimRecoEvent.hh", 12,
                  typeid(::WCSimRecoEvent), DefineBehavior(ptr, ptr),
                  &::WCSimRecoEvent::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimRecoEvent) );
      instance.SetNew(&new_WCSimRecoEvent);
      instance.SetNewArray(&newArray_WCSimRecoEvent);
      instance.SetDelete(&delete_WCSimRecoEvent);
      instance.SetDeleteArray(&deleteArray_WCSimRecoEvent);
      instance.SetDestructor(&destruct_WCSimRecoEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimRecoEvent*)
   {
      return GenerateInitInstanceLocal((::WCSimRecoEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimRecoEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimTimeLikelihood_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void WCSimTimeLikelihood_Dictionary();
   static void delete_WCSimTimeLikelihood(void *p);
   static void deleteArray_WCSimTimeLikelihood(void *p);
   static void destruct_WCSimTimeLikelihood(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimTimeLikelihood*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::WCSimTimeLikelihood) == sizeof(::ROOT::Shadow::WCSimTimeLikelihood));
      ::WCSimTimeLikelihood *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::WCSimTimeLikelihood),0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimTimeLikelihood", "./include/WCSimTimeLikelihood.hh", 13,
                  typeid(::WCSimTimeLikelihood), DefineBehavior(ptr, ptr),
                  &WCSimTimeLikelihood_ShowMembers, &WCSimTimeLikelihood_Dictionary, isa_proxy, 4,
                  sizeof(::WCSimTimeLikelihood) );
      instance.SetDelete(&delete_WCSimTimeLikelihood);
      instance.SetDeleteArray(&deleteArray_WCSimTimeLikelihood);
      instance.SetDestructor(&destruct_WCSimTimeLikelihood);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimTimeLikelihood*)
   {
      return GenerateInitInstanceLocal((::WCSimTimeLikelihood*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimTimeLikelihood*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void WCSimTimeLikelihood_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::WCSimTimeLikelihood*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void WCSimLikelihoodFitter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void WCSimLikelihoodFitter_Dictionary();
   static void delete_WCSimLikelihoodFitter(void *p);
   static void deleteArray_WCSimLikelihoodFitter(void *p);
   static void destruct_WCSimLikelihoodFitter(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimLikelihoodFitter*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::WCSimLikelihoodFitter) == sizeof(::ROOT::Shadow::WCSimLikelihoodFitter));
      ::WCSimLikelihoodFitter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::WCSimLikelihoodFitter),0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimLikelihoodFitter", "./include/WCSimLikelihoodFitter.hh", 11,
                  typeid(::WCSimLikelihoodFitter), DefineBehavior(ptr, ptr),
                  &WCSimLikelihoodFitter_ShowMembers, &WCSimLikelihoodFitter_Dictionary, isa_proxy, 4,
                  sizeof(::WCSimLikelihoodFitter) );
      instance.SetDelete(&delete_WCSimLikelihoodFitter);
      instance.SetDeleteArray(&deleteArray_WCSimLikelihoodFitter);
      instance.SetDestructor(&destruct_WCSimLikelihoodFitter);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimLikelihoodFitter*)
   {
      return GenerateInitInstanceLocal((::WCSimLikelihoodFitter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimLikelihoodFitter*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void WCSimLikelihoodFitter_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::WCSimLikelihoodFitter*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void WCSimLikelihoodTuner_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void WCSimLikelihoodTuner_Dictionary();
   static void *new_WCSimLikelihoodTuner(void *p = 0);
   static void *newArray_WCSimLikelihoodTuner(Long_t size, void *p);
   static void delete_WCSimLikelihoodTuner(void *p);
   static void deleteArray_WCSimLikelihoodTuner(void *p);
   static void destruct_WCSimLikelihoodTuner(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimLikelihoodTuner*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::WCSimLikelihoodTuner) == sizeof(::ROOT::Shadow::WCSimLikelihoodTuner));
      ::WCSimLikelihoodTuner *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::WCSimLikelihoodTuner),0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimLikelihoodTuner", "./include/WCSimLikelihoodTuner.hh", 12,
                  typeid(::WCSimLikelihoodTuner), DefineBehavior(ptr, ptr),
                  &WCSimLikelihoodTuner_ShowMembers, &WCSimLikelihoodTuner_Dictionary, isa_proxy, 4,
                  sizeof(::WCSimLikelihoodTuner) );
      instance.SetNew(&new_WCSimLikelihoodTuner);
      instance.SetNewArray(&newArray_WCSimLikelihoodTuner);
      instance.SetDelete(&delete_WCSimLikelihoodTuner);
      instance.SetDeleteArray(&deleteArray_WCSimLikelihoodTuner);
      instance.SetDestructor(&destruct_WCSimLikelihoodTuner);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimLikelihoodTuner*)
   {
      return GenerateInitInstanceLocal((::WCSimLikelihoodTuner*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimLikelihoodTuner*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void WCSimLikelihoodTuner_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::WCSimLikelihoodTuner*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void WCSimChargeLikelihood_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void WCSimChargeLikelihood_Dictionary();
   static void delete_WCSimChargeLikelihood(void *p);
   static void deleteArray_WCSimChargeLikelihood(void *p);
   static void destruct_WCSimChargeLikelihood(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimChargeLikelihood*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::WCSimChargeLikelihood) == sizeof(::ROOT::Shadow::WCSimChargeLikelihood));
      ::WCSimChargeLikelihood *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::WCSimChargeLikelihood),0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimChargeLikelihood", "./include/WCSimChargeLikelihood.hh", 14,
                  typeid(::WCSimChargeLikelihood), DefineBehavior(ptr, ptr),
                  &WCSimChargeLikelihood_ShowMembers, &WCSimChargeLikelihood_Dictionary, isa_proxy, 4,
                  sizeof(::WCSimChargeLikelihood) );
      instance.SetDelete(&delete_WCSimChargeLikelihood);
      instance.SetDeleteArray(&deleteArray_WCSimChargeLikelihood);
      instance.SetDestructor(&destruct_WCSimChargeLikelihood);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimChargeLikelihood*)
   {
      return GenerateInitInstanceLocal((::WCSimChargeLikelihood*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimChargeLikelihood*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void WCSimChargeLikelihood_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::WCSimChargeLikelihood*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void WCSimDisplay_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_WCSimDisplay(void *p = 0);
   static void *newArray_WCSimDisplay(Long_t size, void *p);
   static void delete_WCSimDisplay(void *p);
   static void deleteArray_WCSimDisplay(void *p);
   static void destruct_WCSimDisplay(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimDisplay*)
   {
      ::WCSimDisplay *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimDisplay >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimDisplay", ::WCSimDisplay::Class_Version(), "./include/WCSimDisplay.hh", 9,
                  typeid(::WCSimDisplay), DefineBehavior(ptr, ptr),
                  &::WCSimDisplay::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimDisplay) );
      instance.SetNew(&new_WCSimDisplay);
      instance.SetNewArray(&newArray_WCSimDisplay);
      instance.SetDelete(&delete_WCSimDisplay);
      instance.SetDeleteArray(&deleteArray_WCSimDisplay);
      instance.SetDestructor(&destruct_WCSimDisplay);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimDisplay*)
   {
      return GenerateInitInstanceLocal((::WCSimDisplay*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimDisplay*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimReco_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_WCSimReco(void *p);
   static void deleteArray_WCSimReco(void *p);
   static void destruct_WCSimReco(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimReco*)
   {
      ::WCSimReco *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimReco >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimReco", ::WCSimReco::Class_Version(), "./include/WCSimReco.hh", 11,
                  typeid(::WCSimReco), DefineBehavior(ptr, ptr),
                  &::WCSimReco::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimReco) );
      instance.SetDelete(&delete_WCSimReco);
      instance.SetDeleteArray(&deleteArray_WCSimReco);
      instance.SetDestructor(&destruct_WCSimReco);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimReco*)
   {
      return GenerateInitInstanceLocal((::WCSimReco*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimReco*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimTrueEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_WCSimTrueEvent(void *p = 0);
   static void *newArray_WCSimTrueEvent(Long_t size, void *p);
   static void delete_WCSimTrueEvent(void *p);
   static void deleteArray_WCSimTrueEvent(void *p);
   static void destruct_WCSimTrueEvent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimTrueEvent*)
   {
      ::WCSimTrueEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimTrueEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimTrueEvent", ::WCSimTrueEvent::Class_Version(), "./include/WCSimTrueEvent.hh", 10,
                  typeid(::WCSimTrueEvent), DefineBehavior(ptr, ptr),
                  &::WCSimTrueEvent::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimTrueEvent) );
      instance.SetNew(&new_WCSimTrueEvent);
      instance.SetNewArray(&newArray_WCSimTrueEvent);
      instance.SetDelete(&delete_WCSimTrueEvent);
      instance.SetDeleteArray(&deleteArray_WCSimTrueEvent);
      instance.SetDestructor(&destruct_WCSimTrueEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimTrueEvent*)
   {
      return GenerateInitInstanceLocal((::WCSimTrueEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimTrueEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimDisplayViewer_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_WCSimDisplayViewer(void *p = 0);
   static void *newArray_WCSimDisplayViewer(Long_t size, void *p);
   static void delete_WCSimDisplayViewer(void *p);
   static void deleteArray_WCSimDisplayViewer(void *p);
   static void destruct_WCSimDisplayViewer(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimDisplayViewer*)
   {
      ::WCSimDisplayViewer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimDisplayViewer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimDisplayViewer", ::WCSimDisplayViewer::Class_Version(), "./include/WCSimDisplayViewer.hh", 25,
                  typeid(::WCSimDisplayViewer), DefineBehavior(ptr, ptr),
                  &::WCSimDisplayViewer::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimDisplayViewer) );
      instance.SetNew(&new_WCSimDisplayViewer);
      instance.SetNewArray(&newArray_WCSimDisplayViewer);
      instance.SetDelete(&delete_WCSimDisplayViewer);
      instance.SetDeleteArray(&deleteArray_WCSimDisplayViewer);
      instance.SetDestructor(&destruct_WCSimDisplayViewer);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimDisplayViewer*)
   {
      return GenerateInitInstanceLocal((::WCSimDisplayViewer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimDisplayViewer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimDisplayFactory_ShowMembers(void *obj, TMemberInspector &R__insp);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimDisplayFactory*)
   {
      ::WCSimDisplayFactory *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimDisplayFactory >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimDisplayFactory", ::WCSimDisplayFactory::Class_Version(), "./include/WCSimDisplayFactory.hh", 9,
                  typeid(::WCSimDisplayFactory), DefineBehavior(ptr, ptr),
                  &::WCSimDisplayFactory::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimDisplayFactory) );
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimDisplayFactory*)
   {
      return GenerateInitInstanceLocal((::WCSimDisplayFactory*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimDisplayFactory*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimTrueTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_WCSimTrueTrack(void *p);
   static void deleteArray_WCSimTrueTrack(void *p);
   static void destruct_WCSimTrueTrack(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimTrueTrack*)
   {
      ::WCSimTrueTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimTrueTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimTrueTrack", ::WCSimTrueTrack::Class_Version(), "./include/WCSimTrueTrack.hh", 6,
                  typeid(::WCSimTrueTrack), DefineBehavior(ptr, ptr),
                  &::WCSimTrueTrack::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimTrueTrack) );
      instance.SetDelete(&delete_WCSimTrueTrack);
      instance.SetDeleteArray(&deleteArray_WCSimTrueTrack);
      instance.SetDestructor(&destruct_WCSimTrueTrack);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimTrueTrack*)
   {
      return GenerateInitInstanceLocal((::WCSimTrueTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimTrueTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimDisplayAB_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_WCSimDisplayAB(void *p = 0);
   static void *newArray_WCSimDisplayAB(Long_t size, void *p);
   static void delete_WCSimDisplayAB(void *p);
   static void deleteArray_WCSimDisplayAB(void *p);
   static void destruct_WCSimDisplayAB(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimDisplayAB*)
   {
      ::WCSimDisplayAB *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimDisplayAB >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimDisplayAB", ::WCSimDisplayAB::Class_Version(), "./include/WCSimDisplayAB.hh", 24,
                  typeid(::WCSimDisplayAB), DefineBehavior(ptr, ptr),
                  &::WCSimDisplayAB::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimDisplayAB) );
      instance.SetNew(&new_WCSimDisplayAB);
      instance.SetNewArray(&newArray_WCSimDisplayAB);
      instance.SetDelete(&delete_WCSimDisplayAB);
      instance.SetDeleteArray(&deleteArray_WCSimDisplayAB);
      instance.SetDestructor(&destruct_WCSimDisplayAB);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimDisplayAB*)
   {
      return GenerateInitInstanceLocal((::WCSimDisplayAB*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimDisplayAB*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimEveDisplay_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_WCSimEveDisplay(void *p = 0);
   static void *newArray_WCSimEveDisplay(Long_t size, void *p);
   static void delete_WCSimEveDisplay(void *p);
   static void deleteArray_WCSimEveDisplay(void *p);
   static void destruct_WCSimEveDisplay(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimEveDisplay*)
   {
      ::WCSimEveDisplay *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimEveDisplay >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimEveDisplay", ::WCSimEveDisplay::Class_Version(), "./include/WCSimEveDisplay.hh", 6,
                  typeid(::WCSimEveDisplay), DefineBehavior(ptr, ptr),
                  &::WCSimEveDisplay::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimEveDisplay) );
      instance.SetNew(&new_WCSimEveDisplay);
      instance.SetNewArray(&newArray_WCSimEveDisplay);
      instance.SetDelete(&delete_WCSimEveDisplay);
      instance.SetDeleteArray(&deleteArray_WCSimEveDisplay);
      instance.SetDestructor(&destruct_WCSimEveDisplay);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimEveDisplay*)
   {
      return GenerateInitInstanceLocal((::WCSimEveDisplay*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimEveDisplay*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimEventWriter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_WCSimEventWriter(void *p = 0);
   static void *newArray_WCSimEventWriter(Long_t size, void *p);
   static void delete_WCSimEventWriter(void *p);
   static void deleteArray_WCSimEventWriter(void *p);
   static void destruct_WCSimEventWriter(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimEventWriter*)
   {
      ::WCSimEventWriter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimEventWriter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimEventWriter", ::WCSimEventWriter::Class_Version(), "./include/WCSimEventWriter.hh", 13,
                  typeid(::WCSimEventWriter), DefineBehavior(ptr, ptr),
                  &::WCSimEventWriter::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimEventWriter) );
      instance.SetNew(&new_WCSimEventWriter);
      instance.SetNewArray(&newArray_WCSimEventWriter);
      instance.SetDelete(&delete_WCSimEventWriter);
      instance.SetDeleteArray(&deleteArray_WCSimEventWriter);
      instance.SetDestructor(&destruct_WCSimEventWriter);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimEventWriter*)
   {
      return GenerateInitInstanceLocal((::WCSimEventWriter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimEventWriter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimGeometry_ShowMembers(void *obj, TMemberInspector &R__insp);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimGeometry*)
   {
      ::WCSimGeometry *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimGeometry >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimGeometry", ::WCSimGeometry::Class_Version(), "./include/WCSimGeometry.hh", 8,
                  typeid(::WCSimGeometry), DefineBehavior(ptr, ptr),
                  &::WCSimGeometry::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimGeometry) );
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimGeometry*)
   {
      return GenerateInitInstanceLocal((::WCSimGeometry*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimGeometry*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimInterface_ShowMembers(void *obj, TMemberInspector &R__insp);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimInterface*)
   {
      ::WCSimInterface *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimInterface >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimInterface", ::WCSimInterface::Class_Version(), "./include/WCSimInterface.hh", 18,
                  typeid(::WCSimInterface), DefineBehavior(ptr, ptr),
                  &::WCSimInterface::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimInterface) );
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimInterface*)
   {
      return GenerateInitInstanceLocal((::WCSimInterface*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimInterface*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimParameters_ShowMembers(void *obj, TMemberInspector &R__insp);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimParameters*)
   {
      ::WCSimParameters *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimParameters >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimParameters", ::WCSimParameters::Class_Version(), "./include/WCSimParameters.hh", 6,
                  typeid(::WCSimParameters), DefineBehavior(ptr, ptr),
                  &::WCSimParameters::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimParameters) );
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimParameters*)
   {
      return GenerateInitInstanceLocal((::WCSimParameters*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimParameters*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimRecoObjectTable_ShowMembers(void *obj, TMemberInspector &R__insp);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimRecoObjectTable*)
   {
      ::WCSimRecoObjectTable *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimRecoObjectTable >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimRecoObjectTable", ::WCSimRecoObjectTable::Class_Version(), "./include/WCSimRecoObjectTable.hh", 6,
                  typeid(::WCSimRecoObjectTable), DefineBehavior(ptr, ptr),
                  &::WCSimRecoObjectTable::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimRecoObjectTable) );
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimRecoObjectTable*)
   {
      return GenerateInitInstanceLocal((::WCSimRecoObjectTable*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimRecoObjectTable*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimRecoFactory_ShowMembers(void *obj, TMemberInspector &R__insp);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimRecoFactory*)
   {
      ::WCSimRecoFactory *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimRecoFactory >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimRecoFactory", ::WCSimRecoFactory::Class_Version(), "./include/WCSimRecoFactory.hh", 9,
                  typeid(::WCSimRecoFactory), DefineBehavior(ptr, ptr),
                  &::WCSimRecoFactory::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimRecoFactory) );
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimRecoFactory*)
   {
      return GenerateInitInstanceLocal((::WCSimRecoFactory*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimRecoFactory*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimRecoAB_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_WCSimRecoAB(void *p = 0);
   static void *newArray_WCSimRecoAB(Long_t size, void *p);
   static void delete_WCSimRecoAB(void *p);
   static void deleteArray_WCSimRecoAB(void *p);
   static void destruct_WCSimRecoAB(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimRecoAB*)
   {
      ::WCSimRecoAB *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimRecoAB >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimRecoAB", ::WCSimRecoAB::Class_Version(), "./include/WCSimRecoAB.hh", 12,
                  typeid(::WCSimRecoAB), DefineBehavior(ptr, ptr),
                  &::WCSimRecoAB::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimRecoAB) );
      instance.SetNew(&new_WCSimRecoAB);
      instance.SetNewArray(&newArray_WCSimRecoAB);
      instance.SetDelete(&delete_WCSimRecoAB);
      instance.SetDeleteArray(&deleteArray_WCSimRecoAB);
      instance.SetDestructor(&destruct_WCSimRecoAB);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimRecoAB*)
   {
      return GenerateInitInstanceLocal((::WCSimRecoAB*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimRecoAB*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimRecoCluster_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_WCSimRecoCluster(void *p = 0);
   static void *newArray_WCSimRecoCluster(Long_t size, void *p);
   static void delete_WCSimRecoCluster(void *p);
   static void deleteArray_WCSimRecoCluster(void *p);
   static void destruct_WCSimRecoCluster(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimRecoCluster*)
   {
      ::WCSimRecoCluster *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimRecoCluster >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimRecoCluster", ::WCSimRecoCluster::Class_Version(), "./include/WCSimRecoCluster.hh", 10,
                  typeid(::WCSimRecoCluster), DefineBehavior(ptr, ptr),
                  &::WCSimRecoCluster::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimRecoCluster) );
      instance.SetNew(&new_WCSimRecoCluster);
      instance.SetNewArray(&newArray_WCSimRecoCluster);
      instance.SetDelete(&delete_WCSimRecoCluster);
      instance.SetDeleteArray(&deleteArray_WCSimRecoCluster);
      instance.SetDestructor(&destruct_WCSimRecoCluster);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimRecoCluster*)
   {
      return GenerateInitInstanceLocal((::WCSimRecoCluster*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimRecoCluster*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimRecoClusterDigit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_WCSimRecoClusterDigit(void *p);
   static void deleteArray_WCSimRecoClusterDigit(void *p);
   static void destruct_WCSimRecoClusterDigit(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimRecoClusterDigit*)
   {
      ::WCSimRecoClusterDigit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimRecoClusterDigit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimRecoClusterDigit", ::WCSimRecoClusterDigit::Class_Version(), "./include/WCSimRecoClusterDigit.hh", 10,
                  typeid(::WCSimRecoClusterDigit), DefineBehavior(ptr, ptr),
                  &::WCSimRecoClusterDigit::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimRecoClusterDigit) );
      instance.SetDelete(&delete_WCSimRecoClusterDigit);
      instance.SetDeleteArray(&deleteArray_WCSimRecoClusterDigit);
      instance.SetDestructor(&destruct_WCSimRecoClusterDigit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimRecoClusterDigit*)
   {
      return GenerateInitInstanceLocal((::WCSimRecoClusterDigit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimRecoClusterDigit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimHoughTransform_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_WCSimHoughTransform(void *p);
   static void deleteArray_WCSimHoughTransform(void *p);
   static void destruct_WCSimHoughTransform(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimHoughTransform*)
   {
      ::WCSimHoughTransform *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimHoughTransform >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimHoughTransform", ::WCSimHoughTransform::Class_Version(), "./include/WCSimHoughTransform.hh", 8,
                  typeid(::WCSimHoughTransform), DefineBehavior(ptr, ptr),
                  &::WCSimHoughTransform::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimHoughTransform) );
      instance.SetDelete(&delete_WCSimHoughTransform);
      instance.SetDeleteArray(&deleteArray_WCSimHoughTransform);
      instance.SetDestructor(&destruct_WCSimHoughTransform);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimHoughTransform*)
   {
      return GenerateInitInstanceLocal((::WCSimHoughTransform*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimHoughTransform*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimHoughTransformArray_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_WCSimHoughTransformArray(void *p);
   static void deleteArray_WCSimHoughTransformArray(void *p);
   static void destruct_WCSimHoughTransformArray(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimHoughTransformArray*)
   {
      ::WCSimHoughTransformArray *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimHoughTransformArray >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimHoughTransformArray", ::WCSimHoughTransformArray::Class_Version(), "./include/WCSimHoughTransformArray.hh", 10,
                  typeid(::WCSimHoughTransformArray), DefineBehavior(ptr, ptr),
                  &::WCSimHoughTransformArray::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimHoughTransformArray) );
      instance.SetDelete(&delete_WCSimHoughTransformArray);
      instance.SetDeleteArray(&deleteArray_WCSimHoughTransformArray);
      instance.SetDestructor(&destruct_WCSimHoughTransformArray);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimHoughTransformArray*)
   {
      return GenerateInitInstanceLocal((::WCSimHoughTransformArray*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimHoughTransformArray*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimDataCleaner_ShowMembers(void *obj, TMemberInspector &R__insp);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimDataCleaner*)
   {
      ::WCSimDataCleaner *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimDataCleaner >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimDataCleaner", ::WCSimDataCleaner::Class_Version(), "./include/WCSimDataCleaner.hh", 12,
                  typeid(::WCSimDataCleaner), DefineBehavior(ptr, ptr),
                  &::WCSimDataCleaner::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimDataCleaner) );
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimDataCleaner*)
   {
      return GenerateInitInstanceLocal((::WCSimDataCleaner*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimDataCleaner*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimVertexFinder_ShowMembers(void *obj, TMemberInspector &R__insp);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimVertexFinder*)
   {
      ::WCSimVertexFinder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimVertexFinder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimVertexFinder", ::WCSimVertexFinder::Class_Version(), "./include/WCSimVertexFinder.hh", 14,
                  typeid(::WCSimVertexFinder), DefineBehavior(ptr, ptr),
                  &::WCSimVertexFinder::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimVertexFinder) );
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimVertexFinder*)
   {
      return GenerateInitInstanceLocal((::WCSimVertexFinder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimVertexFinder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimVertexGeometry_ShowMembers(void *obj, TMemberInspector &R__insp);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimVertexGeometry*)
   {
      ::WCSimVertexGeometry *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimVertexGeometry >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimVertexGeometry", ::WCSimVertexGeometry::Class_Version(), "./include/WCSimVertexGeometry.hh", 11,
                  typeid(::WCSimVertexGeometry), DefineBehavior(ptr, ptr),
                  &::WCSimVertexGeometry::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimVertexGeometry) );
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimVertexGeometry*)
   {
      return GenerateInitInstanceLocal((::WCSimVertexGeometry*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimVertexGeometry*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimVertexViewer_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_WCSimVertexViewer(void *p = 0);
   static void *newArray_WCSimVertexViewer(Long_t size, void *p);
   static void delete_WCSimVertexViewer(void *p);
   static void deleteArray_WCSimVertexViewer(void *p);
   static void destruct_WCSimVertexViewer(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimVertexViewer*)
   {
      ::WCSimVertexViewer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimVertexViewer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimVertexViewer", ::WCSimVertexViewer::Class_Version(), "./include/WCSimVertexViewer.hh", 23,
                  typeid(::WCSimVertexViewer), DefineBehavior(ptr, ptr),
                  &::WCSimVertexViewer::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimVertexViewer) );
      instance.SetNew(&new_WCSimVertexViewer);
      instance.SetNewArray(&newArray_WCSimVertexViewer);
      instance.SetDelete(&delete_WCSimVertexViewer);
      instance.SetDeleteArray(&deleteArray_WCSimVertexViewer);
      instance.SetDestructor(&destruct_WCSimVertexViewer);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimVertexViewer*)
   {
      return GenerateInitInstanceLocal((::WCSimVertexViewer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimVertexViewer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimRingFinder_ShowMembers(void *obj, TMemberInspector &R__insp);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimRingFinder*)
   {
      ::WCSimRingFinder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimRingFinder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimRingFinder", ::WCSimRingFinder::Class_Version(), "./include/WCSimRingFinder.hh", 15,
                  typeid(::WCSimRingFinder), DefineBehavior(ptr, ptr),
                  &::WCSimRingFinder::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimRingFinder) );
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimRingFinder*)
   {
      return GenerateInitInstanceLocal((::WCSimRingFinder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimRingFinder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimRingViewer_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_WCSimRingViewer(void *p = 0);
   static void *newArray_WCSimRingViewer(Long_t size, void *p);
   static void delete_WCSimRingViewer(void *p);
   static void deleteArray_WCSimRingViewer(void *p);
   static void destruct_WCSimRingViewer(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimRingViewer*)
   {
      ::WCSimRingViewer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimRingViewer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimRingViewer", ::WCSimRingViewer::Class_Version(), "./include/WCSimRingViewer.hh", 15,
                  typeid(::WCSimRingViewer), DefineBehavior(ptr, ptr),
                  &::WCSimRingViewer::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimRingViewer) );
      instance.SetNew(&new_WCSimRingViewer);
      instance.SetNewArray(&newArray_WCSimRingViewer);
      instance.SetDelete(&delete_WCSimRingViewer);
      instance.SetDeleteArray(&deleteArray_WCSimRingViewer);
      instance.SetDestructor(&destruct_WCSimRingViewer);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimRingViewer*)
   {
      return GenerateInitInstanceLocal((::WCSimRingViewer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimRingViewer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimNtuple_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_WCSimNtuple(void *p = 0);
   static void *newArray_WCSimNtuple(Long_t size, void *p);
   static void delete_WCSimNtuple(void *p);
   static void deleteArray_WCSimNtuple(void *p);
   static void destruct_WCSimNtuple(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimNtuple*)
   {
      ::WCSimNtuple *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimNtuple >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimNtuple", ::WCSimNtuple::Class_Version(), "./include/WCSimNtuple.hh", 10,
                  typeid(::WCSimNtuple), DefineBehavior(ptr, ptr),
                  &::WCSimNtuple::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimNtuple) );
      instance.SetNew(&new_WCSimNtuple);
      instance.SetNewArray(&newArray_WCSimNtuple);
      instance.SetDelete(&delete_WCSimNtuple);
      instance.SetDeleteArray(&deleteArray_WCSimNtuple);
      instance.SetDestructor(&destruct_WCSimNtuple);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimNtuple*)
   {
      return GenerateInitInstanceLocal((::WCSimNtuple*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimNtuple*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimNtupleFactory_ShowMembers(void *obj, TMemberInspector &R__insp);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimNtupleFactory*)
   {
      ::WCSimNtupleFactory *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimNtupleFactory >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimNtupleFactory", ::WCSimNtupleFactory::Class_Version(), "./include/WCSimNtupleFactory.hh", 9,
                  typeid(::WCSimNtupleFactory), DefineBehavior(ptr, ptr),
                  &::WCSimNtupleFactory::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimNtupleFactory) );
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimNtupleFactory*)
   {
      return GenerateInitInstanceLocal((::WCSimNtupleFactory*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimNtupleFactory*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimRecoNtuple_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_WCSimRecoNtuple(void *p = 0);
   static void *newArray_WCSimRecoNtuple(Long_t size, void *p);
   static void delete_WCSimRecoNtuple(void *p);
   static void deleteArray_WCSimRecoNtuple(void *p);
   static void destruct_WCSimRecoNtuple(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimRecoNtuple*)
   {
      ::WCSimRecoNtuple *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimRecoNtuple >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimRecoNtuple", ::WCSimRecoNtuple::Class_Version(), "./include/WCSimRecoNtuple.hh", 13,
                  typeid(::WCSimRecoNtuple), DefineBehavior(ptr, ptr),
                  &::WCSimRecoNtuple::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimRecoNtuple) );
      instance.SetNew(&new_WCSimRecoNtuple);
      instance.SetNewArray(&newArray_WCSimRecoNtuple);
      instance.SetDelete(&delete_WCSimRecoNtuple);
      instance.SetDeleteArray(&deleteArray_WCSimRecoNtuple);
      instance.SetDestructor(&destruct_WCSimRecoNtuple);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimRecoNtuple*)
   {
      return GenerateInitInstanceLocal((::WCSimRecoNtuple*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimRecoNtuple*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimVertexNtuple_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_WCSimVertexNtuple(void *p = 0);
   static void *newArray_WCSimVertexNtuple(Long_t size, void *p);
   static void delete_WCSimVertexNtuple(void *p);
   static void deleteArray_WCSimVertexNtuple(void *p);
   static void destruct_WCSimVertexNtuple(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimVertexNtuple*)
   {
      ::WCSimVertexNtuple *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimVertexNtuple >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimVertexNtuple", ::WCSimVertexNtuple::Class_Version(), "./include/WCSimVertexNtuple.hh", 13,
                  typeid(::WCSimVertexNtuple), DefineBehavior(ptr, ptr),
                  &::WCSimVertexNtuple::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimVertexNtuple) );
      instance.SetNew(&new_WCSimVertexNtuple);
      instance.SetNewArray(&newArray_WCSimVertexNtuple);
      instance.SetDelete(&delete_WCSimVertexNtuple);
      instance.SetDeleteArray(&deleteArray_WCSimVertexNtuple);
      instance.SetDestructor(&destruct_WCSimVertexNtuple);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimVertexNtuple*)
   {
      return GenerateInitInstanceLocal((::WCSimVertexNtuple*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimVertexNtuple*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimVertexSeedNtuple_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_WCSimVertexSeedNtuple(void *p = 0);
   static void *newArray_WCSimVertexSeedNtuple(Long_t size, void *p);
   static void delete_WCSimVertexSeedNtuple(void *p);
   static void deleteArray_WCSimVertexSeedNtuple(void *p);
   static void destruct_WCSimVertexSeedNtuple(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimVertexSeedNtuple*)
   {
      ::WCSimVertexSeedNtuple *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimVertexSeedNtuple >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimVertexSeedNtuple", ::WCSimVertexSeedNtuple::Class_Version(), "./include/WCSimVertexSeedNtuple.hh", 13,
                  typeid(::WCSimVertexSeedNtuple), DefineBehavior(ptr, ptr),
                  &::WCSimVertexSeedNtuple::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimVertexSeedNtuple) );
      instance.SetNew(&new_WCSimVertexSeedNtuple);
      instance.SetNewArray(&newArray_WCSimVertexSeedNtuple);
      instance.SetDelete(&delete_WCSimVertexSeedNtuple);
      instance.SetDeleteArray(&deleteArray_WCSimVertexSeedNtuple);
      instance.SetDestructor(&destruct_WCSimVertexSeedNtuple);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimVertexSeedNtuple*)
   {
      return GenerateInitInstanceLocal((::WCSimVertexSeedNtuple*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimVertexSeedNtuple*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimNtupleWriter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_WCSimNtupleWriter(void *p = 0);
   static void *newArray_WCSimNtupleWriter(Long_t size, void *p);
   static void delete_WCSimNtupleWriter(void *p);
   static void deleteArray_WCSimNtupleWriter(void *p);
   static void destruct_WCSimNtupleWriter(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimNtupleWriter*)
   {
      ::WCSimNtupleWriter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimNtupleWriter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimNtupleWriter", ::WCSimNtupleWriter::Class_Version(), "./include/WCSimNtupleWriter.hh", 13,
                  typeid(::WCSimNtupleWriter), DefineBehavior(ptr, ptr),
                  &::WCSimNtupleWriter::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimNtupleWriter) );
      instance.SetNew(&new_WCSimNtupleWriter);
      instance.SetNewArray(&newArray_WCSimNtupleWriter);
      instance.SetDelete(&delete_WCSimNtupleWriter);
      instance.SetDeleteArray(&deleteArray_WCSimNtupleWriter);
      instance.SetDestructor(&destruct_WCSimNtupleWriter);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimNtupleWriter*)
   {
      return GenerateInitInstanceLocal((::WCSimNtupleWriter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimNtupleWriter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimMsg_ShowMembers(void *obj, TMemberInspector &R__insp);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimMsg*)
   {
      ::WCSimMsg *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimMsg >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimMsg", ::WCSimMsg::Class_Version(), "./include/WCSimMsg.hh", 6,
                  typeid(::WCSimMsg), DefineBehavior(ptr, ptr),
                  &::WCSimMsg::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimMsg) );
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimMsg*)
   {
      return GenerateInitInstanceLocal((::WCSimMsg*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimMsg*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *WCSimRecoDigit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimRecoDigit::Class_Name()
{
   return "WCSimRecoDigit";
}

//______________________________________________________________________________
const char *WCSimRecoDigit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoDigit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimRecoDigit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoDigit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimRecoDigit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoDigit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimRecoDigit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoDigit*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimLikelihoodDigit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimLikelihoodDigit::Class_Name()
{
   return "WCSimLikelihoodDigit";
}

//______________________________________________________________________________
const char *WCSimLikelihoodDigit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimLikelihoodDigit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimLikelihoodDigit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimLikelihoodDigit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimLikelihoodDigit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimLikelihoodDigit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimLikelihoodDigit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimLikelihoodDigit*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimLikelihoodDigitArray::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimLikelihoodDigitArray::Class_Name()
{
   return "WCSimLikelihoodDigitArray";
}

//______________________________________________________________________________
const char *WCSimLikelihoodDigitArray::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimLikelihoodDigitArray*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimLikelihoodDigitArray::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimLikelihoodDigitArray*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimLikelihoodDigitArray::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimLikelihoodDigitArray*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimLikelihoodDigitArray::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimLikelihoodDigitArray*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimLikelihoodTrack::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimLikelihoodTrack::Class_Name()
{
   return "WCSimLikelihoodTrack";
}

//______________________________________________________________________________
const char *WCSimLikelihoodTrack::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimLikelihoodTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimLikelihoodTrack::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimLikelihoodTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimLikelihoodTrack::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimLikelihoodTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimLikelihoodTrack::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimLikelihoodTrack*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimRecoVertex::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimRecoVertex::Class_Name()
{
   return "WCSimRecoVertex";
}

//______________________________________________________________________________
const char *WCSimRecoVertex::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoVertex*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimRecoVertex::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoVertex*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimRecoVertex::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoVertex*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimRecoVertex::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoVertex*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimRecoRing::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimRecoRing::Class_Name()
{
   return "WCSimRecoRing";
}

//______________________________________________________________________________
const char *WCSimRecoRing::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoRing*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimRecoRing::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoRing*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimRecoRing::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoRing*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimRecoRing::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoRing*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimRecoEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimRecoEvent::Class_Name()
{
   return "WCSimRecoEvent";
}

//______________________________________________________________________________
const char *WCSimRecoEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimRecoEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimRecoEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimRecoEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoEvent*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimDisplay::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimDisplay::Class_Name()
{
   return "WCSimDisplay";
}

//______________________________________________________________________________
const char *WCSimDisplay::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimDisplay*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimDisplay::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimDisplay*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimDisplay::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimDisplay*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimDisplay::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimDisplay*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimReco::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimReco::Class_Name()
{
   return "WCSimReco";
}

//______________________________________________________________________________
const char *WCSimReco::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimReco*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimReco::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimReco*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimReco::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimReco*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimReco::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimReco*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimTrueEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimTrueEvent::Class_Name()
{
   return "WCSimTrueEvent";
}

//______________________________________________________________________________
const char *WCSimTrueEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimTrueEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimTrueEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimTrueEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimTrueEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimTrueEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimTrueEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimTrueEvent*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimDisplayViewer::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimDisplayViewer::Class_Name()
{
   return "WCSimDisplayViewer";
}

//______________________________________________________________________________
const char *WCSimDisplayViewer::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimDisplayViewer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimDisplayViewer::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimDisplayViewer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimDisplayViewer::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimDisplayViewer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimDisplayViewer::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimDisplayViewer*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimDisplayFactory::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimDisplayFactory::Class_Name()
{
   return "WCSimDisplayFactory";
}

//______________________________________________________________________________
const char *WCSimDisplayFactory::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimDisplayFactory*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimDisplayFactory::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimDisplayFactory*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimDisplayFactory::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimDisplayFactory*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimDisplayFactory::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimDisplayFactory*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimTrueTrack::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimTrueTrack::Class_Name()
{
   return "WCSimTrueTrack";
}

//______________________________________________________________________________
const char *WCSimTrueTrack::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimTrueTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimTrueTrack::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimTrueTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimTrueTrack::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimTrueTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimTrueTrack::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimTrueTrack*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimDisplayAB::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimDisplayAB::Class_Name()
{
   return "WCSimDisplayAB";
}

//______________________________________________________________________________
const char *WCSimDisplayAB::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimDisplayAB*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimDisplayAB::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimDisplayAB*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimDisplayAB::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimDisplayAB*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimDisplayAB::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimDisplayAB*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimEveDisplay::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimEveDisplay::Class_Name()
{
   return "WCSimEveDisplay";
}

//______________________________________________________________________________
const char *WCSimEveDisplay::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimEveDisplay*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimEveDisplay::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimEveDisplay*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimEveDisplay::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimEveDisplay*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimEveDisplay::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimEveDisplay*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimEventWriter::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimEventWriter::Class_Name()
{
   return "WCSimEventWriter";
}

//______________________________________________________________________________
const char *WCSimEventWriter::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimEventWriter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimEventWriter::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimEventWriter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimEventWriter::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimEventWriter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimEventWriter::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimEventWriter*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimGeometry::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimGeometry::Class_Name()
{
   return "WCSimGeometry";
}

//______________________________________________________________________________
const char *WCSimGeometry::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimGeometry*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimGeometry::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimGeometry*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimGeometry::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimGeometry*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimGeometry::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimGeometry*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimInterface::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimInterface::Class_Name()
{
   return "WCSimInterface";
}

//______________________________________________________________________________
const char *WCSimInterface::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimInterface*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimInterface::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimInterface*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimInterface::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimInterface*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimInterface::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimInterface*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimParameters::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimParameters::Class_Name()
{
   return "WCSimParameters";
}

//______________________________________________________________________________
const char *WCSimParameters::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimParameters*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimParameters::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimParameters*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimParameters::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimParameters*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimParameters::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimParameters*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimRecoObjectTable::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimRecoObjectTable::Class_Name()
{
   return "WCSimRecoObjectTable";
}

//______________________________________________________________________________
const char *WCSimRecoObjectTable::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoObjectTable*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimRecoObjectTable::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoObjectTable*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimRecoObjectTable::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoObjectTable*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimRecoObjectTable::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoObjectTable*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimRecoFactory::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimRecoFactory::Class_Name()
{
   return "WCSimRecoFactory";
}

//______________________________________________________________________________
const char *WCSimRecoFactory::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoFactory*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimRecoFactory::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoFactory*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimRecoFactory::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoFactory*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimRecoFactory::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoFactory*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimRecoAB::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimRecoAB::Class_Name()
{
   return "WCSimRecoAB";
}

//______________________________________________________________________________
const char *WCSimRecoAB::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoAB*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimRecoAB::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoAB*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimRecoAB::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoAB*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimRecoAB::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoAB*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimRecoCluster::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimRecoCluster::Class_Name()
{
   return "WCSimRecoCluster";
}

//______________________________________________________________________________
const char *WCSimRecoCluster::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoCluster*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimRecoCluster::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoCluster*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimRecoCluster::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoCluster*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimRecoCluster::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoCluster*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimRecoClusterDigit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimRecoClusterDigit::Class_Name()
{
   return "WCSimRecoClusterDigit";
}

//______________________________________________________________________________
const char *WCSimRecoClusterDigit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoClusterDigit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimRecoClusterDigit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoClusterDigit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimRecoClusterDigit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoClusterDigit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimRecoClusterDigit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoClusterDigit*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimHoughTransform::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimHoughTransform::Class_Name()
{
   return "WCSimHoughTransform";
}

//______________________________________________________________________________
const char *WCSimHoughTransform::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimHoughTransform*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimHoughTransform::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimHoughTransform*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimHoughTransform::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimHoughTransform*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimHoughTransform::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimHoughTransform*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimHoughTransformArray::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimHoughTransformArray::Class_Name()
{
   return "WCSimHoughTransformArray";
}

//______________________________________________________________________________
const char *WCSimHoughTransformArray::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimHoughTransformArray*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimHoughTransformArray::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimHoughTransformArray*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimHoughTransformArray::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimHoughTransformArray*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimHoughTransformArray::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimHoughTransformArray*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimDataCleaner::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimDataCleaner::Class_Name()
{
   return "WCSimDataCleaner";
}

//______________________________________________________________________________
const char *WCSimDataCleaner::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimDataCleaner*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimDataCleaner::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimDataCleaner*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimDataCleaner::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimDataCleaner*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimDataCleaner::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimDataCleaner*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimVertexFinder::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimVertexFinder::Class_Name()
{
   return "WCSimVertexFinder";
}

//______________________________________________________________________________
const char *WCSimVertexFinder::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimVertexFinder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimVertexFinder::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimVertexFinder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimVertexFinder::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimVertexFinder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimVertexFinder::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimVertexFinder*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimVertexGeometry::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimVertexGeometry::Class_Name()
{
   return "WCSimVertexGeometry";
}

//______________________________________________________________________________
const char *WCSimVertexGeometry::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimVertexGeometry*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimVertexGeometry::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimVertexGeometry*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimVertexGeometry::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimVertexGeometry*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimVertexGeometry::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimVertexGeometry*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimVertexViewer::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimVertexViewer::Class_Name()
{
   return "WCSimVertexViewer";
}

//______________________________________________________________________________
const char *WCSimVertexViewer::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimVertexViewer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimVertexViewer::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimVertexViewer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimVertexViewer::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimVertexViewer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimVertexViewer::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimVertexViewer*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimRingFinder::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimRingFinder::Class_Name()
{
   return "WCSimRingFinder";
}

//______________________________________________________________________________
const char *WCSimRingFinder::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRingFinder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimRingFinder::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRingFinder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimRingFinder::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRingFinder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimRingFinder::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRingFinder*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimRingViewer::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimRingViewer::Class_Name()
{
   return "WCSimRingViewer";
}

//______________________________________________________________________________
const char *WCSimRingViewer::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRingViewer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimRingViewer::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRingViewer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimRingViewer::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRingViewer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimRingViewer::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRingViewer*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimNtuple::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimNtuple::Class_Name()
{
   return "WCSimNtuple";
}

//______________________________________________________________________________
const char *WCSimNtuple::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimNtuple*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimNtuple::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimNtuple*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimNtuple::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimNtuple*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimNtuple::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimNtuple*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimNtupleFactory::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimNtupleFactory::Class_Name()
{
   return "WCSimNtupleFactory";
}

//______________________________________________________________________________
const char *WCSimNtupleFactory::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimNtupleFactory*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimNtupleFactory::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimNtupleFactory*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimNtupleFactory::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimNtupleFactory*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimNtupleFactory::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimNtupleFactory*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimRecoNtuple::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimRecoNtuple::Class_Name()
{
   return "WCSimRecoNtuple";
}

//______________________________________________________________________________
const char *WCSimRecoNtuple::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoNtuple*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimRecoNtuple::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoNtuple*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimRecoNtuple::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoNtuple*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimRecoNtuple::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoNtuple*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimVertexNtuple::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimVertexNtuple::Class_Name()
{
   return "WCSimVertexNtuple";
}

//______________________________________________________________________________
const char *WCSimVertexNtuple::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimVertexNtuple*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimVertexNtuple::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimVertexNtuple*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimVertexNtuple::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimVertexNtuple*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimVertexNtuple::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimVertexNtuple*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimVertexSeedNtuple::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimVertexSeedNtuple::Class_Name()
{
   return "WCSimVertexSeedNtuple";
}

//______________________________________________________________________________
const char *WCSimVertexSeedNtuple::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimVertexSeedNtuple*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimVertexSeedNtuple::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimVertexSeedNtuple*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimVertexSeedNtuple::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimVertexSeedNtuple*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimVertexSeedNtuple::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimVertexSeedNtuple*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimNtupleWriter::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimNtupleWriter::Class_Name()
{
   return "WCSimNtupleWriter";
}

//______________________________________________________________________________
const char *WCSimNtupleWriter::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimNtupleWriter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimNtupleWriter::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimNtupleWriter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimNtupleWriter::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimNtupleWriter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimNtupleWriter::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimNtupleWriter*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimMsg::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimMsg::Class_Name()
{
   return "WCSimMsg";
}

//______________________________________________________________________________
const char *WCSimMsg::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimMsg*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimMsg::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimMsg*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimMsg::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimMsg*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimMsg::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimMsg*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void WCSimDisplay::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimDisplay.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimDisplay::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimDisplay::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimDisplay::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimDisplay.
      TClass *R__cl = ::WCSimDisplay::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPulseHeightCut", &fPulseHeightCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPrintGIF", &fPrintGIF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPrintEPS", &fPrintEPS);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_WCSimDisplay(void *p) {
      return  p ? new(p) ::WCSimDisplay : new ::WCSimDisplay;
   }
   static void *newArray_WCSimDisplay(Long_t nElements, void *p) {
      return p ? new(p) ::WCSimDisplay[nElements] : new ::WCSimDisplay[nElements];
   }
   // Wrapper around operator delete
   static void delete_WCSimDisplay(void *p) {
      delete ((::WCSimDisplay*)p);
   }
   static void deleteArray_WCSimDisplay(void *p) {
      delete [] ((::WCSimDisplay*)p);
   }
   static void destruct_WCSimDisplay(void *p) {
      typedef ::WCSimDisplay current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimDisplay

//______________________________________________________________________________
void WCSimDisplayFactory::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimDisplayFactory.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimDisplayFactory::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimDisplayFactory::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimDisplayFactory::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimDisplayFactory.
      TClass *R__cl = ::WCSimDisplayFactory::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDisplayAB", &fDisplayAB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDisplayEve", &fDisplayEve);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDisplayVtx", &fDisplayVtx);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
} // end of namespace ROOT for class ::WCSimDisplayFactory

//______________________________________________________________________________
void WCSimDisplayViewer::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimDisplayViewer.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimDisplayViewer::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimDisplayViewer::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimDisplayViewer::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimDisplayViewer.
      TClass *R__cl = ::WCSimDisplayViewer::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRootStyle", &fRootStyle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fControlCanvas", &fControlCanvas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*buttonStart", &buttonStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*buttonNext", &buttonNext);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*buttonPrevious", &buttonPrevious);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*buttonGoTo", &buttonGoTo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*buttonPrint", &buttonPrint);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*buttonQuit", &buttonQuit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCounter", &fCounter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fReco", &fReco);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRecoEvent", &fRecoEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTrueEvent", &fTrueEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunNum", &fRunNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventNum", &fEventNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTriggerNum", &fTriggerNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDisplayRecoClusters", &fDisplayRecoClusters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDisplayRecoEvent", &fDisplayRecoEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDisplayTrueEvent", &fDisplayTrueEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPulseHeightCut", &fPulseHeightCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPrintGIF", &fPrintGIF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPrintEPS", &fPrintEPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDisplayReady", &fDisplayReady);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDisplayNameList", (void*)&fDisplayNameList);
      R__insp.InspectMember("vector<const char*>", (void*)&fDisplayNameList, "fDisplayNameList.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDisplayList", (void*)&fDisplayList);
      R__insp.InspectMember("vector<WCSimDisplay*>", (void*)&fDisplayList, "fDisplayList.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_WCSimDisplayViewer(void *p) {
      return  p ? new(p) ::WCSimDisplayViewer : new ::WCSimDisplayViewer;
   }
   static void *newArray_WCSimDisplayViewer(Long_t nElements, void *p) {
      return p ? new(p) ::WCSimDisplayViewer[nElements] : new ::WCSimDisplayViewer[nElements];
   }
   // Wrapper around operator delete
   static void delete_WCSimDisplayViewer(void *p) {
      delete ((::WCSimDisplayViewer*)p);
   }
   static void deleteArray_WCSimDisplayViewer(void *p) {
      delete [] ((::WCSimDisplayViewer*)p);
   }
   static void destruct_WCSimDisplayViewer(void *p) {
      typedef ::WCSimDisplayViewer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimDisplayViewer

//______________________________________________________________________________
void WCSimDisplayAB::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimDisplayAB.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimDisplayAB::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimDisplayAB::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimDisplayAB::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimDisplayAB.
      TClass *R__cl = ::WCSimDisplayAB::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGeoType", &fGeoType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCylRadius", &fCylRadius);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCylLength", &fCylLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCylDiagonal", &fCylDiagonal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMailBoxX", &fMailBoxX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMailBoxY", &fMailBoxY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMailBoxZ", &fMailBoxZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMailBoxDiagonal", &fMailBoxDiagonal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fScale", &fScale);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunNumber", &fRunNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventNumber", &fEventNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTriggerNumber", &fTriggerNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*wcCanvas", &wcCanvas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*wcDisplay", &wcDisplay);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*wcLegend", &wcLegend);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fU", &fU);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fV", &fV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "canvasWidth", &canvasWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "canvasHeight", &canvasHeight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "canvasU", &canvasU);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "canvasV", &canvasV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "binsWidth", &binsWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "binsU", &binsU);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "binsV", &binsV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*wcCylEdgeSide", &wcCylEdgeSide);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*wcCylEdgeTop", &wcCylEdgeTop);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*wcCylEdgeBottom", &wcCylEdgeBottom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*wcBoxEdgeSide", &wcBoxEdgeSide);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*wcBoxEdgeTop", &wcBoxEdgeTop);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*wcBoxEdgeBottom", &wcBoxEdgeBottom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*wcBoxEdgeLine1", &wcBoxEdgeLine1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*wcBoxEdgeLine2", &wcBoxEdgeLine2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*wcBoxEdgeLine3", &wcBoxEdgeLine3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*wcBoxEdgeLine4", &wcBoxEdgeLine4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wcTitleString", &wcTitleString);
      R__insp.InspectMember(wcTitleString, "wcTitleString.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wcTitleLatex", &wcTitleLatex);
      R__insp.InspectMember(wcTitleLatex, "wcTitleLatex.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "titleU", &titleU);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "titleV", &titleV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMakeTimeDisplay", &fMakeTimeDisplay);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*wcTimeCanvas", &wcTimeCanvas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*wcTimeLegend", &wcTimeLegend);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*wcRecoLegend", &wcRecoLegend);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wcDigits", (void*)&wcDigits);
      R__insp.InspectMember("vector<TMarker*>", (void*)&wcDigits, "wcDigits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wcTimeDigits", (void*)&wcTimeDigits);
      R__insp.InspectMember("vector<TMarker*>", (void*)&wcTimeDigits, "wcTimeDigits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wcCommonDigits", (void*)&wcCommonDigits);
      R__insp.InspectMember("vector<TMarker*>", (void*)&wcCommonDigits, "wcCommonDigits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wcRings", (void*)&wcRings);
      R__insp.InspectMember("vector<TPolyMarker*>", (void*)&wcRings, "wcRings.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "legDigits", (void*)&legDigits);
      R__insp.InspectMember("vector<TMarker*>", (void*)&legDigits, "legDigits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "legRings", (void*)&legRings);
      R__insp.InspectMember("vector<TLine*>", (void*)&legRings, "legRings.", false);
      WCSimDisplay::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_WCSimDisplayAB(void *p) {
      return  p ? new(p) ::WCSimDisplayAB : new ::WCSimDisplayAB;
   }
   static void *newArray_WCSimDisplayAB(Long_t nElements, void *p) {
      return p ? new(p) ::WCSimDisplayAB[nElements] : new ::WCSimDisplayAB[nElements];
   }
   // Wrapper around operator delete
   static void delete_WCSimDisplayAB(void *p) {
      delete ((::WCSimDisplayAB*)p);
   }
   static void deleteArray_WCSimDisplayAB(void *p) {
      delete [] ((::WCSimDisplayAB*)p);
   }
   static void destruct_WCSimDisplayAB(void *p) {
      typedef ::WCSimDisplayAB current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimDisplayAB

//______________________________________________________________________________
void WCSimEveDisplay::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimEveDisplay.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimEveDisplay::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimEveDisplay::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimEveDisplay::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimEveDisplay.
      TClass *R__cl = ::WCSimEveDisplay::IsA();
      if (R__cl || R__insp.IsA()) { }
      WCSimDisplay::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_WCSimEveDisplay(void *p) {
      return  p ? new(p) ::WCSimEveDisplay : new ::WCSimEveDisplay;
   }
   static void *newArray_WCSimEveDisplay(Long_t nElements, void *p) {
      return p ? new(p) ::WCSimEveDisplay[nElements] : new ::WCSimEveDisplay[nElements];
   }
   // Wrapper around operator delete
   static void delete_WCSimEveDisplay(void *p) {
      delete ((::WCSimEveDisplay*)p);
   }
   static void deleteArray_WCSimEveDisplay(void *p) {
      delete [] ((::WCSimEveDisplay*)p);
   }
   static void destruct_WCSimEveDisplay(void *p) {
      typedef ::WCSimEveDisplay current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimEveDisplay

//______________________________________________________________________________
void WCSimVertexViewer::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimVertexViewer.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimVertexViewer::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimVertexViewer::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimVertexViewer::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimVertexViewer.
      TClass *R__cl = ::WCSimVertexViewer::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRbins", &fRbins);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRmin", &fRmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRmax", &fRmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNewRmin", &fNewRmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNewRmax", &fNewRmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLbins", &fLbins);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLmin", &fLmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLmax", &fLmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNewLmin", &fNewLmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNewLmax", &fNewLmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTbins", &fTbins);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTmin", &fTmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTmax", &fTmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNewTmin", &fNewTmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNewTmax", &fNewTmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTitleString", &fTitleString);
      R__insp.InspectMember(fTitleString, "fTitleString.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTitleLatex", &fTitleLatex);
      R__insp.InspectMember(fTitleLatex, "fTitleLatex.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunNumber", &fRunNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventNumber", &fEventNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTriggerNumber", &fTriggerNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVertexCanvas2D", &fVertexCanvas2D);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVertexHistTimeFit", &fVertexHistTimeFit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVertexMarkerDigits", &fVertexMarkerDigits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVertexMarkerFilterDigits", &fVertexMarkerFilterDigits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVertexTimeFit", &fVertexTimeFit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVertexLegend2D", &fVertexLegend2D);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVertexCanvas1D", &fVertexCanvas1D);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVertexHistDigitsAll", &fVertexHistDigitsAll);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVertexHistDigitsCone", &fVertexHistDigitsCone);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVertexHistFilterDigitsCone", &fVertexHistFilterDigitsCone);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVertexLegend1D", &fVertexLegend1D);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTimeCanvas", &fTimeCanvas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTimeHistDigitsAll", &fTimeHistDigitsAll);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTimeHistDigitsCone", &fTimeHistDigitsCone);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTimeHistFilterDigitsCone", &fTimeHistFilterDigitsCone);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTimeLegend", &fTimeLegend);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTransCanvas", &fTransCanvas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTransHistDigits", &fTransHistDigits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTransHistFilterDigits", &fTransHistFilterDigits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTransLegend", &fTransLegend);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLongCanvas", &fLongCanvas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLongHistDigits", &fLongHistDigits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLongHistFilterDigits", &fLongHistFilterDigits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLongLegend", &fLongLegend);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wcVertexDigits", (void*)&wcVertexDigits);
      R__insp.InspectMember("vector<TMarker*>", (void*)&wcVertexDigits, "wcVertexDigits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wcVertexFilterDigits", (void*)&wcVertexFilterDigits);
      R__insp.InspectMember("vector<TMarker*>", (void*)&wcVertexFilterDigits, "wcVertexFilterDigits.", false);
      WCSimDisplay::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_WCSimVertexViewer(void *p) {
      return  p ? new(p) ::WCSimVertexViewer : new ::WCSimVertexViewer;
   }
   static void *newArray_WCSimVertexViewer(Long_t nElements, void *p) {
      return p ? new(p) ::WCSimVertexViewer[nElements] : new ::WCSimVertexViewer[nElements];
   }
   // Wrapper around operator delete
   static void delete_WCSimVertexViewer(void *p) {
      delete ((::WCSimVertexViewer*)p);
   }
   static void deleteArray_WCSimVertexViewer(void *p) {
      delete [] ((::WCSimVertexViewer*)p);
   }
   static void destruct_WCSimVertexViewer(void *p) {
      typedef ::WCSimVertexViewer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimVertexViewer

//______________________________________________________________________________
void WCSimRingViewer::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimRingViewer.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimRingViewer::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimRingViewer::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimRingViewer::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimRingViewer.
      TClass *R__cl = ::WCSimRingViewer::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCanvas", &fCanvas);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_WCSimRingViewer(void *p) {
      return  p ? new(p) ::WCSimRingViewer : new ::WCSimRingViewer;
   }
   static void *newArray_WCSimRingViewer(Long_t nElements, void *p) {
      return p ? new(p) ::WCSimRingViewer[nElements] : new ::WCSimRingViewer[nElements];
   }
   // Wrapper around operator delete
   static void delete_WCSimRingViewer(void *p) {
      delete ((::WCSimRingViewer*)p);
   }
   static void deleteArray_WCSimRingViewer(void *p) {
      delete [] ((::WCSimRingViewer*)p);
   }
   static void destruct_WCSimRingViewer(void *p) {
      typedef ::WCSimRingViewer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimRingViewer

//______________________________________________________________________________
void WCSimEventWriter::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimEventWriter.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimEventWriter::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimEventWriter::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimEventWriter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimEventWriter.
      TClass *R__cl = ::WCSimEventWriter::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fScale", &fScale);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPMTs", &fPMTs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPmtX", &fPmtX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPmtY", &fPmtY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPmtZ", &fPmtZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPmtRegion", &fPmtRegion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRun", &fRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventNumber", &fEventNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSubEventNumber", &fSubEventNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTube", &fTube);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRegion", &fRegion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXpos", &fXpos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYpos", &fYpos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZpos", &fZpos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQPEs", &fQPEs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", &fTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrackNumber", &fTrackNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPdg", &fPdg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFlag", &fFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fM", &fM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fP", &fP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fE", &fE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrkDirX", &fTrkDirX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrkDirY", &fTrkDirY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrkDirZ", &fTrkDirZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVtxX", &fVtxX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVtxY", &fVtxY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVtxZ", &fVtxZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVtxTime", &fVtxTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEndX", &fEndX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEndY", &fEndY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEndZ", &fEndZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPdgParent", &fPdgParent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFileDigits", &fFileDigits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTreeDigits", &fTreeDigits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFileTracks", &fFileTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTreeTracks", &fTreeTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFileGeometry", &fFileGeometry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTreeGeometry", &fTreeGeometry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWriteOutGeometry", &fWriteOutGeometry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWriteOutTracks", &fWriteOutTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWriteOutDigits", &fWriteOutDigits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChain", &fChain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChainGeom", &fChainGeom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEvent", &fEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGeometry", &fGeometry);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_WCSimEventWriter(void *p) {
      return  p ? new(p) ::WCSimEventWriter : new ::WCSimEventWriter;
   }
   static void *newArray_WCSimEventWriter(Long_t nElements, void *p) {
      return p ? new(p) ::WCSimEventWriter[nElements] : new ::WCSimEventWriter[nElements];
   }
   // Wrapper around operator delete
   static void delete_WCSimEventWriter(void *p) {
      delete ((::WCSimEventWriter*)p);
   }
   static void deleteArray_WCSimEventWriter(void *p) {
      delete [] ((::WCSimEventWriter*)p);
   }
   static void destruct_WCSimEventWriter(void *p) {
      typedef ::WCSimEventWriter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimEventWriter

//______________________________________________________________________________
void WCSimGeometry::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimGeometry.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimGeometry::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimGeometry::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimGeometry::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimGeometry.
      TClass *R__cl = ::WCSimGeometry::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fScale", &fScale);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPMTs", &fPMTs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPmtX", &fPmtX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPmtY", &fPmtY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPmtZ", &fPmtZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPmtRegion", &fPmtRegion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPMTRadius", &fPMTRadius);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPMTCoverage", &fPMTCoverage);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPMTSeparation", &fPMTSeparation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPMTSurfaceArea", &fPMTSurfaceArea);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGeoType", &fGeoType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGeoTypeInput", &fGeoTypeInput);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGeoConfig", &fGeoConfig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCylinder", &fCylinder);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCylRadius", &fCylRadius);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCylLength", &fCylLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCylFiducialRadius", &fCylFiducialRadius);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCylFiducialLength", &fCylFiducialLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMailBox", &fMailBox);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMailBoxX", &fMailBoxX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMailBoxY", &fMailBoxY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMailBoxZ", &fMailBoxZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMailBoxFiducialX", &fMailBoxFiducialX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMailBoxFiducialY", &fMailBoxFiducialY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMailBoxFiducialZ", &fMailBoxFiducialZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDetectorArea", &fDetectorArea);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDetectorVolume", &fDetectorVolume);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDetectorFiducialVolume", &fDetectorFiducialVolume);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTube", &fTube);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRegion", &fRegion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXpos", &fXpos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYpos", &fYpos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZpos", &fZpos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fWCSimRootGeom", &fWCSimRootGeom);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
} // end of namespace ROOT for class ::WCSimGeometry

//______________________________________________________________________________
void WCSimInterface::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimInterface.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimInterface::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimInterface::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimInterface::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimInterface.
      TClass *R__cl = ::WCSimInterface::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTrueEvent", &fTrueEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRecoEvent", &fRecoEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDigitList", &fDigitList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTrackList", &fTrackList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChain", &fChain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChainGeom", &fChainGeom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTrigger", &fTrigger);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEvent", &fEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGeometry", &fGeometry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEnergyThreshold", &fEnergyThreshold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRangeThreshold", &fRangeThreshold);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
} // end of namespace ROOT for class ::WCSimInterface

//______________________________________________________________________________
void WCSimParameters::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimParameters.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimParameters::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimParameters::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimParameters::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimParameters.
      TClass *R__cl = ::WCSimParameters::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseSimpleTimeResolution", &fUseSimpleTimeResolution);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseSimpleTimeSlew", &fUseSimpleTimeSlew);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseSimpleRefractiveIndex", &fUseSimpleRefractiveIndex);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
} // end of namespace ROOT for class ::WCSimParameters

//______________________________________________________________________________
void WCSimTrueEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimTrueEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimTrueEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimTrueEvent::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimTrueEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimTrueEvent.
      TClass *R__cl = ::WCSimTrueEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIpdg", &fIpdg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrkP", &fTrkP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrkE", &fTrkE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fG4VtxX", &fG4VtxX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fG4VtxY", &fG4VtxY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fG4VtxZ", &fG4VtxZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fG4EndX", &fG4EndX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fG4EndY", &fG4EndY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fG4EndZ", &fG4EndZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVtxX", &fVtxX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVtxY", &fVtxY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVtxZ", &fVtxZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEndX", &fEndX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEndY", &fEndY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEndZ", &fEndZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDirX", &fDirX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDirY", &fDirY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDirZ", &fDirZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLength", &fLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTrackList", &fTrackList);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_WCSimTrueEvent(void *p) {
      return  p ? new(p) ::WCSimTrueEvent : new ::WCSimTrueEvent;
   }
   static void *newArray_WCSimTrueEvent(Long_t nElements, void *p) {
      return p ? new(p) ::WCSimTrueEvent[nElements] : new ::WCSimTrueEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_WCSimTrueEvent(void *p) {
      delete ((::WCSimTrueEvent*)p);
   }
   static void deleteArray_WCSimTrueEvent(void *p) {
      delete [] ((::WCSimTrueEvent*)p);
   }
   static void destruct_WCSimTrueEvent(void *p) {
      typedef ::WCSimTrueEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimTrueEvent

//______________________________________________________________________________
void WCSimTrueTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimTrueTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimTrueTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimTrueTrack::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimTrueTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimTrueTrack.
      TClass *R__cl = ::WCSimTrueTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIpdg", &fIpdg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIpdgParent", &fIpdgParent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrkP", &fTrkP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrkE", &fTrkE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fG4VtxX", &fG4VtxX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fG4VtxY", &fG4VtxY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fG4VtxZ", &fG4VtxZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fG4EndX", &fG4EndX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fG4EndY", &fG4EndY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fG4EndZ", &fG4EndZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVtxX", &fVtxX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVtxY", &fVtxY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVtxZ", &fVtxZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEndX", &fEndX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEndY", &fEndY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEndZ", &fEndZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDirX", &fDirX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDirY", &fDirY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDirZ", &fDirZ);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_WCSimTrueTrack(void *p) {
      delete ((::WCSimTrueTrack*)p);
   }
   static void deleteArray_WCSimTrueTrack(void *p) {
      delete [] ((::WCSimTrueTrack*)p);
   }
   static void destruct_WCSimTrueTrack(void *p) {
      typedef ::WCSimTrueTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimTrueTrack

//______________________________________________________________________________
void WCSimRecoObjectTable::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimRecoObjectTable.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimRecoObjectTable::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimRecoObjectTable::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimRecoObjectTable::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimRecoObjectTable.
      TClass *R__cl = ::WCSimRecoObjectTable::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numDigits", &numDigits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numClusters", &numClusters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numClusterDigits", &numClusterDigits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numVertices", &numVertices);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numRings", &numRings);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numEvents", &numEvents);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
} // end of namespace ROOT for class ::WCSimRecoObjectTable

//______________________________________________________________________________
void WCSimRecoFactory::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimRecoFactory.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimRecoFactory::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimRecoFactory::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimRecoFactory::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimRecoFactory.
      TClass *R__cl = ::WCSimRecoFactory::IsA();
      if (R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
} // end of namespace ROOT for class ::WCSimRecoFactory

//______________________________________________________________________________
void WCSimReco::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimReco.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimReco::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimReco::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimReco::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimReco.
      TClass *R__cl = ::WCSimReco::IsA();
      if (R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_WCSimReco(void *p) {
      delete ((::WCSimReco*)p);
   }
   static void deleteArray_WCSimReco(void *p) {
      delete [] ((::WCSimReco*)p);
   }
   static void destruct_WCSimReco(void *p) {
      typedef ::WCSimReco current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimReco

//______________________________________________________________________________
void WCSimRecoAB::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimRecoAB.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimRecoAB::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimRecoAB::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimRecoAB::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimRecoAB.
      TClass *R__cl = ::WCSimRecoAB::IsA();
      if (R__cl || R__insp.IsA()) { }
      WCSimReco::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_WCSimRecoAB(void *p) {
      return  p ? new(p) ::WCSimRecoAB : new ::WCSimRecoAB;
   }
   static void *newArray_WCSimRecoAB(Long_t nElements, void *p) {
      return p ? new(p) ::WCSimRecoAB[nElements] : new ::WCSimRecoAB[nElements];
   }
   // Wrapper around operator delete
   static void delete_WCSimRecoAB(void *p) {
      delete ((::WCSimRecoAB*)p);
   }
   static void deleteArray_WCSimRecoAB(void *p) {
      delete [] ((::WCSimRecoAB*)p);
   }
   static void destruct_WCSimRecoAB(void *p) {
      typedef ::WCSimRecoAB current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimRecoAB

//______________________________________________________________________________
void WCSimRecoEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimRecoEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimRecoEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimRecoEvent::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimRecoEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimRecoEvent.
      TClass *R__cl = ::WCSimRecoEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunNum", &fRunNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventNum", &fEventNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTriggerNum", &fTriggerNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDigitList", &fDigitList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFilterDigitList", &fFilterDigitList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRingList", &fRingList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVertex", &fVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsFilterDone", &fIsFilterDone);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsVertexFinderDone", &fIsVertexFinderDone);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsRingFinderDone", &fIsRingFinderDone);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_WCSimRecoEvent(void *p) {
      return  p ? new(p) ::WCSimRecoEvent : new ::WCSimRecoEvent;
   }
   static void *newArray_WCSimRecoEvent(Long_t nElements, void *p) {
      return p ? new(p) ::WCSimRecoEvent[nElements] : new ::WCSimRecoEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_WCSimRecoEvent(void *p) {
      delete ((::WCSimRecoEvent*)p);
   }
   static void deleteArray_WCSimRecoEvent(void *p) {
      delete [] ((::WCSimRecoEvent*)p);
   }
   static void destruct_WCSimRecoEvent(void *p) {
      typedef ::WCSimRecoEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimRecoEvent

//______________________________________________________________________________
void WCSimRecoDigit::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimRecoDigit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimRecoDigit::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimRecoDigit::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimRecoDigit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimRecoDigit.
      TClass *R__cl = ::WCSimRecoDigit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRegion", &fRegion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fX", &fX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fY", &fY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZ", &fZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRawTime", &fRawTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRawQPEs", &fRawQPEs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalTime", &fCalTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalQPEs", &fCalQPEs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsFiltered", &fIsFiltered);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_WCSimRecoDigit(void *p) {
      delete ((::WCSimRecoDigit*)p);
   }
   static void deleteArray_WCSimRecoDigit(void *p) {
      delete [] ((::WCSimRecoDigit*)p);
   }
   static void destruct_WCSimRecoDigit(void *p) {
      typedef ::WCSimRecoDigit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimRecoDigit

//______________________________________________________________________________
void WCSimRecoCluster::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimRecoCluster.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimRecoCluster::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimRecoCluster::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimRecoCluster::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimRecoCluster.
      TClass *R__cl = ::WCSimRecoCluster::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDigitList", (void*)&fDigitList);
      R__insp.InspectMember("vector<WCSimRecoDigit*>", (void*)&fDigitList, "fDigitList.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_WCSimRecoCluster(void *p) {
      return  p ? new(p) ::WCSimRecoCluster : new ::WCSimRecoCluster;
   }
   static void *newArray_WCSimRecoCluster(Long_t nElements, void *p) {
      return p ? new(p) ::WCSimRecoCluster[nElements] : new ::WCSimRecoCluster[nElements];
   }
   // Wrapper around operator delete
   static void delete_WCSimRecoCluster(void *p) {
      delete ((::WCSimRecoCluster*)p);
   }
   static void deleteArray_WCSimRecoCluster(void *p) {
      delete [] ((::WCSimRecoCluster*)p);
   }
   static void destruct_WCSimRecoCluster(void *p) {
      typedef ::WCSimRecoCluster current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimRecoCluster

//______________________________________________________________________________
void WCSimRecoClusterDigit::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimRecoClusterDigit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimRecoClusterDigit::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimRecoClusterDigit::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimRecoClusterDigit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimRecoClusterDigit.
      TClass *R__cl = ::WCSimRecoClusterDigit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsClustered", &fIsClustered);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsAllClustered", &fIsAllClustered);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRecoDigit", &fRecoDigit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fClusterDigitList", &fClusterDigitList);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_WCSimRecoClusterDigit(void *p) {
      delete ((::WCSimRecoClusterDigit*)p);
   }
   static void deleteArray_WCSimRecoClusterDigit(void *p) {
      delete [] ((::WCSimRecoClusterDigit*)p);
   }
   static void destruct_WCSimRecoClusterDigit(void *p) {
      typedef ::WCSimRecoClusterDigit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimRecoClusterDigit

//______________________________________________________________________________
void WCSimRecoRing::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimRecoRing.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimRecoRing::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimRecoRing::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimRecoRing::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimRecoRing.
      TClass *R__cl = ::WCSimRecoRing::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVtxX", &fVtxX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVtxY", &fVtxY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVtxZ", &fVtxZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDirX", &fDirX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDirY", &fDirY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDirZ", &fDirZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAngle", &fAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHeight", &fHeight);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_WCSimRecoRing(void *p) {
      delete ((::WCSimRecoRing*)p);
   }
   static void deleteArray_WCSimRecoRing(void *p) {
      delete [] ((::WCSimRecoRing*)p);
   }
   static void destruct_WCSimRecoRing(void *p) {
      typedef ::WCSimRecoRing current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimRecoRing

//______________________________________________________________________________
void WCSimRecoVertex::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimRecoVertex.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimRecoVertex::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimRecoVertex::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimRecoVertex::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimRecoVertex.
      TClass *R__cl = ::WCSimRecoVertex::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fX", &fX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fY", &fY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZ", &fZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", &fTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFoundVertex", &fFoundVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDirX", &fDirX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDirY", &fDirY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDirZ", &fDirZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFoundDirection", &fFoundDirection);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fConeAngle", &fConeAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrackLength", &fTrackLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFOM", &fFOM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIterations", &fIterations);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPass", &fPass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStatus", &fStatus);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_WCSimRecoVertex(void *p) {
      return  p ? new(p) ::WCSimRecoVertex : new ::WCSimRecoVertex;
   }
   static void *newArray_WCSimRecoVertex(Long_t nElements, void *p) {
      return p ? new(p) ::WCSimRecoVertex[nElements] : new ::WCSimRecoVertex[nElements];
   }
   // Wrapper around operator delete
   static void delete_WCSimRecoVertex(void *p) {
      delete ((::WCSimRecoVertex*)p);
   }
   static void deleteArray_WCSimRecoVertex(void *p) {
      delete [] ((::WCSimRecoVertex*)p);
   }
   static void destruct_WCSimRecoVertex(void *p) {
      typedef ::WCSimRecoVertex current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimRecoVertex

//______________________________________________________________________________
void WCSimVertexFinder::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimVertexFinder.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimVertexFinder::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimVertexFinder::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimVertexFinder::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimVertexFinder.
      TClass *R__cl = ::WCSimVertexFinder::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBaseFOM", &fBaseFOM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPointFitOnly", &fPointFitOnly);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseTrueVertex", &fUseTrueVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseTruePosition", &fUseTruePosition);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseTrueDirection", &fUseTrueDirection);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSeedWithTrueVertex", &fSeedWithTrueVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSeedWithSimpleVertex", &fSeedWithSimpleVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSeedWithQuadruples", &fSeedWithQuadruples);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumSeeds", &fNumSeeds);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeFitWeight", &fTimeFitWeight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fConeFitWeight", &fConeFitWeight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFixVertexBias", &fFixVertexBias);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVertexBias", &fVertexBias);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInputVtxX", &fInputVtxX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInputVtxY", &fInputVtxY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInputVtxZ", &fInputVtxZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInputVtxTime", &fInputVtxTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInputDirX", &fInputDirX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInputDirY", &fInputDirY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInputDirZ", &fInputDirZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInputVtxFOM", &fInputVtxFOM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSimplePosition", &fSimplePosition);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSimpleDirection", &fSimpleDirection);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPointPosition", &fPointPosition);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPointDirection", &fPointDirection);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPointVertex", &fPointVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fExtendedVertex", &fExtendedVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMinuitPointPosition", &fMinuitPointPosition);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMinuitPointDirection", &fMinuitPointDirection);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMinuitPointVertex", &fMinuitPointVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMinuitExtendedVertex", &fMinuitExtendedVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMinuitTimeFit", &fMinuitTimeFit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMinuitConeFit", &fMinuitConeFit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPass", &fPass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fItr", &fItr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeFitItr", &fTimeFitItr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fConeFitItr", &fConeFitItr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPointPosItr", &fPointPosItr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPointDirItr", &fPointDirItr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPointVtxItr", &fPointVtxItr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fExtendedVtxItr", &fExtendedVtxItr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSconeA", &fSconeA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSconeB", &fSconeB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSmu", &fSmu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSel", &fSel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIntegralsDone", &fIntegralsDone);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vVertexList", (void*)&vVertexList);
      R__insp.InspectMember("vector<WCSimRecoVertex*>", (void*)&vVertexList, "vVertexList.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVtxX", &fVtxX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVtxY", &fVtxY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVtxZ", &fVtxZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVtxTime", &fVtxTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDirX", &fDirX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDirY", &fDirY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDirZ", &fDirZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVtxFOM", &fVtxFOM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFitTimeParams", &fFitTimeParams);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFixTimeParam0", &fFixTimeParam0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFitConeParams", &fFitConeParams);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFixConeParam0", &fFixConeParam0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFixConeParam1", &fFixConeParam1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFixConeParam2", &fFixConeParam2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeParam0", &fTimeParam0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fConeParam0", &fConeParam0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fConeParam1", &fConeParam1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fConeParam2", &fConeParam2);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
} // end of namespace ROOT for class ::WCSimVertexFinder

//______________________________________________________________________________
void WCSimRingFinder::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimRingFinder.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimRingFinder::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimRingFinder::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimRingFinder::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimRingFinder.
      TClass *R__cl = ::WCSimRingFinder::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseVertex", &fUseVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseTSpectrum2", &fUseTSpectrum2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHoughX", &fHoughX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHoughY", &fHoughY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHoughPoints", &fHoughPoints);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fConeAngleBins", &fConeAngleBins);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fConeAngleMin", &fConeAngleMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fConeAngleMax", &fConeAngleMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHoughTransform", &fHoughTransform);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHoughTransformArray", &fHoughTransformArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRingList", &fRingList);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
} // end of namespace ROOT for class ::WCSimRingFinder

//______________________________________________________________________________
void WCSimDataCleaner::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimDataCleaner.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimDataCleaner::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimDataCleaner::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimDataCleaner::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimDataCleaner.
      TClass *R__cl = ::WCSimDataCleaner::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fConfig", &fConfig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMinPulseHeight", &fMinPulseHeight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNeighbourRadius", &fNeighbourRadius);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMinNeighbourDigits", &fMinNeighbourDigits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fClusterRadius", &fClusterRadius);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMinClusterDigits", &fMinClusterDigits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeWindow", &fTimeWindow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vClusterList", (void*)&vClusterList);
      R__insp.InspectMember("vector<WCSimRecoCluster*>", (void*)&vClusterList, "vClusterList.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vClusterDigitList", (void*)&vClusterDigitList);
      R__insp.InspectMember("vector<WCSimRecoClusterDigit*>", (void*)&vClusterDigitList, "vClusterDigitList.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vClusterDigitCollection", (void*)&vClusterDigitCollection);
      R__insp.InspectMember("vector<WCSimRecoClusterDigit*>", (void*)&vClusterDigitCollection, "vClusterDigitCollection.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFilterAll", &fFilterAll);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFilterByPulseHeight", &fFilterByPulseHeight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFilterByNeighbours", &fFilterByNeighbours);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFilterByClusters", &fFilterByClusters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fClusterList", &fClusterList);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
} // end of namespace ROOT for class ::WCSimDataCleaner

//______________________________________________________________________________
void WCSimVertexGeometry::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimVertexGeometry.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimVertexGeometry::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimVertexGeometry::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimVertexGeometry::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimVertexGeometry.
      TClass *R__cl = ::WCSimVertexGeometry::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunNum", &fRunNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventNum", &fEventNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTriggerNum", &fTriggerNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPMTs", &fPMTs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNDigits", &fNDigits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNFilterDigits", &fNFilterDigits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fThisDigit", &fThisDigit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLastEntry", &fLastEntry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCounter", &fCounter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVtxX1", &fVtxX1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVtxY1", &fVtxY1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVtxZ1", &fVtxZ1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVtxTime1", &fVtxTime1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVtxX2", &fVtxX2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVtxY2", &fVtxY2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVtxZ2", &fVtxZ2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVtxTime2", &fVtxTime2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanQ", &fMeanQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTotalQ", &fTotalQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanFilteredQ", &fMeanFilteredQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTotalFilteredQ", &fTotalFilteredQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMinTime", &fMinTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxTime", &fMaxTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIsFiltered", &fIsFiltered);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDigitX", &fDigitX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDigitY", &fDigitY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDigitZ", &fDigitZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDigitT", &fDigitT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDigitQ", &fDigitQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fZenith", &fZenith);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAzimuth", &fAzimuth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSolidAngle", &fSolidAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fConeAngle", &fConeAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDistPoint", &fDistPoint);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDistTrack", &fDistTrack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDistPhoton", &fDistPhoton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDistScatter", &fDistScatter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDeltaTime", &fDeltaTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDeltaSigma", &fDeltaSigma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDeltaAngle", &fDeltaAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDeltaPoint", &fDeltaPoint);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDeltaTrack", &fDeltaTrack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDeltaPhoton", &fDeltaPhoton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDeltaScatter", &fDeltaScatter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPointPath", &fPointPath);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fExtendedPath", &fExtendedPath);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPointResidual", &fPointResidual);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fExtendedResidual", &fExtendedResidual);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDelta", &fDelta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vSeedVtxX", (void*)&vSeedVtxX);
      R__insp.InspectMember("vector<Double_t>", (void*)&vSeedVtxX, "vSeedVtxX.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vSeedVtxY", (void*)&vSeedVtxY);
      R__insp.InspectMember("vector<Double_t>", (void*)&vSeedVtxY, "vSeedVtxY.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vSeedVtxZ", (void*)&vSeedVtxZ);
      R__insp.InspectMember("vector<Double_t>", (void*)&vSeedVtxZ, "vSeedVtxZ.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vSeedVtxTime", (void*)&vSeedVtxTime);
      R__insp.InspectMember("vector<Double_t>", (void*)&vSeedVtxTime, "vSeedVtxTime.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vSeedDigitList", (void*)&vSeedDigitList);
      R__insp.InspectMember("vector<Int_t>", (void*)&vSeedDigitList, "vSeedDigitList.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vVertexList", (void*)&vVertexList);
      R__insp.InspectMember("vector<WCSimRecoVertex*>", (void*)&vVertexList, "vVertexList.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
} // end of namespace ROOT for class ::WCSimVertexGeometry

//______________________________________________________________________________
void WCSimHoughTransform::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimHoughTransform.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimHoughTransform::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimHoughTransform::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimHoughTransform::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimHoughTransform.
      TClass *R__cl = ::WCSimHoughTransform::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEntries", &fEntries);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIntegral", &fIntegral);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXbins", &fXbins);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYbins", &fYbins);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHoughArray", &fHoughArray);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_WCSimHoughTransform(void *p) {
      delete ((::WCSimHoughTransform*)p);
   }
   static void deleteArray_WCSimHoughTransform(void *p) {
      delete [] ((::WCSimHoughTransform*)p);
   }
   static void destruct_WCSimHoughTransform(void *p) {
      typedef ::WCSimHoughTransform current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimHoughTransform

//______________________________________________________________________________
void WCSimHoughTransformArray::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimHoughTransformArray.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimHoughTransformArray::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimHoughTransformArray::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimHoughTransformArray::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimHoughTransformArray.
      TClass *R__cl = ::WCSimHoughTransformArray::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHoughX", &fHoughX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHoughY", &fHoughY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fConeAngleBins", &fConeAngleBins);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fConeAngleMin", &fConeAngleMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fConeAngleMax", &fConeAngleMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHoughArray", (void*)&fHoughArray);
      R__insp.InspectMember("vector<WCSimHoughTransform*>", (void*)&fHoughArray, "fHoughArray.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_WCSimHoughTransformArray(void *p) {
      delete ((::WCSimHoughTransformArray*)p);
   }
   static void deleteArray_WCSimHoughTransformArray(void *p) {
      delete [] ((::WCSimHoughTransformArray*)p);
   }
   static void destruct_WCSimHoughTransformArray(void *p) {
      typedef ::WCSimHoughTransformArray current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimHoughTransformArray

//______________________________________________________________________________
void WCSimNtupleFactory::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimNtupleFactory.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimNtupleFactory::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimNtupleFactory::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimNtupleFactory::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimNtupleFactory.
      TClass *R__cl = ::WCSimNtupleFactory::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRecoNtuple", &fRecoNtuple);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVertexNtuple", &fVertexNtuple);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVertexSeedNtuple", &fVertexSeedNtuple);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
} // end of namespace ROOT for class ::WCSimNtupleFactory

//______________________________________________________________________________
void WCSimNtupleWriter::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimNtupleWriter.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimNtupleWriter::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimNtupleWriter::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimNtupleWriter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimNtupleWriter.
      TClass *R__cl = ::WCSimNtupleWriter::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fReco", &fReco);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRecoEvent", &fRecoEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTrueEvent", &fTrueEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNtuple", &fNtuple);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNtupleName", &fNtupleName);
      R__insp.InspectMember(fNtupleName, "fNtupleName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNtpFileName", &fNtpFileName);
      R__insp.InspectMember(fNtpFileName, "fNtpFileName.");
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_WCSimNtupleWriter(void *p) {
      return  p ? new(p) ::WCSimNtupleWriter : new ::WCSimNtupleWriter;
   }
   static void *newArray_WCSimNtupleWriter(Long_t nElements, void *p) {
      return p ? new(p) ::WCSimNtupleWriter[nElements] : new ::WCSimNtupleWriter[nElements];
   }
   // Wrapper around operator delete
   static void delete_WCSimNtupleWriter(void *p) {
      delete ((::WCSimNtupleWriter*)p);
   }
   static void deleteArray_WCSimNtupleWriter(void *p) {
      delete [] ((::WCSimNtupleWriter*)p);
   }
   static void destruct_WCSimNtupleWriter(void *p) {
      typedef ::WCSimNtupleWriter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimNtupleWriter

//______________________________________________________________________________
void WCSimNtuple::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimNtuple.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimNtuple::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimNtuple::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimNtuple::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimNtuple.
      TClass *R__cl = ::WCSimNtuple::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNtpFileName", &fNtpFileName);
      R__insp.InspectMember(fNtpFileName, "fNtpFileName.");
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_WCSimNtuple(void *p) {
      return  p ? new(p) ::WCSimNtuple : new ::WCSimNtuple;
   }
   static void *newArray_WCSimNtuple(Long_t nElements, void *p) {
      return p ? new(p) ::WCSimNtuple[nElements] : new ::WCSimNtuple[nElements];
   }
   // Wrapper around operator delete
   static void delete_WCSimNtuple(void *p) {
      delete ((::WCSimNtuple*)p);
   }
   static void deleteArray_WCSimNtuple(void *p) {
      delete [] ((::WCSimNtuple*)p);
   }
   static void destruct_WCSimNtuple(void *p) {
      typedef ::WCSimNtuple current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimNtuple

//______________________________________________________________________________
void WCSimRecoNtuple::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimRecoNtuple.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimRecoNtuple::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimRecoNtuple::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimRecoNtuple::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimRecoNtuple.
      TClass *R__cl = ::WCSimRecoNtuple::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRecoFile", &fRecoFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRecoTree", &fRecoTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunNum", &fRunNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventNum", &fEventNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTriggerNum", &fTriggerNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTruePDG", &fTruePDG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrueP", &fTrueP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrueE", &fTrueE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrueG4VtxX", &fTrueG4VtxX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrueG4VtxY", &fTrueG4VtxY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrueG4VtxZ", &fTrueG4VtxZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrueG4EndX", &fTrueG4EndX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrueG4EndY", &fTrueG4EndY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrueG4EndZ", &fTrueG4EndZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrueVtxX", &fTrueVtxX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrueVtxY", &fTrueVtxY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrueVtxZ", &fTrueVtxZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrueEndX", &fTrueEndX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrueEndY", &fTrueEndY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrueEndZ", &fTrueEndZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrueDirX", &fTrueDirX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrueDirY", &fTrueDirY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrueDirZ", &fTrueDirZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrueLength", &fTrueLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrueVtxTraceFwd", &fTrueVtxTraceFwd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrueVtxTraceBwd", &fTrueVtxTraceBwd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrueVtxDistToEdge", &fTrueVtxDistToEdge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrueEndDistToEdge", &fTrueEndDistToEdge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrueTrackPDG[1000]", fTrueTrackPDG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrueTrackParentPDG[1000]", fTrueTrackParentPDG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrueTrackVtxX[1000]", fTrueTrackVtxX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrueTrackVtxY[1000]", fTrueTrackVtxY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrueTrackVtxZ[1000]", fTrueTrackVtxZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrueTrackDirX[1000]", fTrueTrackDirX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrueTrackDirY[1000]", fTrueTrackDirY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrueTrackDirZ[1000]", fTrueTrackDirZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNDigits", &fNDigits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNFilterDigits", &fNFilterDigits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNRings", &fNRings);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFoundVertex", &fFoundVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFoundDirection", &fFoundDirection);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFoundRings", &fFoundRings);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecoVtxX", &fRecoVtxX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecoVtxY", &fRecoVtxY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecoVtxZ", &fRecoVtxZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecoVtxTime", &fRecoVtxTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecoDirX", &fRecoDirX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecoDirY", &fRecoDirY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecoDirZ", &fRecoDirZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecoConeAngle", &fRecoConeAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecoTrackLength", &fRecoTrackLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecoVtxFOM", &fRecoVtxFOM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecoVtxSteps", &fRecoVtxSteps);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecoVtxPass", &fRecoVtxPass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecoVtxStatus", &fRecoVtxStatus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecoVtxTraceFwd", &fRecoVtxTraceFwd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecoVtxTraceBwd", &fRecoVtxTraceBwd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecoVtxDistToEdge", &fRecoVtxDistToEdge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecoRingVtxX", &fRecoRingVtxX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecoRingVtxY", &fRecoRingVtxY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecoRingVtxZ", &fRecoRingVtxZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecoRingDirX", &fRecoRingDirX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecoRingDirY", &fRecoRingDirY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecoRingDirZ", &fRecoRingDirZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecoRingAngle", &fRecoRingAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecoRingHeight", &fRecoRingHeight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecoRingHeightFrac", &fRecoRingHeightFrac);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecoDelta", &fRecoDelta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecoDeltaTrans", &fRecoDeltaTrans);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecoDeltaLong", &fRecoDeltaLong);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecoDeltaAngle", &fRecoDeltaAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecoRingDeltaAngle", &fRecoRingDeltaAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSimplePositionX", &fSimplePositionX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSimplePositionY", &fSimplePositionY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSimplePositionZ", &fSimplePositionZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSimplePositionDelta", &fSimplePositionDelta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSimplePositionDeltaTrans", &fSimplePositionDeltaTrans);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSimplePositionDeltaLong", &fSimplePositionDeltaLong);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPointPositionX", &fPointPositionX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPointPositionY", &fPointPositionY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPointPositionZ", &fPointPositionZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPointPositionFOM", &fPointPositionFOM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPointPositionSteps", &fPointPositionSteps);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPointPositionPass", &fPointPositionPass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPointPositionDelta", &fPointPositionDelta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPointPositionDeltaTrans", &fPointPositionDeltaTrans);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPointPositionDeltaLong", &fPointPositionDeltaLong);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSimpleDirectionX", &fSimpleDirectionX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSimpleDirectionY", &fSimpleDirectionY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSimpleDirectionZ", &fSimpleDirectionZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSimpleDirectionDeltaAngle", &fSimpleDirectionDeltaAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPointDirectionX", &fPointDirectionX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPointDirectionY", &fPointDirectionY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPointDirectionZ", &fPointDirectionZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPointDirectionFOM", &fPointDirectionFOM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPointDirectionSteps", &fPointDirectionSteps);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPointDirectionPass", &fPointDirectionPass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPointDirectionDeltaAngle", &fPointDirectionDeltaAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPointVtxX", &fPointVtxX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPointVtxY", &fPointVtxY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPointVtxZ", &fPointVtxZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPointDirX", &fPointDirX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPointDirY", &fPointDirY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPointDirZ", &fPointDirZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPointConeAngle", &fPointConeAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPointTrackLength", &fPointTrackLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPointVtxFOM", &fPointVtxFOM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPointVtxSteps", &fPointVtxSteps);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPointVtxPass", &fPointVtxPass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPointVtxDelta", &fPointVtxDelta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPointVtxDeltaTrans", &fPointVtxDeltaTrans);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPointVtxDeltaLong", &fPointVtxDeltaLong);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPointVtxDeltaAngle", &fPointVtxDeltaAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fExtendedVtxX", &fExtendedVtxX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fExtendedVtxY", &fExtendedVtxY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fExtendedVtxZ", &fExtendedVtxZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fExtendedDirX", &fExtendedDirX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fExtendedDirY", &fExtendedDirY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fExtendedDirZ", &fExtendedDirZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fExtendedConeAngle", &fExtendedConeAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fExtendedTrackLength", &fExtendedTrackLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fExtendedVtxFOM", &fExtendedVtxFOM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fExtendedVtxSteps", &fExtendedVtxSteps);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fExtendedVtxPass", &fExtendedVtxPass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fExtendedVtxDelta", &fExtendedVtxDelta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fExtendedVtxDeltaTrans", &fExtendedVtxDeltaTrans);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fExtendedVtxDeltaLong", &fExtendedVtxDeltaLong);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fExtendedVtxDeltaAngle", &fExtendedVtxDeltaAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fExtendedVtxTimeParam0", &fExtendedVtxTimeParam0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fExtendedVtxConeParam0", &fExtendedVtxConeParam0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fExtendedVtxConeParam1", &fExtendedVtxConeParam1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fExtendedVtxConeParam2", &fExtendedVtxConeParam2);
      WCSimNtuple::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_WCSimRecoNtuple(void *p) {
      return  p ? new(p) ::WCSimRecoNtuple : new ::WCSimRecoNtuple;
   }
   static void *newArray_WCSimRecoNtuple(Long_t nElements, void *p) {
      return p ? new(p) ::WCSimRecoNtuple[nElements] : new ::WCSimRecoNtuple[nElements];
   }
   // Wrapper around operator delete
   static void delete_WCSimRecoNtuple(void *p) {
      delete ((::WCSimRecoNtuple*)p);
   }
   static void deleteArray_WCSimRecoNtuple(void *p) {
      delete [] ((::WCSimRecoNtuple*)p);
   }
   static void destruct_WCSimRecoNtuple(void *p) {
      typedef ::WCSimRecoNtuple current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimRecoNtuple

//______________________________________________________________________________
void WCSimVertexNtuple::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimVertexNtuple.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimVertexNtuple::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimVertexNtuple::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimVertexNtuple::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimVertexNtuple.
      TClass *R__cl = ::WCSimVertexNtuple::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRecoFile", &fRecoFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRecoTree", &fRecoTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecoFileName", &fRecoFileName);
      R__insp.InspectMember(fRecoFileName, "fRecoFileName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunNum", &fRunNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventNum", &fEventNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTriggerNum", &fTriggerNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVtxX", &fVtxX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVtxY", &fVtxY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVtxZ", &fVtxZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVtxTime", &fVtxTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDirX", &fDirX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDirY", &fDirY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDirZ", &fDirZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrueVtxX", &fTrueVtxX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrueVtxY", &fTrueVtxY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrueVtxZ", &fTrueVtxZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrueDirX", &fTrueDirX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrueDirY", &fTrueDirY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrueDirZ", &fTrueDirZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrueLength", &fTrueLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "index", &index);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "last", &last);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsFiltered", &fIsFiltered);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDigitX", &fDigitX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDigitY", &fDigitY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDigitZ", &fDigitZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDigitT", &fDigitT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDigitQ", &fDigitQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fConeAngle", &fConeAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAngle", &fAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZenith", &fZenith);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAzimuth", &fAzimuth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSolidAngle", &fSolidAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDistPoint", &fDistPoint);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDistTrack", &fDistTrack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDistPhoton", &fDistPhoton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDistScatter", &fDistScatter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDeltaTime", &fDeltaTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDeltaSigma", &fDeltaSigma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDeltaAngle", &fDeltaAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDeltaPoint", &fDeltaPoint);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDeltaTrack", &fDeltaTrack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDeltaPhoton", &fDeltaPhoton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDeltaScatter", &fDeltaScatter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPointPath", &fPointPath);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fExtendedPath", &fExtendedPath);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPointResidual", &fPointResidual);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fExtendedResidual", &fExtendedResidual);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fExtendedResidualCorrected", &fExtendedResidualCorrected);
      WCSimNtuple::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_WCSimVertexNtuple(void *p) {
      return  p ? new(p) ::WCSimVertexNtuple : new ::WCSimVertexNtuple;
   }
   static void *newArray_WCSimVertexNtuple(Long_t nElements, void *p) {
      return p ? new(p) ::WCSimVertexNtuple[nElements] : new ::WCSimVertexNtuple[nElements];
   }
   // Wrapper around operator delete
   static void delete_WCSimVertexNtuple(void *p) {
      delete ((::WCSimVertexNtuple*)p);
   }
   static void deleteArray_WCSimVertexNtuple(void *p) {
      delete [] ((::WCSimVertexNtuple*)p);
   }
   static void destruct_WCSimVertexNtuple(void *p) {
      typedef ::WCSimVertexNtuple current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimVertexNtuple

//______________________________________________________________________________
void WCSimVertexSeedNtuple::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimVertexSeedNtuple.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimVertexSeedNtuple::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimVertexSeedNtuple::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimVertexSeedNtuple::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimVertexSeedNtuple.
      TClass *R__cl = ::WCSimVertexSeedNtuple::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRecoFile", &fRecoFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRecoTree", &fRecoTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecoFileName", &fRecoFileName);
      R__insp.InspectMember(fRecoFileName, "fRecoFileName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunNum", &fRunNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventNum", &fEventNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTriggerNum", &fTriggerNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "index", &index);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "last", &last);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrueVtxX", &fTrueVtxX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrueVtxY", &fTrueVtxY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrueVtxZ", &fTrueVtxZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrueDirX", &fTrueDirX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrueDirY", &fTrueDirY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrueDirZ", &fTrueDirZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecoVtxX", &fRecoVtxX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecoVtxY", &fRecoVtxY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecoVtxZ", &fRecoVtxZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecoVtxTime", &fRecoVtxTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecoDelta", &fRecoDelta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecoDeltaTrans", &fRecoDeltaTrans);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecoDeltaLong", &fRecoDeltaLong);
      WCSimNtuple::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_WCSimVertexSeedNtuple(void *p) {
      return  p ? new(p) ::WCSimVertexSeedNtuple : new ::WCSimVertexSeedNtuple;
   }
   static void *newArray_WCSimVertexSeedNtuple(Long_t nElements, void *p) {
      return p ? new(p) ::WCSimVertexSeedNtuple[nElements] : new ::WCSimVertexSeedNtuple[nElements];
   }
   // Wrapper around operator delete
   static void delete_WCSimVertexSeedNtuple(void *p) {
      delete ((::WCSimVertexSeedNtuple*)p);
   }
   static void deleteArray_WCSimVertexSeedNtuple(void *p) {
      delete [] ((::WCSimVertexSeedNtuple*)p);
   }
   static void destruct_WCSimVertexSeedNtuple(void *p) {
      typedef ::WCSimVertexSeedNtuple current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimVertexSeedNtuple

//______________________________________________________________________________
void WCSimMsg::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimMsg.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimMsg::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimMsg::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimMsg::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimMsg.
      TClass *R__cl = ::WCSimMsg::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMinLevel", &fMinLevel);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
} // end of namespace ROOT for class ::WCSimMsg

//______________________________________________________________________________
namespace ROOT {
   void WCSimLikelihoodFitter_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class WCSimLikelihoodFitter.
      typedef ::ROOT::Shadow::WCSimLikelihoodFitter ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::WCSimLikelihoodFitter*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRootEvent", &sobj->fRootEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTrack", &sobj->fTrack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecoDigitList", (void*)&sobj->fRecoDigitList);
      R__insp.InspectMember("vector<WCSimRecoDigit*>", (void*)&sobj->fRecoDigitList, "fRecoDigitList.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLikelihoodDigitArray", &sobj->fLikelihoodDigitArray);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_WCSimLikelihoodFitter(void *p) {
      delete ((::WCSimLikelihoodFitter*)p);
   }
   static void deleteArray_WCSimLikelihoodFitter(void *p) {
      delete [] ((::WCSimLikelihoodFitter*)p);
   }
   static void destruct_WCSimLikelihoodFitter(void *p) {
      typedef ::WCSimLikelihoodFitter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimLikelihoodFitter

//______________________________________________________________________________
namespace ROOT {
   void WCSimLikelihoodTuner_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class WCSimLikelihoodTuner.
      typedef ::ROOT::Shadow::WCSimLikelihoodTuner ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::WCSimLikelihoodTuner*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDirCoeffs[3]", sobj->fDirCoeffs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIndCoeffs[3]", sobj->fIndCoeffs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fProfileLocation", &sobj->fProfileLocation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fProfiles", &sobj->fProfiles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsOpen", &sobj->fIsOpen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHistArray", &sobj->fHistArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAngHistArray", &sobj->fAngHistArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFluxArray", &sobj->fFluxArray);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_WCSimLikelihoodTuner(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::WCSimLikelihoodTuner : new ::WCSimLikelihoodTuner;
   }
   static void *newArray_WCSimLikelihoodTuner(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::WCSimLikelihoodTuner[nElements] : new ::WCSimLikelihoodTuner[nElements];
   }
   // Wrapper around operator delete
   static void delete_WCSimLikelihoodTuner(void *p) {
      delete ((::WCSimLikelihoodTuner*)p);
   }
   static void deleteArray_WCSimLikelihoodTuner(void *p) {
      delete [] ((::WCSimLikelihoodTuner*)p);
   }
   static void destruct_WCSimLikelihoodTuner(void *p) {
      typedef ::WCSimLikelihoodTuner current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimLikelihoodTuner

//______________________________________________________________________________
namespace ROOT {
   void WCSimChargeLikelihood_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class WCSimChargeLikelihood.
      typedef ::ROOT::Shadow::WCSimChargeLikelihood ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::WCSimChargeLikelihood*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCoeffsCh", (void*)&sobj->fCoeffsCh);
      R__insp.InspectMember("vector<Double_t>", (void*)&sobj->fCoeffsCh, "fCoeffsCh.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCoeffsInd", (void*)&sobj->fCoeffsInd);
      R__insp.InspectMember("vector<Double_t>", (void*)&sobj->fCoeffsInd, "fCoeffsInd.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEnergy", &sobj->fEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fR0", &sobj->fR0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCosTheta0", &sobj->fCosTheta0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEta", &sobj->fEta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEnergyInterval", &sobj->fEnergyInterval);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fR0Interval", &sobj->fR0Interval);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCosTheta0Interval", &sobj->fCosTheta0Interval);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChIntegral[100][1000][100]", sobj->fChIntegral);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIndIntegral[100]", sobj->fIndIntegral);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRadius", &sobj->fRadius);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAngle", &sobj->fAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTheta", &sobj->fTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhi", &sobj->fPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTrack", &sobj->fTrack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDigitArray", &sobj->fDigitArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDigit", &sobj->fDigit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTuner", &sobj->fTuner);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGotTrackParameters", &sobj->fGotTrackParameters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalculateIntegrals", &sobj->fCalculateIntegrals);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_WCSimChargeLikelihood(void *p) {
      delete ((::WCSimChargeLikelihood*)p);
   }
   static void deleteArray_WCSimChargeLikelihood(void *p) {
      delete [] ((::WCSimChargeLikelihood*)p);
   }
   static void destruct_WCSimChargeLikelihood(void *p) {
      typedef ::WCSimChargeLikelihood current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimChargeLikelihood

//______________________________________________________________________________
void WCSimLikelihoodDigit::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimLikelihoodDigit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimLikelihoodDigit::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimLikelihoodDigit::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimLikelihoodDigit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimLikelihoodDigit.
      TClass *R__cl = ::WCSimLikelihoodDigit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTubeId", &fTubeId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQ", &fQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fT", &fT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPos[3]", fPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFace[3]", fFace);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_WCSimLikelihoodDigit(void *p) {
      delete ((::WCSimLikelihoodDigit*)p);
   }
   static void deleteArray_WCSimLikelihoodDigit(void *p) {
      delete [] ((::WCSimLikelihoodDigit*)p);
   }
   static void destruct_WCSimLikelihoodDigit(void *p) {
      typedef ::WCSimLikelihoodDigit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimLikelihoodDigit

//______________________________________________________________________________
void WCSimLikelihoodDigitArray::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimLikelihoodDigitArray.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimLikelihoodDigitArray::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimLikelihoodDigitArray::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimLikelihoodDigitArray::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimLikelihoodDigitArray.
      TClass *R__cl = ::WCSimLikelihoodDigitArray::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLikelihoodDigitArray", &fLikelihoodDigitArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNLikelihoodDigits", &fNLikelihoodDigits);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_WCSimLikelihoodDigitArray(void *p) {
      return  p ? new(p) ::WCSimLikelihoodDigitArray : new ::WCSimLikelihoodDigitArray;
   }
   static void *newArray_WCSimLikelihoodDigitArray(Long_t nElements, void *p) {
      return p ? new(p) ::WCSimLikelihoodDigitArray[nElements] : new ::WCSimLikelihoodDigitArray[nElements];
   }
   // Wrapper around operator delete
   static void delete_WCSimLikelihoodDigitArray(void *p) {
      delete ((::WCSimLikelihoodDigitArray*)p);
   }
   static void deleteArray_WCSimLikelihoodDigitArray(void *p) {
      delete [] ((::WCSimLikelihoodDigitArray*)p);
   }
   static void destruct_WCSimLikelihoodDigitArray(void *p) {
      typedef ::WCSimLikelihoodDigitArray current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimLikelihoodDigitArray

//______________________________________________________________________________
void WCSimLikelihoodTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimLikelihoodTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimLikelihoodTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimLikelihoodTrack::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimLikelihoodTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimLikelihoodTrack.
      TClass *R__cl = ::WCSimLikelihoodTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVtx[3]", fVtx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fT0", &fT0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTheta0", &fTheta0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhi0", &fPhi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fE0", &fE0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fType", &fType);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_WCSimLikelihoodTrack(void *p) {
      return  p ? new(p) ::WCSimLikelihoodTrack : new ::WCSimLikelihoodTrack;
   }
   static void *newArray_WCSimLikelihoodTrack(Long_t nElements, void *p) {
      return p ? new(p) ::WCSimLikelihoodTrack[nElements] : new ::WCSimLikelihoodTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_WCSimLikelihoodTrack(void *p) {
      delete ((::WCSimLikelihoodTrack*)p);
   }
   static void deleteArray_WCSimLikelihoodTrack(void *p) {
      delete [] ((::WCSimLikelihoodTrack*)p);
   }
   static void destruct_WCSimLikelihoodTrack(void *p) {
      typedef ::WCSimLikelihoodTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimLikelihoodTrack

//______________________________________________________________________________
namespace ROOT {
   void WCSimTimeLikelihood_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class WCSimTimeLikelihood.
      typedef ::ROOT::Shadow::WCSimTimeLikelihood ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::WCSimTimeLikelihood*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTrack", &sobj->fTrack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDigitArray", &sobj->fDigitArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGotTrackParameters", &sobj->fGotTrackParameters);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_WCSimTimeLikelihood(void *p) {
      delete ((::WCSimTimeLikelihood*)p);
   }
   static void deleteArray_WCSimTimeLikelihood(void *p) {
      delete [] ((::WCSimTimeLikelihood*)p);
   }
   static void destruct_WCSimTimeLikelihood(void *p) {
      typedef ::WCSimTimeLikelihood current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimTimeLikelihood

namespace ROOT {
   void vectorlEWCSimRecoDigitmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEWCSimRecoDigitmUgR_Dictionary();
   static void *new_vectorlEWCSimRecoDigitmUgR(void *p = 0);
   static void *newArray_vectorlEWCSimRecoDigitmUgR(Long_t size, void *p);
   static void delete_vectorlEWCSimRecoDigitmUgR(void *p);
   static void deleteArray_vectorlEWCSimRecoDigitmUgR(void *p);
   static void destruct_vectorlEWCSimRecoDigitmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<WCSimRecoDigit*>*)
   {
      vector<WCSimRecoDigit*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<WCSimRecoDigit*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<WCSimRecoDigit*>", -2, "prec_stl/vector", 49,
                  typeid(vector<WCSimRecoDigit*>), DefineBehavior(ptr, ptr),
                  0, &vectorlEWCSimRecoDigitmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<WCSimRecoDigit*>) );
      instance.SetNew(&new_vectorlEWCSimRecoDigitmUgR);
      instance.SetNewArray(&newArray_vectorlEWCSimRecoDigitmUgR);
      instance.SetDelete(&delete_vectorlEWCSimRecoDigitmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEWCSimRecoDigitmUgR);
      instance.SetDestructor(&destruct_vectorlEWCSimRecoDigitmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<WCSimRecoDigit*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<WCSimRecoDigit*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEWCSimRecoDigitmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<WCSimRecoDigit*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEWCSimRecoDigitmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<WCSimRecoDigit*> : new vector<WCSimRecoDigit*>;
   }
   static void *newArray_vectorlEWCSimRecoDigitmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<WCSimRecoDigit*>[nElements] : new vector<WCSimRecoDigit*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEWCSimRecoDigitmUgR(void *p) {
      delete ((vector<WCSimRecoDigit*>*)p);
   }
   static void deleteArray_vectorlEWCSimRecoDigitmUgR(void *p) {
      delete [] ((vector<WCSimRecoDigit*>*)p);
   }
   static void destruct_vectorlEWCSimRecoDigitmUgR(void *p) {
      typedef vector<WCSimRecoDigit*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<WCSimRecoDigit*>

namespace ROOT {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<double>

/********************************************************
* ./src/WCSimAnalysisRootDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableWCSimAnalysisRootDict();

extern "C" void G__set_cpp_environmentWCSimAnalysisRootDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("WCSimTimeLikelihood.hh");
  G__add_compiledheader("WCSimLikelihoodTrack.hh");
  G__add_compiledheader("WCSimLikelihoodDigit.hh");
  G__add_compiledheader("WCSimLikelihoodDigitArray.hh");
  G__add_compiledheader("WCSimChargeLikelihood.hh");
  G__add_compiledheader("WCSimLikelihoodTuner.hh");
  G__add_compiledheader("WCSimLikelihoodFitter.hh");
  G__add_compiledheader("WCSimDisplayViewer.hh");
  G__add_compiledheader("WCSimDisplayFactory.hh");
  G__add_compiledheader("WCSimDisplay.hh");
  G__add_compiledheader("WCSimDisplayAB.hh");
  G__add_compiledheader("WCSimEveDisplay.hh");
  G__add_compiledheader("WCSimEventWriter.hh");
  G__add_compiledheader("WCSimGeometry.hh");
  G__add_compiledheader("WCSimInterface.hh");
  G__add_compiledheader("WCSimParameters.hh");
  G__add_compiledheader("WCSimRecoObjectTable.hh");
  G__add_compiledheader("WCSimRecoFactory.hh");
  G__add_compiledheader("WCSimReco.hh");
  G__add_compiledheader("WCSimRecoAB.hh");
  G__add_compiledheader("WCSimRecoDigit.hh");
  G__add_compiledheader("WCSimRecoCluster.hh");
  G__add_compiledheader("WCSimRecoClusterDigit.hh");
  G__add_compiledheader("WCSimRecoRing.hh");
  G__add_compiledheader("WCSimRecoVertex.hh");
  G__add_compiledheader("WCSimRecoEvent.hh");
  G__add_compiledheader("WCSimTrueEvent.hh");
  G__add_compiledheader("WCSimTrueTrack.hh");
  G__add_compiledheader("WCSimHoughTransform.hh");
  G__add_compiledheader("WCSimHoughTransformArray.hh");
  G__add_compiledheader("WCSimDataCleaner.hh");
  G__add_compiledheader("WCSimVertexFinder.hh");
  G__add_compiledheader("WCSimVertexGeometry.hh");
  G__add_compiledheader("WCSimVertexViewer.hh");
  G__add_compiledheader("WCSimRingFinder.hh");
  G__add_compiledheader("WCSimRingViewer.hh");
  G__add_compiledheader("WCSimNtupleFactory.hh");
  G__add_compiledheader("WCSimNtuple.hh");
  G__add_compiledheader("WCSimRecoNtuple.hh");
  G__add_compiledheader("WCSimVertexNtuple.hh");
  G__add_compiledheader("WCSimVertexSeedNtuple.hh");
  G__add_compiledheader("WCSimNtupleWriter.hh");
  G__add_compiledheader("WCSimMsg.hh");
  G__cpp_reset_tagtableWCSimAnalysisRootDict();
}
#include <new>
extern "C" int G__cpp_dllrevWCSimAnalysisRootDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* WCSimRecoDigit */
static int G__WCSimAnalysisRootDict_162_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRecoDigit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new WCSimRecoDigit(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
   } else {
     p = new((void*) gvp) WCSimRecoDigit(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoDigit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_162_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimRecoDigit*) G__getstructoffset())->GetRegion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_162_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoDigit*) G__getstructoffset())->GetX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_162_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoDigit*) G__getstructoffset())->GetY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_162_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoDigit*) G__getstructoffset())->GetZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_162_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoDigit*) G__getstructoffset())->GetRawTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_162_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoDigit*) G__getstructoffset())->GetRawQPEs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_162_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoDigit*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_162_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoDigit*) G__getstructoffset())->GetQPEs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_162_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WCSimRecoDigit*) G__getstructoffset())->IsFiltered());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_162_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((WCSimRecoDigit*) G__getstructoffset())->SetFilter((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((WCSimRecoDigit*) G__getstructoffset())->SetFilter();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_162_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoDigit*) G__getstructoffset())->ResetFilter();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_162_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoDigit*) G__getstructoffset())->PassFilter();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_162_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimRecoDigit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_162_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRecoDigit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_162_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimRecoDigit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_162_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimRecoDigit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_162_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoDigit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_162_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRecoDigit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_162_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRecoDigit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_162_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRecoDigit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_162_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRecoDigit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimAnalysisRootDict_162_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimRecoDigit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimRecoDigit(*(WCSimRecoDigit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoDigit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimRecoDigit G__TWCSimRecoDigit;
static int G__WCSimAnalysisRootDict_162_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimRecoDigit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimRecoDigit*) (soff+(sizeof(WCSimRecoDigit)*i)))->~G__TWCSimRecoDigit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimRecoDigit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimRecoDigit*) (soff))->~G__TWCSimRecoDigit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimAnalysisRootDict_162_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRecoDigit* dest = (WCSimRecoDigit*) G__getstructoffset();
   *dest = *(WCSimRecoDigit*) libp->para[0].ref;
   const WCSimRecoDigit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimLikelihoodDigit */
static int G__WCSimAnalysisRootDict_198_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimLikelihoodDigit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new WCSimLikelihoodDigit(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]));
   } else {
     p = new((void*) gvp) WCSimLikelihoodDigit(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodDigit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_198_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimLikelihoodDigit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new WCSimLikelihoodDigit((WCSimRootCherenkovDigiHit*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) WCSimLikelihoodDigit((WCSimRootCherenkovDigiHit*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodDigit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_198_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimLikelihoodDigit*) G__getstructoffset())->GetTubeId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_198_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimLikelihoodDigit*) G__getstructoffset())->GetQ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_198_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimLikelihoodDigit*) G__getstructoffset())->GetT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_198_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimLikelihoodDigit*) G__getstructoffset())->GetX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_198_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimLikelihoodDigit*) G__getstructoffset())->GetY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_198_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimLikelihoodDigit*) G__getstructoffset())->GetZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_198_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimLikelihoodDigit*) G__getstructoffset())->GetFaceX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_198_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimLikelihoodDigit*) G__getstructoffset())->GetFaceY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_198_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimLikelihoodDigit*) G__getstructoffset())->GetFaceZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_198_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimLikelihoodDigit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_198_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimLikelihoodDigit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_198_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimLikelihoodDigit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_198_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimLikelihoodDigit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_198_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimLikelihoodDigit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_198_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimLikelihoodDigit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_198_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimLikelihoodDigit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_198_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimLikelihoodDigit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_198_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimLikelihoodDigit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimAnalysisRootDict_198_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimLikelihoodDigit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimLikelihoodDigit(*(WCSimLikelihoodDigit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodDigit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimLikelihoodDigit G__TWCSimLikelihoodDigit;
static int G__WCSimAnalysisRootDict_198_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimLikelihoodDigit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimLikelihoodDigit*) (soff+(sizeof(WCSimLikelihoodDigit)*i)))->~G__TWCSimLikelihoodDigit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimLikelihoodDigit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimLikelihoodDigit*) (soff))->~G__TWCSimLikelihoodDigit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimAnalysisRootDict_198_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimLikelihoodDigit* dest = (WCSimLikelihoodDigit*) G__getstructoffset();
   *dest = *(WCSimLikelihoodDigit*) libp->para[0].ref;
   const WCSimLikelihoodDigit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimLikelihoodDigitArray */
static int G__WCSimAnalysisRootDict_199_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimLikelihoodDigitArray* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimLikelihoodDigitArray[n];
     } else {
       p = new((void*) gvp) WCSimLikelihoodDigitArray[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimLikelihoodDigitArray;
     } else {
       p = new((void*) gvp) WCSimLikelihoodDigitArray;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodDigitArray));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_199_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimLikelihoodDigitArray* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new WCSimLikelihoodDigitArray((WCSimRootEvent*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) WCSimLikelihoodDigitArray((WCSimRootEvent*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodDigitArray));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_199_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimLikelihoodDigitArray*) G__getstructoffset())->GetDigit((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_199_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimLikelihoodDigitArray*) G__getstructoffset())->GetNDigits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_199_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimLikelihoodDigitArray::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_199_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimLikelihoodDigitArray::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_199_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimLikelihoodDigitArray::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_199_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimLikelihoodDigitArray::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_199_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimLikelihoodDigitArray*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_199_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimLikelihoodDigitArray::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_199_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimLikelihoodDigitArray::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_199_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimLikelihoodDigitArray::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_199_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimLikelihoodDigitArray::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimAnalysisRootDict_199_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimLikelihoodDigitArray* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimLikelihoodDigitArray(*(WCSimLikelihoodDigitArray*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodDigitArray));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimLikelihoodDigitArray G__TWCSimLikelihoodDigitArray;
static int G__WCSimAnalysisRootDict_199_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimLikelihoodDigitArray*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimLikelihoodDigitArray*) (soff+(sizeof(WCSimLikelihoodDigitArray)*i)))->~G__TWCSimLikelihoodDigitArray();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimLikelihoodDigitArray*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimLikelihoodDigitArray*) (soff))->~G__TWCSimLikelihoodDigitArray();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimAnalysisRootDict_199_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimLikelihoodDigitArray* dest = (WCSimLikelihoodDigitArray*) G__getstructoffset();
   *dest = *(WCSimLikelihoodDigitArray*) libp->para[0].ref;
   const WCSimLikelihoodDigitArray& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimLikelihoodTrack */
static int G__WCSimAnalysisRootDict_237_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((WCSimLikelihoodTrack*) G__getstructoffset())->TrackTypeToString((WCSimLikelihoodTrack::TrackType) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_237_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimLikelihoodTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimLikelihoodTrack[n];
     } else {
       p = new((void*) gvp) WCSimLikelihoodTrack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimLikelihoodTrack;
     } else {
       p = new((void*) gvp) WCSimLikelihoodTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_237_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimLikelihoodTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new WCSimLikelihoodTrack(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (WCSimLikelihoodTrack::TrackType) G__int(libp->para[7]));
   } else {
     p = new((void*) gvp) WCSimLikelihoodTrack(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (WCSimLikelihoodTrack::TrackType) G__int(libp->para[7]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_237_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimLikelihoodTrack*) G__getstructoffset())->SetX((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_237_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimLikelihoodTrack*) G__getstructoffset())->SetY((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_237_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimLikelihoodTrack*) G__getstructoffset())->SetZ((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_237_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimLikelihoodTrack*) G__getstructoffset())->SetT((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_237_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimLikelihoodTrack*) G__getstructoffset())->SetTheta((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_237_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimLikelihoodTrack*) G__getstructoffset())->SetPhi((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_237_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimLikelihoodTrack*) G__getstructoffset())->SetE((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_237_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimLikelihoodTrack*) G__getstructoffset())->SetType((WCSimLikelihoodTrack::TrackType) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_237_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimLikelihoodTrack*) G__getstructoffset())->GetX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_237_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimLikelihoodTrack*) G__getstructoffset())->GetY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_237_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimLikelihoodTrack*) G__getstructoffset())->GetZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_237_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((WCSimLikelihoodTrack*) G__getstructoffset())->GetVtx();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_237_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimLikelihoodTrack*) G__getstructoffset())->GetT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_237_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimLikelihoodTrack*) G__getstructoffset())->GetTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_237_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimLikelihoodTrack*) G__getstructoffset())->GetPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_237_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimLikelihoodTrack*) G__getstructoffset())->GetDirX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_237_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimLikelihoodTrack*) G__getstructoffset())->GetDirY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_237_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimLikelihoodTrack*) G__getstructoffset())->GetDirZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_237_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((WCSimLikelihoodTrack*) G__getstructoffset())->GetDir();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_237_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimLikelihoodTrack*) G__getstructoffset())->GetE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_237_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimLikelihoodTrack*) G__getstructoffset())->GetType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_237_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimLikelihoodTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_237_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimLikelihoodTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_237_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimLikelihoodTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_237_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimLikelihoodTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_237_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimLikelihoodTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_237_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimLikelihoodTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_237_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimLikelihoodTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_237_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimLikelihoodTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_237_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimLikelihoodTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimAnalysisRootDict_237_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimLikelihoodTrack* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimLikelihoodTrack(*(WCSimLikelihoodTrack*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimLikelihoodTrack G__TWCSimLikelihoodTrack;
static int G__WCSimAnalysisRootDict_237_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimLikelihoodTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimLikelihoodTrack*) (soff+(sizeof(WCSimLikelihoodTrack)*i)))->~G__TWCSimLikelihoodTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimLikelihoodTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimLikelihoodTrack*) (soff))->~G__TWCSimLikelihoodTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimAnalysisRootDict_237_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimLikelihoodTrack* dest = (WCSimLikelihoodTrack*) G__getstructoffset();
   *dest = *(WCSimLikelihoodTrack*) libp->para[0].ref;
   const WCSimLikelihoodTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimRecoVertex */
static int G__WCSimAnalysisRootDict_239_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRecoVertex* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimRecoVertex[n];
     } else {
       p = new((void*) gvp) WCSimRecoVertex[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimRecoVertex;
     } else {
       p = new((void*) gvp) WCSimRecoVertex;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_239_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRecoVertex* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new WCSimRecoVertex(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
   } else {
     p = new((void*) gvp) WCSimRecoVertex(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_239_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRecoVertex* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new WCSimRecoVertex(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
   } else {
     p = new((void*) gvp) WCSimRecoVertex(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_239_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRecoVertex* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 11
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new WCSimRecoVertex(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Bool_t) G__int(libp->para[9])
, (Int_t) G__int(libp->para[10]));
   } else {
     p = new((void*) gvp) WCSimRecoVertex(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Bool_t) G__int(libp->para[9])
, (Int_t) G__int(libp->para[10]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_239_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRecoVertex* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 13
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new WCSimRecoVertex(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Int_t) G__int(libp->para[10]), (Bool_t) G__int(libp->para[11])
, (Int_t) G__int(libp->para[12]));
   } else {
     p = new((void*) gvp) WCSimRecoVertex(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Int_t) G__int(libp->para[10]), (Bool_t) G__int(libp->para[11])
, (Int_t) G__int(libp->para[12]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_239_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoVertex*) G__getstructoffset())->SetVertex((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_239_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoVertex*) G__getstructoffset())->SetVertex((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_239_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoVertex*) G__getstructoffset())->SetDirection((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_239_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoVertex*) G__getstructoffset())->SetConeAngle((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_239_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoVertex*) G__getstructoffset())->SetTrackLength((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_239_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoVertex*) G__getstructoffset())->SetFOM((Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_239_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoVertex*) G__getstructoffset())->SetStatus((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_239_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoVertex*) G__getstructoffset())->GetX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_239_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoVertex*) G__getstructoffset())->GetY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_239_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoVertex*) G__getstructoffset())->GetZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_239_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoVertex*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_239_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WCSimRecoVertex*) G__getstructoffset())->FoundVertex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_239_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoVertex*) G__getstructoffset())->GetDirX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_239_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoVertex*) G__getstructoffset())->GetDirY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_239_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoVertex*) G__getstructoffset())->GetDirZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_239_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WCSimRecoVertex*) G__getstructoffset())->FoundDirection());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_239_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoVertex*) G__getstructoffset())->GetConeAngle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_239_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoVertex*) G__getstructoffset())->GetTrackLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_239_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoVertex*) G__getstructoffset())->GetFOM());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_239_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimRecoVertex*) G__getstructoffset())->GetIterations());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_239_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WCSimRecoVertex*) G__getstructoffset())->GetPass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_239_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimRecoVertex*) G__getstructoffset())->GetStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_239_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoVertex*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_239_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimRecoVertex::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_239_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRecoVertex::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_239_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimRecoVertex::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_239_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimRecoVertex::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_239_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoVertex*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_239_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRecoVertex::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_239_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRecoVertex::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_239_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRecoVertex::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_239_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRecoVertex::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimAnalysisRootDict_239_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimRecoVertex* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimRecoVertex(*(WCSimRecoVertex*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimRecoVertex G__TWCSimRecoVertex;
static int G__WCSimAnalysisRootDict_239_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimRecoVertex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimRecoVertex*) (soff+(sizeof(WCSimRecoVertex)*i)))->~G__TWCSimRecoVertex();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimRecoVertex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimRecoVertex*) (soff))->~G__TWCSimRecoVertex();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimAnalysisRootDict_239_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRecoVertex* dest = (WCSimRecoVertex*) G__getstructoffset();
   *dest = *(WCSimRecoVertex*) libp->para[0].ref;
   const WCSimRecoVertex& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimRecoRing */
static int G__WCSimAnalysisRootDict_240_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRecoRing* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new WCSimRecoRing(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
   } else {
     p = new((void*) gvp) WCSimRecoRing(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoRing));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_240_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoRing*) G__getstructoffset())->GetVtxX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_240_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoRing*) G__getstructoffset())->GetVtxY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_240_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoRing*) G__getstructoffset())->GetVtxZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_240_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoRing*) G__getstructoffset())->GetDirX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_240_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoRing*) G__getstructoffset())->GetDirY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_240_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoRing*) G__getstructoffset())->GetDirZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_240_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoRing*) G__getstructoffset())->GetAngle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_240_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoRing*) G__getstructoffset())->GetHeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_240_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimRecoRing::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_240_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRecoRing::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_240_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimRecoRing::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_240_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimRecoRing::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_240_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoRing*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_240_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRecoRing::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_240_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRecoRing::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_240_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRecoRing::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_240_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRecoRing::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimAnalysisRootDict_240_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimRecoRing* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimRecoRing(*(WCSimRecoRing*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoRing));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimRecoRing G__TWCSimRecoRing;
static int G__WCSimAnalysisRootDict_240_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimRecoRing*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimRecoRing*) (soff+(sizeof(WCSimRecoRing)*i)))->~G__TWCSimRecoRing();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimRecoRing*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimRecoRing*) (soff))->~G__TWCSimRecoRing();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimAnalysisRootDict_240_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRecoRing* dest = (WCSimRecoRing*) G__getstructoffset();
   *dest = *(WCSimRecoRing*) libp->para[0].ref;
   const WCSimRecoRing& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimRecoEvent */
static int G__WCSimAnalysisRootDict_241_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRecoEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimRecoEvent[n];
     } else {
       p = new((void*) gvp) WCSimRecoEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimRecoEvent;
     } else {
       p = new((void*) gvp) WCSimRecoEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoEvent*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoEvent*) G__getstructoffset())->SetHeader((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimRecoEvent*) G__getstructoffset())->GetRun());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimRecoEvent*) G__getstructoffset())->GetEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimRecoEvent*) G__getstructoffset())->GetTrigger());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoEvent*) G__getstructoffset())->AddDigit((WCSimRecoDigit*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoEvent*) G__getstructoffset())->AddFilterDigit((WCSimRecoDigit*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoEvent*) G__getstructoffset())->AddRing((WCSimRecoRing*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimRecoEvent*) G__getstructoffset())->GetDigit((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimRecoEvent*) G__getstructoffset())->GetNDigits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimRecoEvent*) G__getstructoffset())->GetFilterDigit((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimRecoEvent*) G__getstructoffset())->GetNFilterDigits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimRecoEvent*) G__getstructoffset())->GetRing((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimRecoEvent*) G__getstructoffset())->GetNRings());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimRecoEvent*) G__getstructoffset())->GetPrimaryRing());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoEvent*) G__getstructoffset())->SetVertex((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoEvent*) G__getstructoffset())->SetDirection((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoEvent*) G__getstructoffset())->SetConeAngle((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoEvent*) G__getstructoffset())->SetTrackLength((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoEvent*) G__getstructoffset())->SetVtxFOM((Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoEvent*) G__getstructoffset())->SetVtxStatus((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimRecoEvent*) G__getstructoffset())->GetVertex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoEvent*) G__getstructoffset())->GetVtxX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoEvent*) G__getstructoffset())->GetVtxY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoEvent*) G__getstructoffset())->GetVtxZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoEvent*) G__getstructoffset())->GetVtxTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoEvent*) G__getstructoffset())->GetDirX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoEvent*) G__getstructoffset())->GetDirY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoEvent*) G__getstructoffset())->GetDirZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoEvent*) G__getstructoffset())->GetConeAngle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoEvent*) G__getstructoffset())->GetTrackLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoEvent*) G__getstructoffset())->GetVtxFOM());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimRecoEvent*) G__getstructoffset())->GetVtxIterations());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WCSimRecoEvent*) G__getstructoffset())->GetVtxPass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimRecoEvent*) G__getstructoffset())->GetVtxStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WCSimRecoEvent*) G__getstructoffset())->FoundVertex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WCSimRecoEvent*) G__getstructoffset())->FoundDirection());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WCSimRecoEvent*) G__getstructoffset())->FoundRings());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoEvent*) G__getstructoffset())->SetFilterDone();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WCSimRecoEvent*) G__getstructoffset())->IsFilterDone());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoEvent*) G__getstructoffset())->SetVertexFinderDone();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WCSimRecoEvent*) G__getstructoffset())->IsVertexFinderDone());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoEvent*) G__getstructoffset())->SetRingFinderDone();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WCSimRecoEvent*) G__getstructoffset())->IsRingFinderDone());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimRecoEvent*) G__getstructoffset())->GetDigitList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimRecoEvent*) G__getstructoffset())->GetFilterDigitList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimRecoEvent*) G__getstructoffset())->GetRingList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoEvent*) G__getstructoffset())->PrintDigitList((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoEvent*) G__getstructoffset())->PrintFilterDigitList((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoEvent*) G__getstructoffset())->PrintEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimRecoEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRecoEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimRecoEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimRecoEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRecoEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRecoEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRecoEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_241_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRecoEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimAnalysisRootDict_241_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimRecoEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimRecoEvent(*(WCSimRecoEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimRecoEvent G__TWCSimRecoEvent;
static int G__WCSimAnalysisRootDict_241_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimRecoEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimRecoEvent*) (soff+(sizeof(WCSimRecoEvent)*i)))->~G__TWCSimRecoEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimRecoEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimRecoEvent*) (soff))->~G__TWCSimRecoEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimAnalysisRootDict_241_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRecoEvent* dest = (WCSimRecoEvent*) G__getstructoffset();
   *dest = *(WCSimRecoEvent*) libp->para[0].ref;
   const WCSimRecoEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimTimeLikelihood */
static int G__WCSimAnalysisRootDict_250_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimTimeLikelihood* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new WCSimTimeLikelihood((WCSimLikelihoodDigitArray*) G__int(libp->para[0]), (WCSimLikelihoodTrack*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) WCSimTimeLikelihood((WCSimLikelihoodDigitArray*) G__int(libp->para[0]), (WCSimLikelihoodTrack*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimTimeLikelihood));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_250_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimTimeLikelihood*) G__getstructoffset())->Initialize((WCSimLikelihoodDigitArray*) G__int(libp->para[0]), (WCSimLikelihoodTrack*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_250_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTimeLikelihood*) G__getstructoffset())->Calc2LnL());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_250_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTimeLikelihood*) G__getstructoffset())->GetTrackLength());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimAnalysisRootDict_250_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimTimeLikelihood* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimTimeLikelihood(*(WCSimTimeLikelihood*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimTimeLikelihood));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimTimeLikelihood G__TWCSimTimeLikelihood;
static int G__WCSimAnalysisRootDict_250_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimTimeLikelihood*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimTimeLikelihood*) (soff+(sizeof(WCSimTimeLikelihood)*i)))->~G__TWCSimTimeLikelihood();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimTimeLikelihood*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimTimeLikelihood*) (soff))->~G__TWCSimTimeLikelihood();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimAnalysisRootDict_250_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimTimeLikelihood* dest = (WCSimTimeLikelihood*) G__getstructoffset();
   *dest = *(WCSimTimeLikelihood*) libp->para[0].ref;
   const WCSimTimeLikelihood& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimLikelihoodFitter */
static int G__WCSimAnalysisRootDict_287_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimLikelihoodFitter* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new WCSimLikelihoodFitter((WCSimRootEvent*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) WCSimLikelihoodFitter((WCSimRootEvent*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodFitter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_287_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimLikelihoodFitter*) G__getstructoffset())->Minimize2LnL();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_287_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimLikelihoodFitter*) G__getstructoffset())->Calc2LnL());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_287_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimLikelihoodFitter*) G__getstructoffset())->Calc2LnL((WCSimLikelihoodTrack*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_287_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimLikelihoodFitter*) G__getstructoffset())->Charge2LnL());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_287_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimLikelihoodFitter*) G__getstructoffset())->Charge2LnL((WCSimLikelihoodTrack*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_287_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimLikelihoodFitter*) G__getstructoffset())->CalcMuDirect());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_287_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimLikelihoodFitter*) G__getstructoffset())->CalcMuIndirect());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_287_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimLikelihoodFitter*) G__getstructoffset())->Time2LnL());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimAnalysisRootDict_287_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimLikelihoodFitter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimLikelihoodFitter(*(WCSimLikelihoodFitter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodFitter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimLikelihoodFitter G__TWCSimLikelihoodFitter;
static int G__WCSimAnalysisRootDict_287_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimLikelihoodFitter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimLikelihoodFitter*) (soff+(sizeof(WCSimLikelihoodFitter)*i)))->~G__TWCSimLikelihoodFitter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimLikelihoodFitter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimLikelihoodFitter*) (soff))->~G__TWCSimLikelihoodFitter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimAnalysisRootDict_287_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimLikelihoodFitter* dest = (WCSimLikelihoodFitter*) G__getstructoffset();
   *dest = *(WCSimLikelihoodFitter*) libp->para[0].ref;
   const WCSimLikelihoodFitter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimLikelihoodTuner */
static int G__WCSimAnalysisRootDict_290_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimLikelihoodTuner* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimLikelihoodTuner[n];
     } else {
       p = new((void*) gvp) WCSimLikelihoodTuner[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimLikelihoodTuner;
     } else {
       p = new((void*) gvp) WCSimLikelihoodTuner;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodTuner));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_290_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimLikelihoodTuner*) G__getstructoffset())->LoadEmissionProfiles((WCSimLikelihoodTrack::TrackType) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_290_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimLikelihoodTuner*) G__getstructoffset())->LoadEmissionProfiles((WCSimLikelihoodTrack*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_290_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimLikelihoodTuner*) G__getstructoffset())->TransmissionFunction((Double_t) G__double(libp->para[0]), (WCSimLikelihoodTrack*) G__int(libp->para[1])
, (WCSimLikelihoodDigit*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_290_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimLikelihoodTuner*) G__getstructoffset())->Efficiency((Double_t) G__double(libp->para[0]), (WCSimLikelihoodTrack*) G__int(libp->para[1])
, (WCSimLikelihoodDigit*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_290_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimLikelihoodTuner*) G__getstructoffset())->SolidAngle((Double_t) G__double(libp->para[0]), (WCSimLikelihoodTrack*) G__int(libp->para[1])
, (WCSimLikelihoodDigit*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_290_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimLikelihoodTuner*) G__getstructoffset())->ScatteringTable((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_290_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimLikelihoodTuner*) G__getstructoffset())->CalculateIndIntegrals((Int_t) G__int(libp->para[0]), (WCSimLikelihoodTrack*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_290_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimLikelihoodTuner*) G__getstructoffset())->CalculateChIntegrals((Int_t) G__int(libp->para[0]), (WCSimLikelihoodTrack*) G__int(libp->para[1])
, (WCSimLikelihoodDigit*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_290_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimLikelihoodTuner*) G__getstructoffset())->CalculateCoefficients((WCSimLikelihoodTrack*) G__int(libp->para[0]), (WCSimLikelihoodDigit*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_290_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Double_t>* pobj;
         vector<Double_t> xobj = ((WCSimLikelihoodTuner*) G__getstructoffset())->CalculateCoefficientsVector((WCSimLikelihoodTrack*) G__int(libp->para[0]), (WCSimLikelihoodDigit*) G__int(libp->para[1]));
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_290_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimLikelihoodTuner*) G__getstructoffset())->TabulateIndirectIntegrals((WCSimLikelihoodTrack::TrackType) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_290_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimLikelihoodTuner*) G__getstructoffset())->TabulateDirectIntegrals((WCSimLikelihoodTrack::TrackType) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_290_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimLikelihoodTuner*) G__getstructoffset())->TabulateIntegrals((WCSimLikelihoodTrack::TrackType) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimAnalysisRootDict_290_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimLikelihoodTuner* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimLikelihoodTuner(*(WCSimLikelihoodTuner*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodTuner));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimLikelihoodTuner G__TWCSimLikelihoodTuner;
static int G__WCSimAnalysisRootDict_290_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimLikelihoodTuner*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimLikelihoodTuner*) (soff+(sizeof(WCSimLikelihoodTuner)*i)))->~G__TWCSimLikelihoodTuner();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimLikelihoodTuner*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimLikelihoodTuner*) (soff))->~G__TWCSimLikelihoodTuner();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimAnalysisRootDict_290_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimLikelihoodTuner* dest = (WCSimLikelihoodTuner*) G__getstructoffset();
   *dest = *(WCSimLikelihoodTuner*) libp->para[0].ref;
   const WCSimLikelihoodTuner& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimChargeLikelihood */
static int G__WCSimAnalysisRootDict_291_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimChargeLikelihood* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new WCSimChargeLikelihood((WCSimLikelihoodDigitArray*) G__int(libp->para[0]), (WCSimLikelihoodTrack*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) WCSimChargeLikelihood((WCSimLikelihoodDigitArray*) G__int(libp->para[0]), (WCSimLikelihoodTrack*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimChargeLikelihood));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_291_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimChargeLikelihood*) G__getstructoffset())->Initialize((WCSimLikelihoodDigitArray*) G__int(libp->para[0]), (WCSimLikelihoodTrack*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_291_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimChargeLikelihood*) G__getstructoffset())->Calc2LnL());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_291_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimChargeLikelihood*) G__getstructoffset())->ChargeExpectation());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_291_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimChargeLikelihood*) G__getstructoffset())->GetLightFlux());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_291_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimChargeLikelihood*) G__getstructoffset())->GetMuIndirect());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_291_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimChargeLikelihood*) G__getstructoffset())->GetMuDirect());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_291_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimChargeLikelihood*) G__getstructoffset())->LookupChIntegrals((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_291_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimChargeLikelihood*) G__getstructoffset())->LookupIndIntegrals((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_291_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimChargeLikelihood*) G__getstructoffset())->ScatteringTable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_291_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimChargeLikelihood*) G__getstructoffset())->GetTrackParameters();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_291_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimChargeLikelihood*) G__getstructoffset())->CalculateExactLikelihood());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_291_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimChargeLikelihood*) G__getstructoffset())->GetR0Interval());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_291_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimChargeLikelihood*) G__getstructoffset())->GetCosTheta0Interval());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimAnalysisRootDict_291_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimChargeLikelihood* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimChargeLikelihood(*(WCSimChargeLikelihood*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimChargeLikelihood));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimChargeLikelihood G__TWCSimChargeLikelihood;
static int G__WCSimAnalysisRootDict_291_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimChargeLikelihood*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimChargeLikelihood*) (soff+(sizeof(WCSimChargeLikelihood)*i)))->~G__TWCSimChargeLikelihood();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimChargeLikelihood*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimChargeLikelihood*) (soff))->~G__TWCSimChargeLikelihood();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimAnalysisRootDict_291_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimChargeLikelihood* dest = (WCSimChargeLikelihood*) G__getstructoffset();
   *dest = *(WCSimChargeLikelihood*) libp->para[0].ref;
   const WCSimChargeLikelihood& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimDisplay */
static int G__WCSimAnalysisRootDict_655_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimDisplay* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimDisplay[n];
     } else {
       p = new((void*) gvp) WCSimDisplay[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimDisplay;
     } else {
       p = new((void*) gvp) WCSimDisplay;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDisplay));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_655_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimDisplay*) G__getstructoffset())->DrawDisplay((WCSimRecoEvent*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_655_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimDisplay*) G__getstructoffset())->DrawCleanDisplay((WCSimRecoEvent*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_655_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimDisplay*) G__getstructoffset())->DrawRecoEvent((WCSimRecoEvent*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_655_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimDisplay*) G__getstructoffset())->DrawTrueEvent((WCSimTrueEvent*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_655_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimDisplay*) G__getstructoffset())->ResetDisplay();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_655_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimDisplay*) G__getstructoffset())->PrintDisplay();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_655_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimDisplay*) G__getstructoffset())->SetPulseHeightCut((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_655_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimDisplay*) G__getstructoffset())->GetPulseHeightCut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_655_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((WCSimDisplay*) G__getstructoffset())->PrintGIF((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((WCSimDisplay*) G__getstructoffset())->PrintGIF();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_655_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((WCSimDisplay*) G__getstructoffset())->PrintEPS((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((WCSimDisplay*) G__getstructoffset())->PrintEPS();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_655_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimDisplay::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_655_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimDisplay::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_655_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimDisplay::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_655_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimDisplay::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_655_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimDisplay*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_655_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimDisplay::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_655_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimDisplay::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_655_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimDisplay::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_655_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimDisplay::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimAnalysisRootDict_655_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimDisplay* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimDisplay(*(WCSimDisplay*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDisplay));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimDisplay G__TWCSimDisplay;
static int G__WCSimAnalysisRootDict_655_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimDisplay*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimDisplay*) (soff+(sizeof(WCSimDisplay)*i)))->~G__TWCSimDisplay();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimDisplay*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimDisplay*) (soff))->~G__TWCSimDisplay();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimAnalysisRootDict_655_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimDisplay* dest = (WCSimDisplay*) G__getstructoffset();
   *dest = *(WCSimDisplay*) libp->para[0].ref;
   const WCSimDisplay& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimReco */
static int G__WCSimAnalysisRootDict_656_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimReco*) G__getstructoffset())->Run();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_656_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimReco*) G__getstructoffset())->Run((WCSimRecoEvent*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_656_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimReco*) G__getstructoffset())->RunFilter((WCSimRecoEvent*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_656_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimReco*) G__getstructoffset())->RunRecoVertex((WCSimRecoEvent*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_656_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimReco*) G__getstructoffset())->RunRecoRings((WCSimRecoEvent*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_656_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimReco::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_656_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimReco::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_656_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimReco::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_656_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimReco::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_656_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimReco*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_656_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimReco::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_656_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimReco::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_656_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimReco::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_656_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimReco::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimReco G__TWCSimReco;
static int G__WCSimAnalysisRootDict_656_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimReco*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimReco*) (soff+(sizeof(WCSimReco)*i)))->~G__TWCSimReco();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimReco*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimReco*) (soff))->~G__TWCSimReco();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimAnalysisRootDict_656_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimReco* dest = (WCSimReco*) G__getstructoffset();
   *dest = *(WCSimReco*) libp->para[0].ref;
   const WCSimReco& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimTrueEvent */
static int G__WCSimAnalysisRootDict_657_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimTrueEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimTrueEvent[n];
     } else {
       p = new((void*) gvp) WCSimTrueEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimTrueEvent;
     } else {
       p = new((void*) gvp) WCSimTrueEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimTrueEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_657_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimTrueEvent*) G__getstructoffset())->SetHeader(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t) G__double(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_657_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimTrueEvent*) G__getstructoffset())->GetPDG());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_657_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueEvent*) G__getstructoffset())->GetG4VtxX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_657_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueEvent*) G__getstructoffset())->GetG4VtxY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_657_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueEvent*) G__getstructoffset())->GetG4VtxZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_657_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueEvent*) G__getstructoffset())->GetG4EndX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_657_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueEvent*) G__getstructoffset())->GetG4EndY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_657_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueEvent*) G__getstructoffset())->GetG4EndZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_657_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueEvent*) G__getstructoffset())->GetVtxX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_657_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueEvent*) G__getstructoffset())->GetVtxY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_657_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueEvent*) G__getstructoffset())->GetVtxZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_657_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueEvent*) G__getstructoffset())->GetEndX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_657_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueEvent*) G__getstructoffset())->GetEndY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_657_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueEvent*) G__getstructoffset())->GetEndZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_657_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueEvent*) G__getstructoffset())->GetDirX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_657_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueEvent*) G__getstructoffset())->GetDirY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_657_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueEvent*) G__getstructoffset())->GetDirZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_657_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueEvent*) G__getstructoffset())->GetLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_657_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueEvent*) G__getstructoffset())->GetMomentum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_657_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueEvent*) G__getstructoffset())->GetEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_657_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimTrueEvent*) G__getstructoffset())->GetNTracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_657_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimTrueEvent*) G__getstructoffset())->GetTrack((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_657_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimTrueEvent*) G__getstructoffset())->AddTrack((WCSimTrueTrack*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_657_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimTrueEvent*) G__getstructoffset())->ClearTracks();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_657_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimTrueEvent*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_657_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimTrueEvent*) G__getstructoffset())->PrintEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_657_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimTrueEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_657_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimTrueEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_657_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimTrueEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_657_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimTrueEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_657_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimTrueEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_657_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimTrueEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_657_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimTrueEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_657_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimTrueEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_657_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimTrueEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimAnalysisRootDict_657_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimTrueEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimTrueEvent(*(WCSimTrueEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimTrueEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimTrueEvent G__TWCSimTrueEvent;
static int G__WCSimAnalysisRootDict_657_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimTrueEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimTrueEvent*) (soff+(sizeof(WCSimTrueEvent)*i)))->~G__TWCSimTrueEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimTrueEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimTrueEvent*) (soff))->~G__TWCSimTrueEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimAnalysisRootDict_657_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimTrueEvent* dest = (WCSimTrueEvent*) G__getstructoffset();
   *dest = *(WCSimTrueEvent*) libp->para[0].ref;
   const WCSimTrueEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimDisplayViewer */
static int G__WCSimAnalysisRootDict_658_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimDisplayViewer* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimDisplayViewer[n];
     } else {
       p = new((void*) gvp) WCSimDisplayViewer[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimDisplayViewer;
     } else {
       p = new((void*) gvp) WCSimDisplayViewer;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDisplayViewer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_658_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimDisplayViewer*) G__getstructoffset())->RootStyle();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_658_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimDisplayViewer*) G__getstructoffset())->Initialize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_658_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimDisplayViewer*) G__getstructoffset())->controlStart();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_658_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimDisplayViewer*) G__getstructoffset())->controlNext();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_658_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimDisplayViewer*) G__getstructoffset())->controlPrevious();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_658_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimDisplayViewer*) G__getstructoffset())->controlGoTo();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_658_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimDisplayViewer*) G__getstructoffset())->controlPrint();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_658_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimDisplayViewer*) G__getstructoffset())->BuildDisplay();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_658_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimDisplayViewer*) G__getstructoffset())->UpdateDisplay((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_658_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimDisplayViewer*) G__getstructoffset())->DisplayEvent((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_658_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((WCSimDisplayViewer*) G__getstructoffset())->DisplayRecoClusters((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((WCSimDisplayViewer*) G__getstructoffset())->DisplayRecoClusters();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_658_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((WCSimDisplayViewer*) G__getstructoffset())->DisplayRecoEvent((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((WCSimDisplayViewer*) G__getstructoffset())->DisplayRecoEvent();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_658_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((WCSimDisplayViewer*) G__getstructoffset())->DisplayTrueEvent((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((WCSimDisplayViewer*) G__getstructoffset())->DisplayTrueEvent();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_658_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimDisplayViewer*) G__getstructoffset())->SetPulseHeightCut((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_658_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimDisplayViewer*) G__getstructoffset())->UseDisplay((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_658_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((WCSimDisplayViewer*) G__getstructoffset())->PrintGIF((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((WCSimDisplayViewer*) G__getstructoffset())->PrintGIF();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_658_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((WCSimDisplayViewer*) G__getstructoffset())->PrintEPS((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((WCSimDisplayViewer*) G__getstructoffset())->PrintEPS();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_658_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimDisplayViewer*) G__getstructoffset())->PrintDisplayList();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_658_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimDisplayViewer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_658_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimDisplayViewer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_658_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimDisplayViewer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_658_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimDisplayViewer::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_658_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimDisplayViewer*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_658_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimDisplayViewer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_658_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimDisplayViewer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_658_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimDisplayViewer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_658_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimDisplayViewer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimAnalysisRootDict_658_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimDisplayViewer* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimDisplayViewer(*(WCSimDisplayViewer*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDisplayViewer));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimDisplayViewer G__TWCSimDisplayViewer;
static int G__WCSimAnalysisRootDict_658_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimDisplayViewer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimDisplayViewer*) (soff+(sizeof(WCSimDisplayViewer)*i)))->~G__TWCSimDisplayViewer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimDisplayViewer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimDisplayViewer*) (soff))->~G__TWCSimDisplayViewer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimAnalysisRootDict_658_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimDisplayViewer* dest = (WCSimDisplayViewer*) G__getstructoffset();
   *dest = *(WCSimDisplayViewer*) libp->para[0].ref;
   const WCSimDisplayViewer& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimDisplayFactory */
static int G__WCSimAnalysisRootDict_667_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimDisplayFactory::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_667_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((WCSimDisplayFactory*) G__getstructoffset())->MakeDisplay((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((WCSimDisplayFactory*) G__getstructoffset())->MakeDisplay());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_667_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimDisplayFactory::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_667_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimDisplayFactory::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_667_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimDisplayFactory::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_667_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimDisplayFactory::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_667_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimDisplayFactory*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_667_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimDisplayFactory::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_667_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimDisplayFactory::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_667_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimDisplayFactory::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_667_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimDisplayFactory::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimAnalysisRootDict_667_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimDisplayFactory* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimDisplayFactory(*(WCSimDisplayFactory*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDisplayFactory));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimAnalysisRootDict_667_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimDisplayFactory* dest = (WCSimDisplayFactory*) G__getstructoffset();
   *dest = *(WCSimDisplayFactory*) libp->para[0].ref;
   const WCSimDisplayFactory& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimTrueTrack */
static int G__WCSimAnalysisRootDict_668_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimTrueTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 19
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new WCSimTrueTrack(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t) G__double(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Double_t) G__double(libp->para[18]));
   } else {
     p = new((void*) gvp) WCSimTrueTrack(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t) G__double(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Double_t) G__double(libp->para[18]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimTrueTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_668_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueTrack*) G__getstructoffset())->GetG4VtxX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_668_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueTrack*) G__getstructoffset())->GetG4VtxY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_668_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueTrack*) G__getstructoffset())->GetG4VtxZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_668_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueTrack*) G__getstructoffset())->GetG4EndX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_668_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueTrack*) G__getstructoffset())->GetG4EndY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_668_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueTrack*) G__getstructoffset())->GetG4EndZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_668_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueTrack*) G__getstructoffset())->GetVtxX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_668_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueTrack*) G__getstructoffset())->GetVtxY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_668_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueTrack*) G__getstructoffset())->GetVtxZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_668_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueTrack*) G__getstructoffset())->GetEndX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_668_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueTrack*) G__getstructoffset())->GetEndY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_668_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueTrack*) G__getstructoffset())->GetEndZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_668_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueTrack*) G__getstructoffset())->GetDirX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_668_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueTrack*) G__getstructoffset())->GetDirY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_668_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueTrack*) G__getstructoffset())->GetDirZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_668_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueTrack*) G__getstructoffset())->GetMomentum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_668_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueTrack*) G__getstructoffset())->GetEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_668_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimTrueTrack*) G__getstructoffset())->GetTrackPDG());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_668_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimTrueTrack*) G__getstructoffset())->GetParentPDG());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_668_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimTrueTrack*) G__getstructoffset())->PrintTrack();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_668_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimTrueTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_668_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimTrueTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_668_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimTrueTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_668_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimTrueTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_668_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimTrueTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_668_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimTrueTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_668_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimTrueTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_668_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimTrueTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_668_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimTrueTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimAnalysisRootDict_668_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimTrueTrack* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimTrueTrack(*(WCSimTrueTrack*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimTrueTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimTrueTrack G__TWCSimTrueTrack;
static int G__WCSimAnalysisRootDict_668_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimTrueTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimTrueTrack*) (soff+(sizeof(WCSimTrueTrack)*i)))->~G__TWCSimTrueTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimTrueTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimTrueTrack*) (soff))->~G__TWCSimTrueTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimAnalysisRootDict_668_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimTrueTrack* dest = (WCSimTrueTrack*) G__getstructoffset();
   *dest = *(WCSimTrueTrack*) libp->para[0].ref;
   const WCSimTrueTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimDisplayAB */
static int G__WCSimAnalysisRootDict_686_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimDisplayAB* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimDisplayAB[n];
     } else {
       p = new((void*) gvp) WCSimDisplayAB[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimDisplayAB;
     } else {
       p = new((void*) gvp) WCSimDisplayAB;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDisplayAB));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_686_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimDisplayAB::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_686_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimDisplayAB::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_686_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimDisplayAB::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_686_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimDisplayAB::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_686_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimDisplayAB*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_686_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimDisplayAB::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_686_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimDisplayAB::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_686_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimDisplayAB::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_686_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimDisplayAB::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimAnalysisRootDict_686_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimDisplayAB* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimDisplayAB(*(WCSimDisplayAB*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDisplayAB));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimDisplayAB G__TWCSimDisplayAB;
static int G__WCSimAnalysisRootDict_686_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimDisplayAB*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimDisplayAB*) (soff+(sizeof(WCSimDisplayAB)*i)))->~G__TWCSimDisplayAB();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimDisplayAB*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimDisplayAB*) (soff))->~G__TWCSimDisplayAB();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimEveDisplay */
static int G__WCSimAnalysisRootDict_699_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimEveDisplay* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimEveDisplay[n];
     } else {
       p = new((void*) gvp) WCSimEveDisplay[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimEveDisplay;
     } else {
       p = new((void*) gvp) WCSimEveDisplay;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimEveDisplay));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_699_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimEveDisplay::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_699_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimEveDisplay::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_699_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimEveDisplay::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_699_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimEveDisplay::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_699_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimEveDisplay*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_699_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimEveDisplay::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_699_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimEveDisplay::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_699_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimEveDisplay::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_699_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimEveDisplay::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimAnalysisRootDict_699_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimEveDisplay* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimEveDisplay(*(WCSimEveDisplay*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimEveDisplay));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimEveDisplay G__TWCSimEveDisplay;
static int G__WCSimAnalysisRootDict_699_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimEveDisplay*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimEveDisplay*) (soff+(sizeof(WCSimEveDisplay)*i)))->~G__TWCSimEveDisplay();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimEveDisplay*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimEveDisplay*) (soff))->~G__TWCSimEveDisplay();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimAnalysisRootDict_699_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimEveDisplay* dest = (WCSimEveDisplay*) G__getstructoffset();
   *dest = *(WCSimEveDisplay*) libp->para[0].ref;
   const WCSimEveDisplay& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimEventWriter */
static int G__WCSimAnalysisRootDict_700_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimEventWriter* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimEventWriter[n];
     } else {
       p = new((void*) gvp) WCSimEventWriter[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimEventWriter;
     } else {
       p = new((void*) gvp) WCSimEventWriter;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimEventWriter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_700_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimEventWriter*) G__getstructoffset())->AddFile((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_700_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((WCSimEventWriter*) G__getstructoffset())->WriteOutGeometry((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((WCSimEventWriter*) G__getstructoffset())->WriteOutGeometry();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_700_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((WCSimEventWriter*) G__getstructoffset())->WriteOutTracks((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((WCSimEventWriter*) G__getstructoffset())->WriteOutTracks();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_700_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((WCSimEventWriter*) G__getstructoffset())->WriteOutDigits((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((WCSimEventWriter*) G__getstructoffset())->WriteOutDigits();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_700_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((WCSimEventWriter*) G__getstructoffset())->Run((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((WCSimEventWriter*) G__getstructoffset())->Run();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_700_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimEventWriter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_700_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimEventWriter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_700_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimEventWriter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_700_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimEventWriter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_700_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimEventWriter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_700_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimEventWriter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_700_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimEventWriter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_700_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimEventWriter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_700_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimEventWriter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimAnalysisRootDict_700_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimEventWriter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimEventWriter(*(WCSimEventWriter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimEventWriter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimEventWriter G__TWCSimEventWriter;
static int G__WCSimAnalysisRootDict_700_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimEventWriter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimEventWriter*) (soff+(sizeof(WCSimEventWriter)*i)))->~G__TWCSimEventWriter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimEventWriter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimEventWriter*) (soff))->~G__TWCSimEventWriter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimAnalysisRootDict_700_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimEventWriter* dest = (WCSimEventWriter*) G__getstructoffset();
   *dest = *(WCSimEventWriter*) libp->para[0].ref;
   const WCSimEventWriter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimGeometry */
static int G__WCSimAnalysisRootDict_701_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((WCSimGeometry*) G__getstructoffset())->AsString((WCSimGeometry::GeoConfiguration_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimGeometry::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimGeometry::BuildGeometry((WCSimRootGeom*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimGeometry::PrintGeometry();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      WCSimGeometry::WriteGeometry((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      WCSimGeometry::WriteGeometry();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) WCSimGeometry::TouchGeometry());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimGeometry::Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimGeometry*) G__getstructoffset())->SetGeometry((WCSimRootGeom*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((WCSimGeometry*) G__getstructoffset())->WriteToFile((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((WCSimGeometry*) G__getstructoffset())->WriteToFile();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimGeometry*) G__getstructoffset())->GetWCSimGeometry());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimGeometry*) G__getstructoffset())->GetGeoConfig());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimGeometry*) G__getstructoffset())->GetGeoType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WCSimGeometry*) G__getstructoffset())->IsCylinder());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimGeometry*) G__getstructoffset())->GetCylRadius());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimGeometry*) G__getstructoffset())->GetCylLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimGeometry*) G__getstructoffset())->GetCylFiducialRadius());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimGeometry*) G__getstructoffset())->GetCylFiducialLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WCSimGeometry*) G__getstructoffset())->IsMailBox());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimGeometry*) G__getstructoffset())->GetMailBoxX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimGeometry*) G__getstructoffset())->GetMailBoxY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimGeometry*) G__getstructoffset())->GetMailBoxZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimGeometry*) G__getstructoffset())->GetMailBoxFiducialX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimGeometry*) G__getstructoffset())->GetMailBoxFiducialY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimGeometry*) G__getstructoffset())->GetMailBoxFiducialZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimGeometry*) G__getstructoffset())->GetArea());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimGeometry*) G__getstructoffset())->GetVolume());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimGeometry*) G__getstructoffset())->GetFiducialVolume());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimGeometry*) G__getstructoffset())->GetNumPMTs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimGeometry*) G__getstructoffset())->GetPMTRadius());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimGeometry*) G__getstructoffset())->GetPMTCoverage());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimGeometry*) G__getstructoffset())->GetPMTSeparation());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimGeometry*) G__getstructoffset())->GetRegion((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimGeometry*) G__getstructoffset())->GetX((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimGeometry*) G__getstructoffset())->GetY((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimGeometry*) G__getstructoffset())->GetZ((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WCSimGeometry*) G__getstructoffset())->InsideDetector((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WCSimGeometry*) G__getstructoffset())->InsideFiducialVolume((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WCSimGeometry*) G__getstructoffset())->InsideDetector((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimGeometry*) G__getstructoffset())->DistanceToEdge((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimGeometry*) G__getstructoffset())->ProjectToNearEdge(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, *(Double_t*) G__Doubleref(&libp->para[6]), *(Double_t*) G__Doubleref(&libp->para[7])
, *(Double_t*) G__Doubleref(&libp->para[8]), *(Int_t*) G__Intref(&libp->para[9]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimGeometry*) G__getstructoffset())->ProjectToFarEdge(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, *(Double_t*) G__Doubleref(&libp->para[6]), *(Double_t*) G__Doubleref(&libp->para[7])
, *(Double_t*) G__Doubleref(&libp->para[8]), *(Int_t*) G__Intref(&libp->para[9]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimGeometry*) G__getstructoffset())->ForwardProjectionToEdge((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimGeometry*) G__getstructoffset())->BackwardProjectionToEdge((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimGeometry*) G__getstructoffset())->ProjectToEdge(
(Bool_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), *(Double_t*) G__Doubleref(&libp->para[7])
, *(Double_t*) G__Doubleref(&libp->para[8]), *(Double_t*) G__Doubleref(&libp->para[9])
, *(Int_t*) G__Intref(&libp->para[10]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimGeometry*) G__getstructoffset())->ProjectToEdgeOld(
(Bool_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), *(Double_t*) G__Doubleref(&libp->para[7])
, *(Double_t*) G__Doubleref(&libp->para[8]), *(Double_t*) G__Doubleref(&libp->para[9])
, *(Int_t*) G__Intref(&libp->para[10]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimGeometry*) G__getstructoffset())->XYZtoUV((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, *(Double_t*) G__Doubleref(&libp->para[4]), *(Double_t*) G__Doubleref(&libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimGeometry::FindCircle(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), *(Double_t*) G__Doubleref(&libp->para[9])
, *(Double_t*) G__Doubleref(&libp->para[10]), *(Double_t*) G__Doubleref(&libp->para[11])
, *(Double_t*) G__Doubleref(&libp->para[12]), *(Double_t*) G__Doubleref(&libp->para[13])
, *(Double_t*) G__Doubleref(&libp->para[14]), *(Double_t*) G__Doubleref(&libp->para[15]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimGeometry::FindCircle(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, *(Double_t*) G__Doubleref(&libp->para[8]), *(Double_t*) G__Doubleref(&libp->para[9])
, *(Double_t*) G__Doubleref(&libp->para[10]), *(Double_t*) G__Doubleref(&libp->para[11])
, *(Double_t*) G__Doubleref(&libp->para[12]), *(Double_t*) G__Doubleref(&libp->para[13])
, *(Double_t*) G__Doubleref(&libp->para[14]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimGeometry::FindCircleOld(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, *(Double_t*) G__Doubleref(&libp->para[8]), *(Double_t*) G__Doubleref(&libp->para[9])
, *(Double_t*) G__Doubleref(&libp->para[10]), *(Double_t*) G__Doubleref(&libp->para[11])
, *(Double_t*) G__Doubleref(&libp->para[12]), *(Double_t*) G__Doubleref(&libp->para[13])
, *(Double_t*) G__Doubleref(&libp->para[14]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimGeometry::FindVertex(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t) G__double(libp->para[15])
, *(Double_t*) G__Doubleref(&libp->para[16]), *(Double_t*) G__Doubleref(&libp->para[17])
, *(Double_t*) G__Doubleref(&libp->para[18]), *(Double_t*) G__Doubleref(&libp->para[19])
, *(Double_t*) G__Doubleref(&libp->para[20]), *(Double_t*) G__Doubleref(&libp->para[21])
, *(Double_t*) G__Doubleref(&libp->para[22]), *(Double_t*) G__Doubleref(&libp->para[23]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimGeometry::DistanceToIntersectLine(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), *(Double_t*) G__Doubleref(&libp->para[9])
, *(Double_t*) G__Doubleref(&libp->para[10]), *(Double_t*) G__Doubleref(&libp->para[11])
, *(Double_t*) G__Doubleref(&libp->para[12]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) WCSimGeometry::DistanceToIntersectLine(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), *(Double_t*) G__Doubleref(&libp->para[9])
, *(Double_t*) G__Doubleref(&libp->para[10]), *(Double_t*) G__Doubleref(&libp->para[11])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) WCSimGeometry::DistanceToIntersectLine((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Double_t*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimGeometry::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimGeometry::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimGeometry::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimGeometry::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimGeometry*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimGeometry::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimGeometry::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimGeometry::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_701_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimGeometry::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimAnalysisRootDict_701_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimGeometry* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimGeometry(*(WCSimGeometry*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimGeometry));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimAnalysisRootDict_701_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimGeometry* dest = (WCSimGeometry*) G__getstructoffset();
   *dest = *(WCSimGeometry*) libp->para[0].ref;
   const WCSimGeometry& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimInterface */
static int G__WCSimAnalysisRootDict_705_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimInterface::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_705_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) WCSimInterface::TouchData());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_705_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) WCSimInterface::TouchEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_705_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimInterface::LoadData((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_705_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimInterface::LoadEvent((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_705_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimInterface::GetNumEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_705_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimInterface::FilterTrigger((WCSimRootEvent*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_705_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimInterface::TrueEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_705_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimInterface::RecoEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_705_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimInterface::WCSimEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_705_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimInterface::WCSimTrigger());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_705_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimInterface::GetRunNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_705_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimInterface::GetEventNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_705_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimInterface::GetTriggerNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_705_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimInterface::Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_705_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimInterface::SetEnergyThreshold((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_705_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimInterface::SetRangeThreshold((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_705_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimInterface*) G__getstructoffset())->SetTrueEnergyThreshold((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_705_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimInterface*) G__getstructoffset())->SetTrueRangeThreshold((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_705_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimInterface*) G__getstructoffset())->GetTrueEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_705_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimInterface*) G__getstructoffset())->GetRecoEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_705_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimInterface*) G__getstructoffset())->GetWCSimEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_705_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimInterface*) G__getstructoffset())->GetWCSimTrigger());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_705_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimInterface*) G__getstructoffset())->GetWCSimEvent((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_705_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimInterface*) G__getstructoffset())->GetWCSimTrigger((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_705_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimInterface*) G__getstructoffset())->AddFile((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_705_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimInterface*) G__getstructoffset())->BuildEvent((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_705_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WCSimInterface*) G__getstructoffset())->CheckEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_705_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimInterface*) G__getstructoffset())->GetEntries());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_705_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimInterface*) G__getstructoffset())->ResetForNewSample();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_705_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimInterface::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_705_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimInterface::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_705_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimInterface::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_705_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimInterface::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_705_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimInterface*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_705_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimInterface::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_705_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimInterface::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_705_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimInterface::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_705_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimInterface::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimAnalysisRootDict_705_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimInterface* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimInterface(*(WCSimInterface*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimInterface));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimAnalysisRootDict_705_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimInterface* dest = (WCSimInterface*) G__getstructoffset();
   *dest = *(WCSimInterface*) libp->para[0].ref;
   const WCSimInterface& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimParameters */
static int G__WCSimAnalysisRootDict_706_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimParameters::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_706_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimParameters::UseSimpleParameters();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_706_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimParameters::UseSimpleTimeResolution();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_706_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimParameters::UseSimpleTimeSlew();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_706_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimParameters::UseSimpleRefractiveIndex();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_706_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) WCSimParameters::SpeedOfLight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_706_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) WCSimParameters::CherenkovAngle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_706_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) WCSimParameters::TimeResolution((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_706_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) WCSimParameters::TimeSlew((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_706_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) WCSimParameters::RefractiveIndex((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_706_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) WCSimParameters::ThetaC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_706_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) WCSimParameters::CosThetaC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_706_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimParameters::PrintParameters();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_706_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimParameters*) G__getstructoffset())->RunPrintParameters();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_706_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimParameters*) G__getstructoffset())->SetSimpleTimeResolution();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_706_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WCSimParameters*) G__getstructoffset())->SimpleTimeResolution());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_706_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimParameters*) G__getstructoffset())->SetSimpleTimeSlew();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_706_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WCSimParameters*) G__getstructoffset())->SimpleTimeSlew());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_706_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimParameters*) G__getstructoffset())->SetSimpleRefractiveIndex();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_706_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WCSimParameters*) G__getstructoffset())->SimpleRefractiveIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_706_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimParameters*) G__getstructoffset())->GetTimeResolution((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_706_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimParameters*) G__getstructoffset())->GetTimeSlew((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_706_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimParameters*) G__getstructoffset())->GetRefractiveIndex((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_706_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimParameters*) G__getstructoffset())->GetSimpleTimeResolution((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_706_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimParameters*) G__getstructoffset())->GetSimpleTimeSlew());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_706_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimParameters*) G__getstructoffset())->GetSimpleRefractiveIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_706_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimParameters::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_706_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimParameters::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_706_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimParameters::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_706_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimParameters::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_706_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimParameters*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_706_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimParameters::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_706_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimParameters::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_706_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimParameters::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_706_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimParameters::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimAnalysisRootDict_706_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimParameters* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimParameters(*(WCSimParameters*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimParameters));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimAnalysisRootDict_706_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimParameters* dest = (WCSimParameters*) G__getstructoffset();
   *dest = *(WCSimParameters*) libp->para[0].ref;
   const WCSimParameters& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimRecoObjectTable */
static int G__WCSimAnalysisRootDict_707_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimRecoObjectTable::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_707_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoObjectTable*) G__getstructoffset())->NewDigit();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_707_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoObjectTable*) G__getstructoffset())->DeleteDigit();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_707_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimRecoObjectTable*) G__getstructoffset())->NumberOfDigits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_707_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoObjectTable*) G__getstructoffset())->NewCluster();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_707_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoObjectTable*) G__getstructoffset())->DeleteCluster();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_707_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimRecoObjectTable*) G__getstructoffset())->NumberOfClusters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_707_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoObjectTable*) G__getstructoffset())->NewClusterDigit();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_707_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoObjectTable*) G__getstructoffset())->DeleteClusterDigit();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_707_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimRecoObjectTable*) G__getstructoffset())->NumberOfClusterDigits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_707_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoObjectTable*) G__getstructoffset())->NewVertex();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_707_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoObjectTable*) G__getstructoffset())->DeleteVertex();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_707_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimRecoObjectTable*) G__getstructoffset())->NumberOfVertices());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_707_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoObjectTable*) G__getstructoffset())->NewRing();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_707_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoObjectTable*) G__getstructoffset())->DeleteRing();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_707_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimRecoObjectTable*) G__getstructoffset())->NumberOfRings());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_707_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoObjectTable*) G__getstructoffset())->NewEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_707_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoObjectTable*) G__getstructoffset())->DeleteEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_707_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimRecoObjectTable*) G__getstructoffset())->NumberOfEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_707_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoObjectTable*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_707_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoObjectTable*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_707_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimRecoObjectTable::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_707_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRecoObjectTable::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_707_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimRecoObjectTable::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_707_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimRecoObjectTable::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_707_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoObjectTable*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_707_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRecoObjectTable::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_707_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRecoObjectTable::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_707_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRecoObjectTable::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_707_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRecoObjectTable::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimAnalysisRootDict_707_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimRecoObjectTable* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimRecoObjectTable(*(WCSimRecoObjectTable*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoObjectTable));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimAnalysisRootDict_707_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRecoObjectTable* dest = (WCSimRecoObjectTable*) G__getstructoffset();
   *dest = *(WCSimRecoObjectTable*) libp->para[0].ref;
   const WCSimRecoObjectTable& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimRecoFactory */
static int G__WCSimAnalysisRootDict_708_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimRecoFactory::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_708_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimRecoFactory*) G__getstructoffset())->MakeReco());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_708_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimRecoFactory*) G__getstructoffset())->MakeReco((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_708_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimRecoFactory::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_708_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRecoFactory::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_708_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimRecoFactory::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_708_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimRecoFactory::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_708_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoFactory*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_708_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRecoFactory::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_708_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRecoFactory::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_708_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRecoFactory::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_708_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRecoFactory::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimAnalysisRootDict_708_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimRecoFactory* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimRecoFactory(*(WCSimRecoFactory*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoFactory));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimAnalysisRootDict_708_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRecoFactory* dest = (WCSimRecoFactory*) G__getstructoffset();
   *dest = *(WCSimRecoFactory*) libp->para[0].ref;
   const WCSimRecoFactory& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimRecoAB */
static int G__WCSimAnalysisRootDict_710_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRecoAB* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimRecoAB[n];
     } else {
       p = new((void*) gvp) WCSimRecoAB[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimRecoAB;
     } else {
       p = new((void*) gvp) WCSimRecoAB;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoAB));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_710_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimRecoAB::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_710_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRecoAB::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_710_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimRecoAB::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_710_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimRecoAB::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_710_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoAB*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_710_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRecoAB::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_710_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRecoAB::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_710_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRecoAB::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_710_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRecoAB::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimAnalysisRootDict_710_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimRecoAB* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimRecoAB(*(WCSimRecoAB*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoAB));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimRecoAB G__TWCSimRecoAB;
static int G__WCSimAnalysisRootDict_710_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimRecoAB*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimRecoAB*) (soff+(sizeof(WCSimRecoAB)*i)))->~G__TWCSimRecoAB();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimRecoAB*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimRecoAB*) (soff))->~G__TWCSimRecoAB();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimAnalysisRootDict_710_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRecoAB* dest = (WCSimRecoAB*) G__getstructoffset();
   *dest = *(WCSimRecoAB*) libp->para[0].ref;
   const WCSimRecoAB& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimRecoCluster */
static int G__WCSimAnalysisRootDict_711_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRecoCluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimRecoCluster[n];
     } else {
       p = new((void*) gvp) WCSimRecoCluster[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimRecoCluster;
     } else {
       p = new((void*) gvp) WCSimRecoCluster;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_711_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoCluster*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_711_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoCluster*) G__getstructoffset())->SortCluster();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_711_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoCluster*) G__getstructoffset())->AddDigit((WCSimRecoDigit*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_711_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimRecoCluster*) G__getstructoffset())->GetDigit((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_711_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimRecoCluster*) G__getstructoffset())->GetNDigits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_711_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimRecoCluster::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_711_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRecoCluster::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_711_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimRecoCluster::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_711_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimRecoCluster::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_711_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoCluster*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_711_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRecoCluster::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_711_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRecoCluster::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_711_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRecoCluster::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_711_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRecoCluster::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimAnalysisRootDict_711_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimRecoCluster* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimRecoCluster(*(WCSimRecoCluster*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimRecoCluster G__TWCSimRecoCluster;
static int G__WCSimAnalysisRootDict_711_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimRecoCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimRecoCluster*) (soff+(sizeof(WCSimRecoCluster)*i)))->~G__TWCSimRecoCluster();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimRecoCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimRecoCluster*) (soff))->~G__TWCSimRecoCluster();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimAnalysisRootDict_711_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRecoCluster* dest = (WCSimRecoCluster*) G__getstructoffset();
   *dest = *(WCSimRecoCluster*) libp->para[0].ref;
   const WCSimRecoCluster& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimRecoClusterDigit */
static int G__WCSimAnalysisRootDict_712_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRecoClusterDigit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new WCSimRecoClusterDigit((WCSimRecoDigit*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) WCSimRecoClusterDigit((WCSimRecoDigit*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoClusterDigit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_712_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoClusterDigit*) G__getstructoffset())->AddClusterDigit((WCSimRecoClusterDigit*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_712_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimRecoClusterDigit*) G__getstructoffset())->GetNClusterDigits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_712_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimRecoClusterDigit*) G__getstructoffset())->GetClusterDigit((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_712_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimRecoClusterDigit*) G__getstructoffset())->GetClusterDigitList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_712_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoClusterDigit*) G__getstructoffset())->GetX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_712_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoClusterDigit*) G__getstructoffset())->GetY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_712_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoClusterDigit*) G__getstructoffset())->GetZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_712_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoClusterDigit*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_712_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((WCSimRecoClusterDigit*) G__getstructoffset())->SetClustered((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((WCSimRecoClusterDigit*) G__getstructoffset())->SetClustered();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_712_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WCSimRecoClusterDigit*) G__getstructoffset())->IsClustered());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_712_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WCSimRecoClusterDigit*) G__getstructoffset())->IsAllClustered());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_712_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimRecoClusterDigit*) G__getstructoffset())->GetRecoDigit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_712_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimRecoClusterDigit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_712_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRecoClusterDigit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_712_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimRecoClusterDigit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_712_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimRecoClusterDigit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_712_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoClusterDigit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_712_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRecoClusterDigit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_712_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRecoClusterDigit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_712_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRecoClusterDigit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_712_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRecoClusterDigit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimAnalysisRootDict_712_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimRecoClusterDigit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimRecoClusterDigit(*(WCSimRecoClusterDigit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoClusterDigit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimRecoClusterDigit G__TWCSimRecoClusterDigit;
static int G__WCSimAnalysisRootDict_712_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimRecoClusterDigit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimRecoClusterDigit*) (soff+(sizeof(WCSimRecoClusterDigit)*i)))->~G__TWCSimRecoClusterDigit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimRecoClusterDigit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimRecoClusterDigit*) (soff))->~G__TWCSimRecoClusterDigit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimAnalysisRootDict_712_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRecoClusterDigit* dest = (WCSimRecoClusterDigit*) G__getstructoffset();
   *dest = *(WCSimRecoClusterDigit*) libp->para[0].ref;
   const WCSimRecoClusterDigit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimHoughTransform */
static int G__WCSimAnalysisRootDict_717_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimHoughTransform* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new WCSimHoughTransform((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) WCSimHoughTransform((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimHoughTransform));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_717_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimHoughTransform*) G__getstructoffset())->Fill((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_717_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimHoughTransform*) G__getstructoffset())->Fill((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_717_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimHoughTransform*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_717_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimHoughTransform*) G__getstructoffset())->GetEntries());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_717_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimHoughTransform*) G__getstructoffset())->GetIntegral());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_717_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimHoughTransform*) G__getstructoffset())->GetEntry((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_717_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimHoughTransform*) G__getstructoffset())->GetX((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_717_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimHoughTransform*) G__getstructoffset())->GetY((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_717_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimHoughTransform*) G__getstructoffset())->GetPhiBins());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_717_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimHoughTransform*) G__getstructoffset())->GetThetaBins());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_717_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimHoughTransform*) G__getstructoffset())->GetBinX((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_717_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimHoughTransform*) G__getstructoffset())->GetBinY((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_717_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimHoughTransform*) G__getstructoffset())->FindPeak(*(Double_t*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_717_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimHoughTransform*) G__getstructoffset())->FindPeak(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_717_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimHoughTransform*) G__getstructoffset())->FindPeak(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_717_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimHoughTransform*) G__getstructoffset())->GetTH2D((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_717_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((WCSimHoughTransform*) G__getstructoffset())->GetRotatedTH2D((const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((WCSimHoughTransform*) G__getstructoffset())->GetRotatedTH2D((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_717_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimHoughTransform::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_717_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimHoughTransform::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_717_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimHoughTransform::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_717_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimHoughTransform::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_717_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimHoughTransform*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_717_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimHoughTransform::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_717_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimHoughTransform::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_717_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimHoughTransform::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_717_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimHoughTransform::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimAnalysisRootDict_717_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimHoughTransform* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimHoughTransform(*(WCSimHoughTransform*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimHoughTransform));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimHoughTransform G__TWCSimHoughTransform;
static int G__WCSimAnalysisRootDict_717_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimHoughTransform*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimHoughTransform*) (soff+(sizeof(WCSimHoughTransform)*i)))->~G__TWCSimHoughTransform();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimHoughTransform*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimHoughTransform*) (soff))->~G__TWCSimHoughTransform();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimAnalysisRootDict_717_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimHoughTransform* dest = (WCSimHoughTransform*) G__getstructoffset();
   *dest = *(WCSimHoughTransform*) libp->para[0].ref;
   const WCSimHoughTransform& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimHoughTransformArray */
static int G__WCSimAnalysisRootDict_718_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimHoughTransformArray* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new WCSimHoughTransformArray(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
   } else {
     p = new((void*) gvp) WCSimHoughTransformArray(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimHoughTransformArray));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_718_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimHoughTransformArray*) G__getstructoffset())->BuildArray((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_718_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimHoughTransformArray*) G__getstructoffset())->PrintArray();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_718_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimHoughTransformArray*) G__getstructoffset())->GetBins());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_718_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimHoughTransformArray*) G__getstructoffset())->GetConeAngleBins());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_718_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimHoughTransformArray*) G__getstructoffset())->GetConeAngleMin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_718_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimHoughTransformArray*) G__getstructoffset())->GetConeAngleMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_718_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimHoughTransformArray*) G__getstructoffset())->GetConeAngle((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_718_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimHoughTransformArray*) G__getstructoffset())->GetXBins());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_718_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimHoughTransformArray*) G__getstructoffset())->GetYBins());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_718_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimHoughTransformArray*) G__getstructoffset())->GetAngle((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_718_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimHoughTransformArray*) G__getstructoffset())->FindBin((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_718_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimHoughTransformArray*) G__getstructoffset())->GetHoughTransform((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_718_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimHoughTransformArray*) G__getstructoffset())->FindPeak(*(Int_t*) G__Intref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_718_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimHoughTransformArray*) G__getstructoffset())->FindPeak(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_718_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimHoughTransformArray*) G__getstructoffset())->FindPeak(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3])
, *(Double_t*) G__Doubleref(&libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_718_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimHoughTransformArray*) G__getstructoffset())->FindPeak(*(vector<Double_t>*) libp->para[0].ref, *(vector<Double_t>*) libp->para[1].ref
, *(vector<Double_t>*) libp->para[2].ref, *(vector<Double_t>*) libp->para[3].ref
, *(vector<Double_t>*) libp->para[4].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_718_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimHoughTransformArray*) G__getstructoffset())->AngleMaxima(*(vector<std::vector<Float_t> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_718_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimHoughTransformArray*) G__getstructoffset())->FitTSpectrum2(*(vector<Double_t>*) libp->para[0].ref, *(vector<Double_t>*) libp->para[1].ref
, *(vector<Double_t>*) libp->para[2].ref, *(vector<Double_t>*) libp->para[3].ref
, *(vector<Double_t>*) libp->para[4].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_718_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimHoughTransformArray*) G__getstructoffset())->FitTSpectrum3(*(vector<Double_t>*) libp->para[0].ref, *(vector<Double_t>*) libp->para[1].ref
, *(vector<Double_t>*) libp->para[2].ref, *(vector<Double_t>*) libp->para[3].ref
, *(vector<Double_t>*) libp->para[4].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_718_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimHoughTransformArray*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_718_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimHoughTransformArray::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_718_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimHoughTransformArray::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_718_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimHoughTransformArray::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_718_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimHoughTransformArray::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_718_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimHoughTransformArray*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_718_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimHoughTransformArray::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_718_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimHoughTransformArray::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_718_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimHoughTransformArray::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_718_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimHoughTransformArray::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimAnalysisRootDict_718_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimHoughTransformArray* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimHoughTransformArray(*(WCSimHoughTransformArray*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimHoughTransformArray));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimHoughTransformArray G__TWCSimHoughTransformArray;
static int G__WCSimAnalysisRootDict_718_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimHoughTransformArray*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimHoughTransformArray*) (soff+(sizeof(WCSimHoughTransformArray)*i)))->~G__TWCSimHoughTransformArray();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimHoughTransformArray*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimHoughTransformArray*) (soff))->~G__TWCSimHoughTransformArray();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimAnalysisRootDict_718_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimHoughTransformArray* dest = (WCSimHoughTransformArray*) G__getstructoffset();
   *dest = *(WCSimHoughTransformArray*) libp->para[0].ref;
   const WCSimHoughTransformArray& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimDataCleaner */
static int G__WCSimAnalysisRootDict_727_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimDataCleaner::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_727_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimDataCleaner::Config((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_727_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimDataCleaner::MinPulseHeight((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_727_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimDataCleaner::NeighbourRadius((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_727_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimDataCleaner::NeighbourDigits((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_727_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimDataCleaner::ClusterRadius((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_727_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimDataCleaner::ClusterDigits((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_727_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimDataCleaner::TimeWindow((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_727_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimDataCleaner::PrintParameters();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_727_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimDataCleaner*) G__getstructoffset())->RunPrintParameters();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_727_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimDataCleaner*) G__getstructoffset())->SetConfig((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_727_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimDataCleaner*) G__getstructoffset())->SetMinPulseHeight((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_727_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimDataCleaner*) G__getstructoffset())->SetNeighbourRadius((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_727_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimDataCleaner*) G__getstructoffset())->SetNeighbourDigits((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_727_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimDataCleaner*) G__getstructoffset())->SetClusterRadius((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_727_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimDataCleaner*) G__getstructoffset())->SetClusterDigits((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_727_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimDataCleaner*) G__getstructoffset())->SetTimeWindow((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_727_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimDataCleaner*) G__getstructoffset())->Run((vector<WCSimRecoDigit*>*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_727_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimDataCleaner*) G__getstructoffset())->ResetDigits((vector<WCSimRecoDigit*>*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_727_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimDataCleaner*) G__getstructoffset())->FilterDigits((vector<WCSimRecoDigit*>*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_727_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimDataCleaner*) G__getstructoffset())->FilterAll((vector<WCSimRecoDigit*>*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_727_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimDataCleaner*) G__getstructoffset())->FilterByPulseHeight((vector<WCSimRecoDigit*>*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_727_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimDataCleaner*) G__getstructoffset())->FilterByNeighbours((vector<WCSimRecoDigit*>*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_727_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimDataCleaner*) G__getstructoffset())->FilterByClusters((vector<WCSimRecoDigit*>*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_727_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimDataCleaner*) G__getstructoffset())->RecoClusters((vector<WCSimRecoDigit*>*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_727_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimDataCleaner*) G__getstructoffset())->FilterGoldenDigits((vector<WCSimRecoDigit*>*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_727_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimDataCleaner::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_727_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimDataCleaner::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_727_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimDataCleaner::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_727_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimDataCleaner::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_727_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimDataCleaner*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_727_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimDataCleaner::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_727_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimDataCleaner::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_727_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimDataCleaner::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_727_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimDataCleaner::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimAnalysisRootDict_727_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimDataCleaner* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimDataCleaner(*(WCSimDataCleaner*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDataCleaner));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimAnalysisRootDict_727_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimDataCleaner* dest = (WCSimDataCleaner*) G__getstructoffset();
   *dest = *(WCSimDataCleaner*) libp->para[0].ref;
   const WCSimDataCleaner& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimVertexFinder */
static int G__WCSimAnalysisRootDict_736_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimVertexFinder::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      WCSimVertexFinder::PointFitOnly((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      WCSimVertexFinder::PointFitOnly();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      WCSimVertexFinder::UseTrueVertex((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      WCSimVertexFinder::UseTrueVertex();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      WCSimVertexFinder::UseTruePosition((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      WCSimVertexFinder::UseTruePosition();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      WCSimVertexFinder::UseTrueDirection((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      WCSimVertexFinder::UseTrueDirection();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      WCSimVertexFinder::SeedWithTrueVertex((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      WCSimVertexFinder::SeedWithTrueVertex();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      WCSimVertexFinder::SeedWithSimpleVertex((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      WCSimVertexFinder::SeedWithSimpleVertex();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      WCSimVertexFinder::SeedWithQuadruples((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      WCSimVertexFinder::SeedWithQuadruples();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimVertexFinder::NumSeeds((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimVertexFinder::FitWeights((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimVertexFinder::FitTimeParams();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimVertexFinder::FixTimeParams((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimVertexFinder::FitConeParams();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimVertexFinder::FixConeParams((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimVertexFinder::FixVertexBias((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimVertexFinder::PrintParameters();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->RunPrintParameters();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->SetPointFitOnly((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->UsingTrueVertex((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->UsingTruePosition((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->UsingTrueDirection((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->SeedingWithTrueVertex((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->SeedingWithSimpleVertex((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->SeedingWithQuadruples((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->SetNumSeeds((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->SetFitTimeParams();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->SetFixTimeParams((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->SetFitConeParams();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->SetFixConeParams((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->SetFitWeights((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->SetVertexBias((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimVertexFinder*) G__getstructoffset())->Run((WCSimRecoEvent*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimVertexFinder*) G__getstructoffset())->RunPointFit((WCSimRecoEvent*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimVertexFinder*) G__getstructoffset())->RunExtendedFit((WCSimRecoEvent*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimVertexFinder*) G__getstructoffset())->RunPointFitFromTruth((WCSimRecoEvent*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimVertexFinder*) G__getstructoffset())->RunExtendedFitFromTruth((WCSimRecoEvent*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimVertexFinder*) G__getstructoffset())->RunPointFit((WCSimRecoEvent*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimVertexFinder*) G__getstructoffset())->RunPointFit(
(WCSimRecoEvent*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimVertexFinder*) G__getstructoffset())->RunExtendedFit(
(WCSimRecoEvent*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimVertexFinder*) G__getstructoffset())->Run(
(WCSimRecoEvent*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimVertexFinder*) G__getstructoffset())->GetSimplePosition());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimVertexFinder*) G__getstructoffset())->GetSimpleDirection());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimVertexFinder*) G__getstructoffset())->GetPointPosition());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimVertexFinder*) G__getstructoffset())->GetPointDirection());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimVertexFinder*) G__getstructoffset())->GetPointVertex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimVertexFinder*) G__getstructoffset())->GetExtendedVertex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->PointPositionChi2((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3])
, *(Double_t*) G__Doubleref(&libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->PointPositionChi2(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->PointDirectionChi2(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, *(Double_t*) G__Doubleref(&libp->para[6]), *(Double_t*) G__Doubleref(&libp->para[7]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->PointDirectionChi2(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->PointVertexChi2(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, *(Double_t*) G__Doubleref(&libp->para[6]), *(Double_t*) G__Doubleref(&libp->para[7])
, *(Double_t*) G__Doubleref(&libp->para[8]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->PointVertexChi2(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->ExtendedVertexChi2(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, *(Double_t*) G__Doubleref(&libp->para[6]), *(Double_t*) G__Doubleref(&libp->para[7])
, *(Double_t*) G__Doubleref(&libp->para[8]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->ExtendedVertexChi2(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->PenaltyChi2((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->FixPositionChi2((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->FixDirectionChi2((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->FitConePropertiesFoM(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->ConePropertiesFoM(*(Double_t*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->FitPointConePropertiesLnL(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->FitExtendedConePropertiesLnL(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->ConePropertiesLnL((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3])
, *(Double_t*) G__Doubleref(&libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->FindSimpleTimeProperties(*(Double_t*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->FitTimePropertiesFoM(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->TimePropertiesFoM((Double_t) G__double(libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->FitPointTimePropertiesLnL(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->FitExtendedTimePropertiesLnL(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->TimePropertiesLnL((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimVertexFinder*) G__getstructoffset())->GetIterations());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->time_fit_itr();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->cone_fit_itr();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->point_position_itr();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->point_direction_itr();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->point_vertex_itr();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->extended_vertex_itr();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->time_fit_reset_itr();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->cone_fit_reset_itr();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->point_position_reset_itr();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->point_direction_reset_itr();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->point_vertex_reset_itr();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_105(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->extended_vertex_reset_itr();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_106(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimVertexFinder*) G__getstructoffset())->time_fit_iterations());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_107(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimVertexFinder*) G__getstructoffset())->cone_fit_iterations());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_108(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimVertexFinder*) G__getstructoffset())->point_position_iterations());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_109(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimVertexFinder*) G__getstructoffset())->point_direction_iterations());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_110(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimVertexFinder*) G__getstructoffset())->point_vertex_iterations());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_111(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimVertexFinder*) G__getstructoffset())->extended_vertex_iterations());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_112(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_115(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimVertexFinder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_116(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimVertexFinder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_117(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimVertexFinder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_118(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimVertexFinder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_122(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexFinder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_123(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimVertexFinder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_124(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimVertexFinder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_125(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimVertexFinder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_736_0_126(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimVertexFinder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimAnalysisRootDict_736_0_127(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimVertexFinder* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimVertexFinder(*(WCSimVertexFinder*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexFinder));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimAnalysisRootDict_736_0_128(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimVertexFinder* dest = (WCSimVertexFinder*) G__getstructoffset();
   *dest = *(WCSimVertexFinder*) libp->para[0].ref;
   const WCSimVertexFinder& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimVertexGeometry */
static int G__WCSimAnalysisRootDict_741_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimVertexGeometry::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexGeometry*) G__getstructoffset())->LoadEvent((WCSimRecoEvent*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexGeometry*) G__getstructoffset())->CalcResiduals((WCSimRecoEvent*) G__int(libp->para[0]), (WCSimRecoVertex*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexGeometry*) G__getstructoffset())->CalcResiduals((WCSimRecoVertex*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexGeometry*) G__getstructoffset())->CalcResiduals(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexGeometry*) G__getstructoffset())->CalcPointResiduals(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexGeometry*) G__getstructoffset())->CalcExtendedResiduals(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((WCSimVertexGeometry*) G__getstructoffset())->CalcVertexSeeds((WCSimRecoEvent*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((WCSimVertexGeometry*) G__getstructoffset())->CalcVertexSeeds((WCSimRecoEvent*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((WCSimVertexGeometry*) G__getstructoffset())->CalcVertexSeeds((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((WCSimVertexGeometry*) G__getstructoffset())->CalcVertexSeeds();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimVertexGeometry*) G__getstructoffset())->CalcSimpleVertex((WCSimRecoEvent*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimVertexGeometry*) G__getstructoffset())->CalcSimpleVertex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimVertexGeometry*) G__getstructoffset())->CalcSimpleDirection((WCSimRecoEvent*) G__int(libp->para[0]), (WCSimRecoVertex*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimVertexGeometry*) G__getstructoffset())->CalcSimpleDirection((WCSimRecoVertex*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimVertexGeometry*) G__getstructoffset())->GetNDigits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimVertexGeometry*) G__getstructoffset())->GetNFilterDigits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WCSimVertexGeometry*) G__getstructoffset())->IsFiltered((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimVertexGeometry*) G__getstructoffset())->GetDigitX((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimVertexGeometry*) G__getstructoffset())->GetDigitY((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimVertexGeometry*) G__getstructoffset())->GetDigitZ((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimVertexGeometry*) G__getstructoffset())->GetDigitT((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimVertexGeometry*) G__getstructoffset())->GetDigitQ((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimVertexGeometry*) G__getstructoffset())->GetConeAngle((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimVertexGeometry*) G__getstructoffset())->GetAngle((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimVertexGeometry*) G__getstructoffset())->GetZenith((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimVertexGeometry*) G__getstructoffset())->GetAzimuth((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimVertexGeometry*) G__getstructoffset())->GetSolidAngle((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimVertexGeometry*) G__getstructoffset())->GetDistPoint((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimVertexGeometry*) G__getstructoffset())->GetDistTrack((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimVertexGeometry*) G__getstructoffset())->GetDistPhoton((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimVertexGeometry*) G__getstructoffset())->GetDistScatter((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimVertexGeometry*) G__getstructoffset())->GetDeltaTime((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimVertexGeometry*) G__getstructoffset())->GetDeltaSigma((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimVertexGeometry*) G__getstructoffset())->GetDeltaAngle((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimVertexGeometry*) G__getstructoffset())->GetDeltaPoint((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimVertexGeometry*) G__getstructoffset())->GetDeltaTrack((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimVertexGeometry*) G__getstructoffset())->GetDeltaPhoton((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimVertexGeometry*) G__getstructoffset())->GetDeltaScatter((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimVertexGeometry*) G__getstructoffset())->GetPointPath((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimVertexGeometry*) G__getstructoffset())->GetExtendedPath((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimVertexGeometry*) G__getstructoffset())->GetPointResidual((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimVertexGeometry*) G__getstructoffset())->GetExtendedResidual((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimVertexGeometry*) G__getstructoffset())->GetDelta((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimVertexGeometry*) G__getstructoffset())->GetDeltaCorrection((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((WCSimVertexGeometry*) G__getstructoffset())->GetNSeeds());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimVertexGeometry*) G__getstructoffset())->GetSeedVtxX((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimVertexGeometry*) G__getstructoffset())->GetSeedVtxY((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimVertexGeometry*) G__getstructoffset())->GetSeedVtxZ((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimVertexGeometry*) G__getstructoffset())->GetSeedVtxTime((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimVertexGeometry::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimVertexGeometry::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimVertexGeometry::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimVertexGeometry::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexGeometry*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimVertexGeometry::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimVertexGeometry::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimVertexGeometry::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_741_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimVertexGeometry::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimAnalysisRootDict_741_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimVertexGeometry* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimVertexGeometry(*(WCSimVertexGeometry*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexGeometry));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimAnalysisRootDict_741_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimVertexGeometry* dest = (WCSimVertexGeometry*) G__getstructoffset();
   *dest = *(WCSimVertexGeometry*) libp->para[0].ref;
   const WCSimVertexGeometry& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimVertexViewer */
static int G__WCSimAnalysisRootDict_743_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimVertexViewer* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimVertexViewer[n];
     } else {
       p = new((void*) gvp) WCSimVertexViewer[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimVertexViewer;
     } else {
       p = new((void*) gvp) WCSimVertexViewer;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexViewer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_743_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((WCSimVertexViewer*) G__getstructoffset())->DrawNewRecoEvent((WCSimRecoEvent*) G__int(libp->para[0]), (WCSimRecoVertex*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((WCSimVertexViewer*) G__getstructoffset())->DrawNewRecoEvent((WCSimRecoEvent*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_743_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimVertexViewer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_743_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimVertexViewer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_743_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimVertexViewer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_743_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimVertexViewer::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_743_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexViewer*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_743_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimVertexViewer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_743_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimVertexViewer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_743_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimVertexViewer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_743_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimVertexViewer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimAnalysisRootDict_743_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimVertexViewer* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimVertexViewer(*(WCSimVertexViewer*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexViewer));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimVertexViewer G__TWCSimVertexViewer;
static int G__WCSimAnalysisRootDict_743_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimVertexViewer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimVertexViewer*) (soff+(sizeof(WCSimVertexViewer)*i)))->~G__TWCSimVertexViewer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimVertexViewer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimVertexViewer*) (soff))->~G__TWCSimVertexViewer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimRingFinder */
static int G__WCSimAnalysisRootDict_744_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimRingFinder::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_744_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimRingFinder::UseRecoVertex();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_744_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimRingFinder::HoughX((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_744_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimRingFinder::HoughY((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_744_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimRingFinder::HoughPoints((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_744_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimRingFinder::ConeAngleBins((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_744_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimRingFinder::ConeAngleMin((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_744_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimRingFinder::ConeAngleMax((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_744_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimRingFinder::PrintParameters();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_744_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRingFinder*) G__getstructoffset())->RunPrintParameters();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_744_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRingFinder*) G__getstructoffset())->SetHoughX((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_744_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRingFinder*) G__getstructoffset())->SetHoughY((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_744_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRingFinder*) G__getstructoffset())->SetHoughPoints((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_744_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRingFinder*) G__getstructoffset())->SetConeAngleBins((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_744_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRingFinder*) G__getstructoffset())->SetConeAngleMin((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_744_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRingFinder*) G__getstructoffset())->SetConeAngleMax((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_744_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRingFinder*) G__getstructoffset())->SetUsingRecoVertex();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_744_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WCSimRingFinder*) G__getstructoffset())->UsingRecoVertex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_744_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRingFinder*) G__getstructoffset())->SetUsingTSpectrum2();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_744_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WCSimRingFinder*) G__getstructoffset())->UsingTSpectrum2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_744_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimRingFinder*) G__getstructoffset())->Run((WCSimRecoVertex*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_744_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimRingFinder*) G__getstructoffset())->Run((WCSimRecoEvent*) G__int(libp->para[0]), (WCSimRecoVertex*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_744_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimRingFinder*) G__getstructoffset())->Run((vector<WCSimRecoDigit*>*) G__int(libp->para[0]), (WCSimRecoVertex*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_744_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimRingFinder*) G__getstructoffset())->HoughTransform((WCSimRecoEvent*) G__int(libp->para[0]), (WCSimRecoVertex*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_744_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimRingFinder*) G__getstructoffset())->HoughTransform((vector<WCSimRecoDigit*>*) G__int(libp->para[0]), (WCSimRecoVertex*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_744_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimRingFinder*) G__getstructoffset())->HoughTransformArray((WCSimRecoEvent*) G__int(libp->para[0]), (WCSimRecoVertex*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_744_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimRingFinder*) G__getstructoffset())->HoughTransformArray((vector<WCSimRecoDigit*>*) G__int(libp->para[0]), (WCSimRecoVertex*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_744_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimRingFinder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_744_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRingFinder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_744_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimRingFinder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_744_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimRingFinder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_744_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRingFinder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_744_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRingFinder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_744_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRingFinder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_744_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRingFinder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_744_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRingFinder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimAnalysisRootDict_744_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimRingFinder* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimRingFinder(*(WCSimRingFinder*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRingFinder));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimAnalysisRootDict_744_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRingFinder* dest = (WCSimRingFinder*) G__getstructoffset();
   *dest = *(WCSimRingFinder*) libp->para[0].ref;
   const WCSimRingFinder& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimRingViewer */
static int G__WCSimAnalysisRootDict_745_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRingViewer* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimRingViewer[n];
     } else {
       p = new((void*) gvp) WCSimRingViewer[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimRingViewer;
     } else {
       p = new((void*) gvp) WCSimRingViewer;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRingViewer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_745_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRingViewer*) G__getstructoffset())->Display((WCSimRecoEvent*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_745_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimRingViewer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_745_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRingViewer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_745_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimRingViewer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_745_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimRingViewer::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_745_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRingViewer*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_745_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRingViewer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_745_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRingViewer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_745_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRingViewer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_745_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRingViewer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimAnalysisRootDict_745_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimRingViewer* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimRingViewer(*(WCSimRingViewer*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRingViewer));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimRingViewer G__TWCSimRingViewer;
static int G__WCSimAnalysisRootDict_745_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimRingViewer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimRingViewer*) (soff+(sizeof(WCSimRingViewer)*i)))->~G__TWCSimRingViewer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimRingViewer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimRingViewer*) (soff))->~G__TWCSimRingViewer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimAnalysisRootDict_745_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRingViewer* dest = (WCSimRingViewer*) G__getstructoffset();
   *dest = *(WCSimRingViewer*) libp->para[0].ref;
   const WCSimRingViewer& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimNtuple */
static int G__WCSimAnalysisRootDict_746_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimNtuple* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimNtuple[n];
     } else {
       p = new((void*) gvp) WCSimNtuple[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimNtuple;
     } else {
       p = new((void*) gvp) WCSimNtuple;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimNtuple));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_746_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimNtuple*) G__getstructoffset())->Fill((WCSimTrueEvent*) G__int(libp->para[0]), (WCSimRecoEvent*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_746_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimNtuple*) G__getstructoffset())->OpenFile((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_746_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimNtuple*) G__getstructoffset())->CloseFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_746_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimNtuple*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_746_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimNtuple*) G__getstructoffset())->SetFileName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_746_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimNtuple::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_746_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimNtuple::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_746_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimNtuple::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_746_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimNtuple::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_746_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimNtuple*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_746_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimNtuple::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_746_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimNtuple::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_746_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimNtuple::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_746_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimNtuple::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimAnalysisRootDict_746_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimNtuple* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimNtuple(*(WCSimNtuple*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimNtuple));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimNtuple G__TWCSimNtuple;
static int G__WCSimAnalysisRootDict_746_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimNtuple*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimNtuple*) (soff+(sizeof(WCSimNtuple)*i)))->~G__TWCSimNtuple();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimNtuple*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimNtuple*) (soff))->~G__TWCSimNtuple();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimAnalysisRootDict_746_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimNtuple* dest = (WCSimNtuple*) G__getstructoffset();
   *dest = *(WCSimNtuple*) libp->para[0].ref;
   const WCSimNtuple& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimNtupleFactory */
static int G__WCSimAnalysisRootDict_747_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimNtupleFactory::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_747_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((WCSimNtupleFactory*) G__getstructoffset())->MakeNtuple((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((WCSimNtupleFactory*) G__getstructoffset())->MakeNtuple());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_747_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimNtupleFactory::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_747_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimNtupleFactory::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_747_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimNtupleFactory::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_747_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimNtupleFactory::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_747_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimNtupleFactory*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_747_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimNtupleFactory::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_747_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimNtupleFactory::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_747_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimNtupleFactory::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_747_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimNtupleFactory::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimAnalysisRootDict_747_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimNtupleFactory* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimNtupleFactory(*(WCSimNtupleFactory*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimNtupleFactory));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimAnalysisRootDict_747_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimNtupleFactory* dest = (WCSimNtupleFactory*) G__getstructoffset();
   *dest = *(WCSimNtupleFactory*) libp->para[0].ref;
   const WCSimNtupleFactory& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimRecoNtuple */
static int G__WCSimAnalysisRootDict_748_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRecoNtuple* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimRecoNtuple[n];
     } else {
       p = new((void*) gvp) WCSimRecoNtuple[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimRecoNtuple;
     } else {
       p = new((void*) gvp) WCSimRecoNtuple;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoNtuple));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_748_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimRecoNtuple::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_748_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRecoNtuple::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_748_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimRecoNtuple::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_748_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimRecoNtuple::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_748_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoNtuple*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_748_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRecoNtuple::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_748_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRecoNtuple::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_748_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRecoNtuple::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_748_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRecoNtuple::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimAnalysisRootDict_748_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimRecoNtuple* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimRecoNtuple(*(WCSimRecoNtuple*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoNtuple));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimRecoNtuple G__TWCSimRecoNtuple;
static int G__WCSimAnalysisRootDict_748_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimRecoNtuple*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimRecoNtuple*) (soff+(sizeof(WCSimRecoNtuple)*i)))->~G__TWCSimRecoNtuple();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimRecoNtuple*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimRecoNtuple*) (soff))->~G__TWCSimRecoNtuple();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimAnalysisRootDict_748_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRecoNtuple* dest = (WCSimRecoNtuple*) G__getstructoffset();
   *dest = *(WCSimRecoNtuple*) libp->para[0].ref;
   const WCSimRecoNtuple& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimVertexNtuple */
static int G__WCSimAnalysisRootDict_749_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimVertexNtuple* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimVertexNtuple[n];
     } else {
       p = new((void*) gvp) WCSimVertexNtuple[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimVertexNtuple;
     } else {
       p = new((void*) gvp) WCSimVertexNtuple;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexNtuple));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_749_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimVertexNtuple::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_749_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimVertexNtuple::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_749_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimVertexNtuple::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_749_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimVertexNtuple::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_749_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexNtuple*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_749_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimVertexNtuple::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_749_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimVertexNtuple::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_749_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimVertexNtuple::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_749_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimVertexNtuple::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimAnalysisRootDict_749_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimVertexNtuple* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimVertexNtuple(*(WCSimVertexNtuple*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexNtuple));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimVertexNtuple G__TWCSimVertexNtuple;
static int G__WCSimAnalysisRootDict_749_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimVertexNtuple*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimVertexNtuple*) (soff+(sizeof(WCSimVertexNtuple)*i)))->~G__TWCSimVertexNtuple();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimVertexNtuple*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimVertexNtuple*) (soff))->~G__TWCSimVertexNtuple();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimAnalysisRootDict_749_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimVertexNtuple* dest = (WCSimVertexNtuple*) G__getstructoffset();
   *dest = *(WCSimVertexNtuple*) libp->para[0].ref;
   const WCSimVertexNtuple& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimVertexSeedNtuple */
static int G__WCSimAnalysisRootDict_750_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimVertexSeedNtuple* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimVertexSeedNtuple[n];
     } else {
       p = new((void*) gvp) WCSimVertexSeedNtuple[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimVertexSeedNtuple;
     } else {
       p = new((void*) gvp) WCSimVertexSeedNtuple;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexSeedNtuple));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_750_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimVertexSeedNtuple::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_750_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimVertexSeedNtuple::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_750_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimVertexSeedNtuple::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_750_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimVertexSeedNtuple::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_750_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimVertexSeedNtuple*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_750_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimVertexSeedNtuple::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_750_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimVertexSeedNtuple::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_750_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimVertexSeedNtuple::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_750_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimVertexSeedNtuple::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimAnalysisRootDict_750_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimVertexSeedNtuple* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimVertexSeedNtuple(*(WCSimVertexSeedNtuple*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexSeedNtuple));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimVertexSeedNtuple G__TWCSimVertexSeedNtuple;
static int G__WCSimAnalysisRootDict_750_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimVertexSeedNtuple*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimVertexSeedNtuple*) (soff+(sizeof(WCSimVertexSeedNtuple)*i)))->~G__TWCSimVertexSeedNtuple();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimVertexSeedNtuple*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimVertexSeedNtuple*) (soff))->~G__TWCSimVertexSeedNtuple();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimAnalysisRootDict_750_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimVertexSeedNtuple* dest = (WCSimVertexSeedNtuple*) G__getstructoffset();
   *dest = *(WCSimVertexSeedNtuple*) libp->para[0].ref;
   const WCSimVertexSeedNtuple& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimNtupleWriter */
static int G__WCSimAnalysisRootDict_751_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimNtupleWriter* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimNtupleWriter[n];
     } else {
       p = new((void*) gvp) WCSimNtupleWriter[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimNtupleWriter;
     } else {
       p = new((void*) gvp) WCSimNtupleWriter;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimNtupleWriter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_751_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimNtupleWriter*) G__getstructoffset())->Initialize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_751_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimNtupleWriter*) G__getstructoffset())->UseNtuple((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_751_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimNtupleWriter*) G__getstructoffset())->SetFileName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_751_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((WCSimNtupleWriter*) G__getstructoffset())->Run((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((WCSimNtupleWriter*) G__getstructoffset())->Run();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_751_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimNtupleWriter*) G__getstructoffset())->Run((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_751_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimNtupleWriter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_751_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimNtupleWriter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_751_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimNtupleWriter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_751_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimNtupleWriter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_751_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimNtupleWriter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_751_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimNtupleWriter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_751_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimNtupleWriter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_751_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimNtupleWriter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_751_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimNtupleWriter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimAnalysisRootDict_751_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimNtupleWriter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimNtupleWriter(*(WCSimNtupleWriter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimNtupleWriter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimNtupleWriter G__TWCSimNtupleWriter;
static int G__WCSimAnalysisRootDict_751_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimNtupleWriter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimNtupleWriter*) (soff+(sizeof(WCSimNtupleWriter)*i)))->~G__TWCSimNtupleWriter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimNtupleWriter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimNtupleWriter*) (soff))->~G__TWCSimNtupleWriter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimAnalysisRootDict_751_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimNtupleWriter* dest = (WCSimNtupleWriter*) G__getstructoffset();
   *dest = *(WCSimNtupleWriter*) libp->para[0].ref;
   const WCSimNtupleWriter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimMsg */
static int G__WCSimAnalysisRootDict_752_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimMsg::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_752_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimMsg::SetLevel((WCSimMsg::MsgLevel_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_752_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimMsg*) G__getstructoffset())->SetMsgLevel((WCSimMsg::MsgLevel_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_752_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WCSimMsg*) G__getstructoffset())->CheckMsgLevel((WCSimMsg::MsgLevel_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_752_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimMsg::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_752_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimMsg::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_752_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimMsg::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_752_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimMsg::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_752_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimMsg*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_752_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimMsg::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_752_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimMsg::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_752_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimMsg::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimAnalysisRootDict_752_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimMsg::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimAnalysisRootDict_752_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimMsg* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimMsg(*(WCSimMsg*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimMsg));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimAnalysisRootDict_752_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimMsg* dest = (WCSimMsg*) G__getstructoffset();
   *dest = *(WCSimMsg*) libp->para[0].ref;
   const WCSimMsg& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* WCSimRecoDigit */

/* WCSimLikelihoodDigit */

/* WCSimLikelihoodDigitArray */

/* WCSimLikelihoodTrack */

/* WCSimRecoVertex */

/* WCSimRecoRing */

/* WCSimRecoEvent */

/* WCSimTimeLikelihood */

/* WCSimLikelihoodFitter */

/* WCSimLikelihoodTuner */

/* WCSimChargeLikelihood */

/* WCSimDisplay */

/* WCSimReco */

/* WCSimTrueEvent */

/* WCSimDisplayViewer */

/* WCSimDisplayFactory */

/* WCSimTrueTrack */

/* WCSimDisplayAB */

/* WCSimEveDisplay */

/* WCSimEventWriter */

/* WCSimGeometry */

/* WCSimInterface */

/* WCSimParameters */

/* WCSimRecoObjectTable */

/* WCSimRecoFactory */

/* WCSimRecoAB */

/* WCSimRecoCluster */

/* WCSimRecoClusterDigit */

/* WCSimHoughTransform */

/* WCSimHoughTransformArray */

/* WCSimDataCleaner */

/* WCSimVertexFinder */

/* WCSimVertexGeometry */

/* WCSimVertexViewer */

/* WCSimRingFinder */

/* WCSimRingViewer */

/* WCSimNtuple */

/* WCSimNtupleFactory */

/* WCSimRecoNtuple */

/* WCSimVertexNtuple */

/* WCSimVertexSeedNtuple */

/* WCSimNtupleWriter */

/* WCSimMsg */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncWCSimAnalysisRootDict {
 public:
  G__Sizep2memfuncWCSimAnalysisRootDict(): p(&G__Sizep2memfuncWCSimAnalysisRootDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncWCSimAnalysisRootDict::*p)();
};

size_t G__get_sizep2memfuncWCSimAnalysisRootDict()
{
  G__Sizep2memfuncWCSimAnalysisRootDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceWCSimAnalysisRootDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoDigit))) {
     WCSimRecoDigit *G__Lderived;
     G__Lderived=(WCSimRecoDigit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoDigit),G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodDigit))) {
     WCSimLikelihoodDigit *G__Lderived;
     G__Lderived=(WCSimLikelihoodDigit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodDigit),G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodDigitArray))) {
     WCSimLikelihoodDigitArray *G__Lderived;
     G__Lderived=(WCSimLikelihoodDigitArray*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodDigitArray),G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodTrack))) {
     WCSimLikelihoodTrack *G__Lderived;
     G__Lderived=(WCSimLikelihoodTrack*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodTrack),G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex))) {
     WCSimRecoVertex *G__Lderived;
     G__Lderived=(WCSimRecoVertex*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex),G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoRing))) {
     WCSimRecoRing *G__Lderived;
     G__Lderived=(WCSimRecoRing*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoRing),G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoEvent))) {
     WCSimRecoEvent *G__Lderived;
     G__Lderived=(WCSimRecoEvent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoEvent),G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDisplay))) {
     WCSimDisplay *G__Lderived;
     G__Lderived=(WCSimDisplay*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDisplay),G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimReco))) {
     WCSimReco *G__Lderived;
     G__Lderived=(WCSimReco*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimReco),G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimTrueEvent))) {
     WCSimTrueEvent *G__Lderived;
     G__Lderived=(WCSimTrueEvent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimTrueEvent),G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDisplayViewer))) {
     WCSimDisplayViewer *G__Lderived;
     G__Lderived=(WCSimDisplayViewer*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDisplayViewer),G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDisplayFactory))) {
     WCSimDisplayFactory *G__Lderived;
     G__Lderived=(WCSimDisplayFactory*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDisplayFactory),G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimTrueTrack))) {
     WCSimTrueTrack *G__Lderived;
     G__Lderived=(WCSimTrueTrack*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimTrueTrack),G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDisplayAB))) {
     WCSimDisplayAB *G__Lderived;
     G__Lderived=(WCSimDisplayAB*)0x1000;
     {
       WCSimDisplay *G__Lpbase=(WCSimDisplay*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDisplayAB),G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDisplay),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDisplayAB),G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimEveDisplay))) {
     WCSimEveDisplay *G__Lderived;
     G__Lderived=(WCSimEveDisplay*)0x1000;
     {
       WCSimDisplay *G__Lpbase=(WCSimDisplay*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimEveDisplay),G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDisplay),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimEveDisplay),G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimEventWriter))) {
     WCSimEventWriter *G__Lderived;
     G__Lderived=(WCSimEventWriter*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimEventWriter),G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimGeometry))) {
     WCSimGeometry *G__Lderived;
     G__Lderived=(WCSimGeometry*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimGeometry),G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimInterface))) {
     WCSimInterface *G__Lderived;
     G__Lderived=(WCSimInterface*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimInterface),G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimParameters))) {
     WCSimParameters *G__Lderived;
     G__Lderived=(WCSimParameters*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimParameters),G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoObjectTable))) {
     WCSimRecoObjectTable *G__Lderived;
     G__Lderived=(WCSimRecoObjectTable*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoObjectTable),G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoFactory))) {
     WCSimRecoFactory *G__Lderived;
     G__Lderived=(WCSimRecoFactory*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoFactory),G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoAB))) {
     WCSimRecoAB *G__Lderived;
     G__Lderived=(WCSimRecoAB*)0x1000;
     {
       WCSimReco *G__Lpbase=(WCSimReco*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoAB),G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimReco),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoAB),G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoCluster))) {
     WCSimRecoCluster *G__Lderived;
     G__Lderived=(WCSimRecoCluster*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoCluster),G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoClusterDigit))) {
     WCSimRecoClusterDigit *G__Lderived;
     G__Lderived=(WCSimRecoClusterDigit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoClusterDigit),G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimHoughTransform))) {
     WCSimHoughTransform *G__Lderived;
     G__Lderived=(WCSimHoughTransform*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimHoughTransform),G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimHoughTransformArray))) {
     WCSimHoughTransformArray *G__Lderived;
     G__Lderived=(WCSimHoughTransformArray*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimHoughTransformArray),G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDataCleaner))) {
     WCSimDataCleaner *G__Lderived;
     G__Lderived=(WCSimDataCleaner*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDataCleaner),G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexFinder))) {
     WCSimVertexFinder *G__Lderived;
     G__Lderived=(WCSimVertexFinder*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexFinder),G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexGeometry))) {
     WCSimVertexGeometry *G__Lderived;
     G__Lderived=(WCSimVertexGeometry*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexGeometry),G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexViewer))) {
     WCSimVertexViewer *G__Lderived;
     G__Lderived=(WCSimVertexViewer*)0x1000;
     {
       WCSimDisplay *G__Lpbase=(WCSimDisplay*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexViewer),G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDisplay),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexViewer),G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRingFinder))) {
     WCSimRingFinder *G__Lderived;
     G__Lderived=(WCSimRingFinder*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRingFinder),G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRingViewer))) {
     WCSimRingViewer *G__Lderived;
     G__Lderived=(WCSimRingViewer*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRingViewer),G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimNtuple))) {
     WCSimNtuple *G__Lderived;
     G__Lderived=(WCSimNtuple*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimNtuple),G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimNtupleFactory))) {
     WCSimNtupleFactory *G__Lderived;
     G__Lderived=(WCSimNtupleFactory*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimNtupleFactory),G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoNtuple))) {
     WCSimRecoNtuple *G__Lderived;
     G__Lderived=(WCSimRecoNtuple*)0x1000;
     {
       WCSimNtuple *G__Lpbase=(WCSimNtuple*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoNtuple),G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimNtuple),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoNtuple),G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexNtuple))) {
     WCSimVertexNtuple *G__Lderived;
     G__Lderived=(WCSimVertexNtuple*)0x1000;
     {
       WCSimNtuple *G__Lpbase=(WCSimNtuple*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexNtuple),G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimNtuple),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexNtuple),G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexSeedNtuple))) {
     WCSimVertexSeedNtuple *G__Lderived;
     G__Lderived=(WCSimVertexSeedNtuple*)0x1000;
     {
       WCSimNtuple *G__Lpbase=(WCSimNtuple*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexSeedNtuple),G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimNtuple),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexSeedNtuple),G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimNtupleWriter))) {
     WCSimNtupleWriter *G__Lderived;
     G__Lderived=(WCSimNtupleWriter*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimNtupleWriter),G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimMsg))) {
     WCSimMsg *G__Lderived;
     G__Lderived=(WCSimMsg*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimMsg),G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableWCSimAnalysisRootDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Float_t>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<WCSimRecoDigit*>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoDigitmUcOallocatorlEWCSimRecoDigitmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEWCSimRecoDigitmUcOallocatorlEWCSimRecoDigitmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoDigitmUcOallocatorlEWCSimRecoDigitmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEWCSimRecoDigitmUcOallocatorlEWCSimRecoDigitmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoDigitmUcOallocatorlEWCSimRecoDigitmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<WCSimRecoRing*>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoRingmUcOallocatorlEWCSimRecoRingmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEWCSimRecoRingmUcOallocatorlEWCSimRecoRingmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoRingmUcOallocatorlEWCSimRecoRingmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEWCSimRecoRingmUcOallocatorlEWCSimRecoRingmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoRingmUcOallocatorlEWCSimRecoRingmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Double_t>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<const char*>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<WCSimDisplay*>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimDisplaymUcOallocatorlEWCSimDisplaymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEWCSimDisplaymUcOallocatorlEWCSimDisplaymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimDisplaymUcOallocatorlEWCSimDisplaymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEWCSimDisplaymUcOallocatorlEWCSimDisplaymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimDisplaymUcOallocatorlEWCSimDisplaymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<WCSimTrueTrack*>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimTrueTrackmUcOallocatorlEWCSimTrueTrackmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEWCSimTrueTrackmUcOallocatorlEWCSimTrueTrackmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimTrueTrackmUcOallocatorlEWCSimTrueTrackmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEWCSimTrueTrackmUcOallocatorlEWCSimTrueTrackmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimTrueTrackmUcOallocatorlEWCSimTrueTrackmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TMarker*>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlETMarkermUcOallocatorlETMarkermUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlETMarkermUcOallocatorlETMarkermUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlETMarkermUcOallocatorlETMarkermUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlETMarkermUcOallocatorlETMarkermUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlETMarkermUcOallocatorlETMarkermUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TPolyMarker*>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlETPolyMarkermUcOallocatorlETPolyMarkermUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlETPolyMarkermUcOallocatorlETPolyMarkermUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlETPolyMarkermUcOallocatorlETPolyMarkermUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlETPolyMarkermUcOallocatorlETPolyMarkermUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlETPolyMarkermUcOallocatorlETPolyMarkermUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TLine*>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlETLinemUcOallocatorlETLinemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlETLinemUcOallocatorlETLinemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlETLinemUcOallocatorlETLinemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlETLinemUcOallocatorlETLinemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlETLinemUcOallocatorlETLinemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("GeoConfiguration_t",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimGeometrycLcLEGeoConfiguration),0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimGeometry));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("GeoType_t",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimGeometrycLcLEGeoType),0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimGeometry));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("GeoRegion_t",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimGeometrycLcLEGeoRegion),0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimGeometry));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("FitStatus_t",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertexcLcLEFitStatus),0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<WCSimRecoClusterDigit*>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoClusterDigitmUcOallocatorlEWCSimRecoClusterDigitmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEWCSimRecoClusterDigitmUcOallocatorlEWCSimRecoClusterDigitmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoClusterDigitmUcOallocatorlEWCSimRecoClusterDigitmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEWCSimRecoClusterDigitmUcOallocatorlEWCSimRecoClusterDigitmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoClusterDigitmUcOallocatorlEWCSimRecoClusterDigitmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<Float_t> >",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<float,allocator<float> > >",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<WCSimHoughTransform*>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimHoughTransformmUcOallocatorlEWCSimHoughTransformmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEWCSimHoughTransformmUcOallocatorlEWCSimHoughTransformmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimHoughTransformmUcOallocatorlEWCSimHoughTransformmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEWCSimHoughTransformmUcOallocatorlEWCSimHoughTransformmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimHoughTransformmUcOallocatorlEWCSimHoughTransformmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("FilterConfig_t",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDataCleanercLcLEFilterConfig),0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDataCleaner));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<WCSimRecoCluster*>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoClustermUcOallocatorlEWCSimRecoClustermUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEWCSimRecoClustermUcOallocatorlEWCSimRecoClustermUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoClustermUcOallocatorlEWCSimRecoClustermUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEWCSimRecoClustermUcOallocatorlEWCSimRecoClustermUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoClustermUcOallocatorlEWCSimRecoClustermUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<WCSimRecoVertex*>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoVertexmUcOallocatorlEWCSimRecoVertexmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEWCSimRecoVertexmUcOallocatorlEWCSimRecoVertexmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoVertexmUcOallocatorlEWCSimRecoVertexmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEWCSimRecoVertexmUcOallocatorlEWCSimRecoVertexmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoVertexmUcOallocatorlEWCSimRecoVertexmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("MsgLevel_t",117,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimMsgcLcLEMsgLevel),0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimMsg));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* WCSimRecoDigit */
static void G__setup_memvarWCSimRecoDigit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoDigit));
   { WCSimRecoDigit *p; p=(WCSimRecoDigit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRegion=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRawTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRawQPEs=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCalTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCalQPEs=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsFiltered=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimLikelihoodDigit */
static void G__setup_memvarWCSimLikelihoodDigit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodDigit));
   { WCSimLikelihoodDigit *p; p=(WCSimLikelihoodDigit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTubeId=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fT=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPos[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fFace[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimLikelihoodDigitArray */
static void G__setup_memvarWCSimLikelihoodDigitArray(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodDigitArray));
   { WCSimLikelihoodDigitArray *p; p=(WCSimLikelihoodDigitArray*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClonesArray),-1,-1,4,"fLikelihoodDigitArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNLikelihoodDigits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimLikelihoodTrack */
static void G__setup_memvarWCSimLikelihoodTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodTrack));
   { WCSimLikelihoodTrack *p; p=(WCSimLikelihoodTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodTrackcLcLTrackType),-1,-2,1,G__FastAllocString(2048).Format("Unknown=%lldLL",(long long)WCSimLikelihoodTrack::Unknown).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodTrackcLcLTrackType),-1,-2,1,G__FastAllocString(2048).Format("ElectronLike=%lldLL",(long long)WCSimLikelihoodTrack::ElectronLike).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodTrackcLcLTrackType),-1,-2,1,G__FastAllocString(2048).Format("MuonLike=%lldLL",(long long)WCSimLikelihoodTrack::MuonLike).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fVtx[3]=",0,"vertex position");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fT0=",0,"vertex time");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fTheta0=",0,"polar angle to z axis");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fPhi0=",0,"azimuthal angle to z axis");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fE0=",0,"kinetic energy");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodTrackcLcLTrackType),-1,-1,4,"fType=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimRecoVertex */
static void G__setup_memvarWCSimRecoVertex(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex));
   { WCSimRecoVertex *p; p=(WCSimRecoVertex*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertexcLcLEFitStatus),-1,-2,1,G__FastAllocString(2048).Format("kOK=%lldLL",(long long)WCSimRecoVertex::kOK).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertexcLcLEFitStatus),-1,-2,1,G__FastAllocString(2048).Format("kFailSimpleVertex=%lldLL",(long long)WCSimRecoVertex::kFailSimpleVertex).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertexcLcLEFitStatus),-1,-2,1,G__FastAllocString(2048).Format("kFailSimpleDirection=%lldLL",(long long)WCSimRecoVertex::kFailSimpleDirection).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertexcLcLEFitStatus),-1,-2,1,G__FastAllocString(2048).Format("kFailPointPosition=%lldLL",(long long)WCSimRecoVertex::kFailPointPosition).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertexcLcLEFitStatus),-1,-2,1,G__FastAllocString(2048).Format("kFailPointDirection=%lldLL",(long long)WCSimRecoVertex::kFailPointDirection).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertexcLcLEFitStatus),-1,-2,1,G__FastAllocString(2048).Format("kFailPointVertex=%lldLL",(long long)WCSimRecoVertex::kFailPointVertex).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertexcLcLEFitStatus),-1,-2,1,G__FastAllocString(2048).Format("kFailExtendedVertex=%lldLL",(long long)WCSimRecoVertex::kFailExtendedVertex).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fFoundVertex=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDirX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDirY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDirZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fFoundDirection=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fConeAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrackLength=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fFOM=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fIterations=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fPass=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fStatus=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimRecoRing */
static void G__setup_memvarWCSimRecoRing(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoRing));
   { WCSimRecoRing *p; p=(WCSimRecoRing*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fVtxX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fVtxY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fVtxZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDirX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDirY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDirZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fHeight=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimRecoEvent */
static void G__setup_memvarWCSimRecoEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoEvent));
   { WCSimRecoEvent *p; p=(WCSimRecoEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRunNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fEventNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTriggerNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoDigitmUcOallocatorlEWCSimRecoDigitmUgRsPgR),G__defined_typename("vector<WCSimRecoDigit*>"),-1,4,"fDigitList=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoDigitmUcOallocatorlEWCSimRecoDigitmUgRsPgR),G__defined_typename("vector<WCSimRecoDigit*>"),-1,4,"fFilterDigitList=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoRingmUcOallocatorlEWCSimRecoRingmUgRsPgR),G__defined_typename("vector<WCSimRecoRing*>"),-1,4,"fRingList=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex),-1,-1,4,"fVertex=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsFilterDone=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsVertexFinderDone=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsRingFinderDone=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimTimeLikelihood */
static void G__setup_memvarWCSimTimeLikelihood(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimTimeLikelihood));
   { WCSimTimeLikelihood *p; p=(WCSimTimeLikelihood*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodTrack),-1,-1,4,"fTrack=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodDigitArray),-1,-1,4,"fDigitArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fGotTrackParameters=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimLikelihoodFitter */
static void G__setup_memvarWCSimLikelihoodFitter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodFitter));
   { WCSimLikelihoodFitter *p; p=(WCSimLikelihoodFitter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRootEvent),-1,-1,4,"fRootEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodTrack),-1,-1,4,"fTrack=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoDigitmUcOallocatorlEWCSimRecoDigitmUgRsPgR),G__defined_typename("vector<WCSimRecoDigit*>"),-1,4,"fRecoDigitList=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodDigitArray),-1,-1,4,"fLikelihoodDigitArray=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimLikelihoodTuner */
static void G__setup_memvarWCSimLikelihoodTuner(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodTuner));
   { WCSimLikelihoodTuner *p; p=(WCSimLikelihoodTuner*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDirCoeffs[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fIndCoeffs[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TString),-1,-1,4,"fProfileLocation=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TFile),-1,-1,4,"fProfiles=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodTrackcLcLTrackType),-1,-1,4,"fIsOpen=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TObjArray),-1,-1,4,"fHistArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TObjArray),-1,-1,4,"fAngHistArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TObjArray),-1,-1,4,"fFluxArray=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimChargeLikelihood */
static void G__setup_memvarWCSimChargeLikelihood(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimChargeLikelihood));
   { WCSimChargeLikelihood *p; p=(WCSimChargeLikelihood*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"fCoeffsCh=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"fCoeffsInd=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEnergy=",0,"particle energy");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fR0=",0,"vertex to PMT distance");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCosTheta0=",0,"angle to PMT as viewed from vertex");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEta=",0,"angle of incidence of emitted light at the PMT");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEnergyInterval=",0,"steps to increment variables by");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fR0Interval=",0,"from one bin of the lookup table");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCosTheta0Interval=",0,"to the next");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fChIntegral[100][1000][100]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fIndIntegral[100]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRadius=",0,"Distance from centre of tank to the source");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fAngle=",0,"Angle between source, centre of tank, and PMT");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTheta=",0,"Angle between source direction and ray to PMT (same as theta0)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPhi=",0,"Angle between plane containing tank centre, PMT and source, and plane");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodTrack),-1,-1,4,"fTrack=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodDigitArray),-1,-1,4,"fDigitArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodDigit),-1,-1,4,"fDigit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodTuner),-1,-1,4,"fTuner=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fGotTrackParameters=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fCalculateIntegrals=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimDisplay */
static void G__setup_memvarWCSimDisplay(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDisplay));
   { WCSimDisplay *p; p=(WCSimDisplay*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPulseHeightCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fPrintGIF=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fPrintEPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimReco */
static void G__setup_memvarWCSimReco(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimReco));
   { WCSimReco *p; p=(WCSimReco*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimTrueEvent */
static void G__setup_memvarWCSimTrueEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimTrueEvent));
   { WCSimTrueEvent *p; p=(WCSimTrueEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fIpdg=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrkP=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrkE=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fG4VtxX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fG4VtxY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fG4VtxZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fG4EndX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fG4EndY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fG4EndZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fVtxX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fVtxY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fVtxZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEndX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEndY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEndZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDirX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDirY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDirZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fLength=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimTrueTrackmUcOallocatorlEWCSimTrueTrackmUgRsPgR),G__defined_typename("vector<WCSimTrueTrack*>"),-1,4,"fTrackList=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimDisplayViewer */
static void G__setup_memvarWCSimDisplayViewer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDisplayViewer));
   { WCSimDisplayViewer *p; p=(WCSimDisplayViewer*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TStyle),-1,-1,4,"fRootStyle=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TCanvas),-1,-1,4,"fControlCanvas=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TButton),-1,-1,4,"buttonStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TButton),-1,-1,4,"buttonNext=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TButton),-1,-1,4,"buttonPrevious=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TButton),-1,-1,4,"buttonGoTo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TButton),-1,-1,4,"buttonPrint=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TButton),-1,-1,4,"buttonQuit=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCounter=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimReco),-1,-1,4,"fReco=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoEvent),-1,-1,4,"fRecoEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimTrueEvent),-1,-1,4,"fTrueEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRunNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fEventNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTriggerNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fDisplayRecoClusters=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fDisplayRecoEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fDisplayTrueEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPulseHeightCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fPrintGIF=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fPrintEPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fDisplayReady=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgR),G__defined_typename("vector<const char*>"),-1,4,"fDisplayNameList=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimDisplaymUcOallocatorlEWCSimDisplaymUgRsPgR),G__defined_typename("vector<WCSimDisplay*>"),-1,4,"fDisplayList=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimDisplayFactory */
static void G__setup_memvarWCSimDisplayFactory(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDisplayFactory));
   { WCSimDisplayFactory *p; p=(WCSimDisplayFactory*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDisplay),-1,-1,4,"fDisplayAB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDisplay),-1,-1,4,"fDisplayEve=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDisplay),-1,-1,4,"fDisplayVtx=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimTrueTrack */
static void G__setup_memvarWCSimTrueTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimTrueTrack));
   { WCSimTrueTrack *p; p=(WCSimTrueTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fIpdg=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fIpdgParent=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrkP=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrkE=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fG4VtxX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fG4VtxY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fG4VtxZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fG4EndX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fG4EndY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fG4EndZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fVtxX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fVtxY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fVtxZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEndX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEndY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEndZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDirX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDirY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDirZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimDisplayAB */
static void G__setup_memvarWCSimDisplayAB(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDisplayAB));
   { WCSimDisplayAB *p; p=(WCSimDisplayAB*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fGeoType=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCylRadius=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCylLength=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCylDiagonal=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMailBoxX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMailBoxY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMailBoxZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMailBoxDiagonal=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fScale=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRunNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fEventNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTriggerNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TCanvas),-1,-1,4,"wcCanvas=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TH2D),-1,-1,4,"wcDisplay=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TLegend),-1,-1,4,"wcLegend=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fU=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fV=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"canvasWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"canvasHeight=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"canvasU=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"canvasV=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"binsWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"binsU=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"binsV=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TBox),-1,-1,4,"wcCylEdgeSide=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TEllipse),-1,-1,4,"wcCylEdgeTop=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TEllipse),-1,-1,4,"wcCylEdgeBottom=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TBox),-1,-1,4,"wcBoxEdgeSide=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TBox),-1,-1,4,"wcBoxEdgeTop=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TBox),-1,-1,4,"wcBoxEdgeBottom=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TLine),-1,-1,4,"wcBoxEdgeLine1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TLine),-1,-1,4,"wcBoxEdgeLine2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TLine),-1,-1,4,"wcBoxEdgeLine3=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TLine),-1,-1,4,"wcBoxEdgeLine4=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TString),-1,-1,4,"wcTitleString=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TLatex),-1,-1,4,"wcTitleLatex=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"titleU=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"titleV=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fMakeTimeDisplay=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TCanvas),-1,-1,4,"wcTimeCanvas=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TLegend),-1,-1,4,"wcTimeLegend=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TLegend),-1,-1,4,"wcRecoLegend=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlETMarkermUcOallocatorlETMarkermUgRsPgR),G__defined_typename("vector<TMarker*>"),-1,4,"wcDigits=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlETMarkermUcOallocatorlETMarkermUgRsPgR),G__defined_typename("vector<TMarker*>"),-1,4,"wcTimeDigits=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlETMarkermUcOallocatorlETMarkermUgRsPgR),G__defined_typename("vector<TMarker*>"),-1,4,"wcCommonDigits=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlETPolyMarkermUcOallocatorlETPolyMarkermUgRsPgR),G__defined_typename("vector<TPolyMarker*>"),-1,4,"wcRings=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlETMarkermUcOallocatorlETMarkermUgRsPgR),G__defined_typename("vector<TMarker*>"),-1,4,"legDigits=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlETLinemUcOallocatorlETLinemUgRsPgR),G__defined_typename("vector<TLine*>"),-1,4,"legRings=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimEveDisplay */
static void G__setup_memvarWCSimEveDisplay(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimEveDisplay));
   { WCSimEveDisplay *p; p=(WCSimEveDisplay*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimEventWriter */
static void G__setup_memvarWCSimEventWriter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimEventWriter));
   { WCSimEventWriter *p; p=(WCSimEventWriter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fScale=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPMTs=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPmtX=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPmtY=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPmtZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPmtRegion=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRun=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fEventNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fSubEventNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTube=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRegion=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fXpos=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fYpos=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZpos=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQPEs=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTrackNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPdg=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fFlag=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fM=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fP=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fE=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrkDirX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrkDirY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrkDirZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fVtxX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fVtxY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fVtxZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fVtxTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEndX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEndY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEndZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPdgParent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TFile),-1,-1,4,"fFileDigits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TTree),-1,-1,4,"fTreeDigits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TFile),-1,-1,4,"fFileTracks=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TTree),-1,-1,4,"fTreeTracks=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TFile),-1,-1,4,"fFileGeometry=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TTree),-1,-1,4,"fTreeGeometry=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fWriteOutGeometry=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fWriteOutTracks=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fWriteOutDigits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TChain),-1,-1,4,"fChain=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TChain),-1,-1,4,"fChainGeom=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRootEvent),-1,-1,4,"fEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRootGeom),-1,-1,4,"fGeometry=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimGeometry */
static void G__setup_memvarWCSimGeometry(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimGeometry));
   { WCSimGeometry *p; p=(WCSimGeometry*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimGeometrycLcLEGeoConfiguration),-1,-2,1,G__FastAllocString(2048).Format("kDUSEL_Unknown=%lldLL",(long long)WCSimGeometry::kDUSEL_Unknown).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimGeometrycLcLEGeoConfiguration),-1,-2,1,G__FastAllocString(2048).Format("kDUSEL_100kton_10inch_12percent=%lldLL",(long long)WCSimGeometry::kDUSEL_100kton_10inch_12percent).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimGeometrycLcLEGeoConfiguration),-1,-2,1,G__FastAllocString(2048).Format("kDUSEL_100kton_10inch_15percent=%lldLL",(long long)WCSimGeometry::kDUSEL_100kton_10inch_15percent).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimGeometrycLcLEGeoConfiguration),-1,-2,1,G__FastAllocString(2048).Format("kDUSEL_100kton_10inch_30percent=%lldLL",(long long)WCSimGeometry::kDUSEL_100kton_10inch_30percent).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimGeometrycLcLEGeoConfiguration),-1,-2,1,G__FastAllocString(2048).Format("kDUSEL_100kton_10inch_40percent=%lldLL",(long long)WCSimGeometry::kDUSEL_100kton_10inch_40percent).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimGeometrycLcLEGeoConfiguration),-1,-2,1,G__FastAllocString(2048).Format("kDUSEL_200kton_10inch_12percent=%lldLL",(long long)WCSimGeometry::kDUSEL_200kton_10inch_12percent).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimGeometrycLcLEGeoConfiguration),-1,-2,1,G__FastAllocString(2048).Format("kDUSEL_200kton_12inch_10percent=%lldLL",(long long)WCSimGeometry::kDUSEL_200kton_12inch_10percent).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimGeometrycLcLEGeoConfiguration),-1,-2,1,G__FastAllocString(2048).Format("kDUSEL_200kton_12inch_14percent=%lldLL",(long long)WCSimGeometry::kDUSEL_200kton_12inch_14percent).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimGeometrycLcLEGeoConfiguration),-1,-2,1,G__FastAllocString(2048).Format("kDUSEL_150ktonMailbox_10inch_15percent=%lldLL",(long long)WCSimGeometry::kDUSEL_150ktonMailbox_10inch_15percent).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimGeometrycLcLEGeoConfiguration),-1,-2,1,G__FastAllocString(2048).Format("kDUSEL_150ktonMailbox_10inch_30percent=%lldLL",(long long)WCSimGeometry::kDUSEL_150ktonMailbox_10inch_30percent).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimGeometrycLcLEGeoConfiguration),-1,-2,1,G__FastAllocString(2048).Format("kDUSEL_150ktonMailbox_10inch_40percent=%lldLL",(long long)WCSimGeometry::kDUSEL_150ktonMailbox_10inch_40percent).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimGeometrycLcLEGeoType),-1,-2,1,G__FastAllocString(2048).Format("kUnknown=%lldLL",(long long)WCSimGeometry::kUnknown).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimGeometrycLcLEGeoType),-1,-2,1,G__FastAllocString(2048).Format("kCylinder=%lldLL",(long long)WCSimGeometry::kCylinder).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimGeometrycLcLEGeoType),-1,-2,1,G__FastAllocString(2048).Format("kMailBox=%lldLL",(long long)WCSimGeometry::kMailBox).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimGeometrycLcLEGeoRegion),-1,-2,1,G__FastAllocString(2048).Format("kTop=%lldLL",(long long)WCSimGeometry::kTop).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimGeometrycLcLEGeoRegion),-1,-2,1,G__FastAllocString(2048).Format("kSide=%lldLL",(long long)WCSimGeometry::kSide).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimGeometrycLcLEGeoRegion),-1,-2,1,G__FastAllocString(2048).Format("kBottom=%lldLL",(long long)WCSimGeometry::kBottom).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimGeometrycLcLEGeoRegion),-1,-2,1,G__FastAllocString(2048).Format("kFront=%lldLL",(long long)WCSimGeometry::kFront).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimGeometrycLcLEGeoRegion),-1,-2,1,G__FastAllocString(2048).Format("kBack=%lldLL",(long long)WCSimGeometry::kBack).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimGeometrycLcLEGeoRegion),-1,-2,1,G__FastAllocString(2048).Format("kLeft=%lldLL",(long long)WCSimGeometry::kLeft).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimGeometrycLcLEGeoRegion),-1,-2,1,G__FastAllocString(2048).Format("kRight=%lldLL",(long long)WCSimGeometry::kRight).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fScale=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPMTs=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPmtX=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPmtY=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPmtZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPmtRegion=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPMTRadius=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPMTCoverage=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPMTSeparation=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPMTSurfaceArea=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fGeoType=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fGeoTypeInput=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fGeoConfig=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fCylinder=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCylRadius=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCylLength=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCylFiducialRadius=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCylFiducialLength=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fMailBox=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMailBoxX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMailBoxY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMailBoxZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMailBoxFiducialX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMailBoxFiducialY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMailBoxFiducialZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDetectorArea=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDetectorVolume=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDetectorFiducialVolume=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTube=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRegion=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fXpos=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fYpos=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZpos=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRootGeom),-1,-1,4,"fWCSimRootGeom=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimInterface */
static void G__setup_memvarWCSimInterface(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimInterface));
   { WCSimInterface *p; p=(WCSimInterface*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimTrueEvent),-1,-1,4,"fTrueEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoEvent),-1,-1,4,"fRecoEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoDigitmUcOallocatorlEWCSimRecoDigitmUgRsPgR),G__defined_typename("vector<WCSimRecoDigit*>"),-1,4,"fDigitList=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimTrueTrackmUcOallocatorlEWCSimTrueTrackmUgRsPgR),G__defined_typename("vector<WCSimTrueTrack*>"),-1,4,"fTrackList=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TChain),-1,-1,4,"fChain=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TChain),-1,-1,4,"fChainGeom=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRootTrigger),-1,-1,4,"fTrigger=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRootEvent),-1,-1,4,"fEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRootGeom),-1,-1,4,"fGeometry=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEnergyThreshold=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRangeThreshold=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimParameters */
static void G__setup_memvarWCSimParameters(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimParameters));
   { WCSimParameters *p; p=(WCSimParameters*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fUseSimpleTimeResolution=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fUseSimpleTimeSlew=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fUseSimpleRefractiveIndex=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimRecoObjectTable */
static void G__setup_memvarWCSimRecoObjectTable(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoObjectTable));
   { WCSimRecoObjectTable *p; p=(WCSimRecoObjectTable*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"numDigits=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"numClusters=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"numClusterDigits=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"numVertices=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"numRings=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"numEvents=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimRecoFactory */
static void G__setup_memvarWCSimRecoFactory(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoFactory));
   { WCSimRecoFactory *p; p=(WCSimRecoFactory*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimRecoAB */
static void G__setup_memvarWCSimRecoAB(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoAB));
   { WCSimRecoAB *p; p=(WCSimRecoAB*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimRecoCluster */
static void G__setup_memvarWCSimRecoCluster(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoCluster));
   { WCSimRecoCluster *p; p=(WCSimRecoCluster*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoDigitmUcOallocatorlEWCSimRecoDigitmUgRsPgR),G__defined_typename("vector<WCSimRecoDigit*>"),-1,4,"fDigitList=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimRecoClusterDigit */
static void G__setup_memvarWCSimRecoClusterDigit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoClusterDigit));
   { WCSimRecoClusterDigit *p; p=(WCSimRecoClusterDigit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsClustered=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsAllClustered=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoDigit),-1,-1,4,"fRecoDigit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoClusterDigitmUcOallocatorlEWCSimRecoClusterDigitmUgRsPgR),G__defined_typename("vector<WCSimRecoClusterDigit*>"),-1,4,"fClusterDigitList=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimHoughTransform */
static void G__setup_memvarWCSimHoughTransform(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimHoughTransform));
   { WCSimHoughTransform *p; p=(WCSimHoughTransform*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fEntries=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fIntegral=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fXbins=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fYbins=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fHoughArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimHoughTransformArray */
static void G__setup_memvarWCSimHoughTransformArray(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimHoughTransformArray));
   { WCSimHoughTransformArray *p; p=(WCSimHoughTransformArray*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fHoughX=",0,"# bins in Hough X axis");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fHoughY=",0,"# bins in Hough y axis");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fConeAngleBins=",0,"# bins in Hough cone angle");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fConeAngleMin=",0,"min cone angle");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fConeAngleMax=",0,"max cone angle");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimHoughTransformmUcOallocatorlEWCSimHoughTransformmUgRsPgR),G__defined_typename("vector<WCSimHoughTransform*>"),-1,4,"fHoughArray=",0,"vector of Hough transforms, stepping through cone angle");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimDataCleaner */
static void G__setup_memvarWCSimDataCleaner(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDataCleaner));
   { WCSimDataCleaner *p; p=(WCSimDataCleaner*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDataCleanercLcLEFilterConfig),-1,-2,1,G__FastAllocString(2048).Format("kPulseHeight=%lldLL",(long long)WCSimDataCleaner::kPulseHeight).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDataCleanercLcLEFilterConfig),-1,-2,1,G__FastAllocString(2048).Format("kPulseHeightAndNeighbours=%lldLL",(long long)WCSimDataCleaner::kPulseHeightAndNeighbours).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDataCleanercLcLEFilterConfig),-1,-2,1,G__FastAllocString(2048).Format("kPulseHeightAndClusters=%lldLL",(long long)WCSimDataCleaner::kPulseHeightAndClusters).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fConfig=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMinPulseHeight=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fNeighbourRadius=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMinNeighbourDigits=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fClusterRadius=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMinClusterDigits=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTimeWindow=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoClustermUcOallocatorlEWCSimRecoClustermUgRsPgR),G__defined_typename("vector<WCSimRecoCluster*>"),-1,4,"vClusterList=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoClusterDigitmUcOallocatorlEWCSimRecoClusterDigitmUgRsPgR),G__defined_typename("vector<WCSimRecoClusterDigit*>"),-1,4,"vClusterDigitList=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoClusterDigitmUcOallocatorlEWCSimRecoClusterDigitmUgRsPgR),G__defined_typename("vector<WCSimRecoClusterDigit*>"),-1,4,"vClusterDigitCollection=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoDigitmUcOallocatorlEWCSimRecoDigitmUgRsPgR),G__defined_typename("vector<WCSimRecoDigit*>"),-1,4,"fFilterAll=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoDigitmUcOallocatorlEWCSimRecoDigitmUgRsPgR),G__defined_typename("vector<WCSimRecoDigit*>"),-1,4,"fFilterByPulseHeight=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoDigitmUcOallocatorlEWCSimRecoDigitmUgRsPgR),G__defined_typename("vector<WCSimRecoDigit*>"),-1,4,"fFilterByNeighbours=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoDigitmUcOallocatorlEWCSimRecoDigitmUgRsPgR),G__defined_typename("vector<WCSimRecoDigit*>"),-1,4,"fFilterByClusters=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoClustermUcOallocatorlEWCSimRecoClustermUgRsPgR),G__defined_typename("vector<WCSimRecoCluster*>"),-1,4,"fClusterList=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimVertexFinder */
static void G__setup_memvarWCSimVertexFinder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexFinder));
   { WCSimVertexFinder *p; p=(WCSimVertexFinder*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fBaseFOM=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fPointFitOnly=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fUseTrueVertex=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fUseTruePosition=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fUseTrueDirection=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fSeedWithTrueVertex=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fSeedWithSimpleVertex=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fSeedWithQuadruples=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNumSeeds=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTimeFitWeight=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fConeFitWeight=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fFixVertexBias=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fVertexBias=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fInputVtxX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fInputVtxY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fInputVtxZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fInputVtxTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fInputDirX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fInputDirY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fInputDirZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fInputVtxFOM=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex),-1,-1,4,"fSimplePosition=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex),-1,-1,4,"fSimpleDirection=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex),-1,-1,4,"fPointPosition=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex),-1,-1,4,"fPointDirection=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex),-1,-1,4,"fPointVertex=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex),-1,-1,4,"fExtendedVertex=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TMinuit),-1,-1,4,"fMinuitPointPosition=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TMinuit),-1,-1,4,"fMinuitPointDirection=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TMinuit),-1,-1,4,"fMinuitPointVertex=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TMinuit),-1,-1,4,"fMinuitExtendedVertex=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TMinuit),-1,-1,4,"fMinuitTimeFit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TMinuit),-1,-1,4,"fMinuitConeFit=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fPass=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fItr=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTimeFitItr=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fConeFitItr=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPointPosItr=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPointDirItr=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPointVtxItr=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fExtendedVtxItr=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSconeA=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSconeB=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSmu=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSel=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIntegralsDone=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoVertexmUcOallocatorlEWCSimRecoVertexmUgRsPgR),G__defined_typename("vector<WCSimRecoVertex*>"),-1,4,"vVertexList=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fVtxX)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fVtxX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fVtxY)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fVtxY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fVtxZ)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fVtxZ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fVtxTime)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fVtxTime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fDirX)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fDirX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fDirY)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fDirY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fDirZ)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fDirZ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fVtxFOM)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fVtxFOM=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fFitTimeParams)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fFitTimeParams=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fFixTimeParam0)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fFixTimeParam0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fFitConeParams)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fFitConeParams=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fFixConeParam0)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fFixConeParam0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fFixConeParam1)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fFixConeParam1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fFixConeParam2)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fFixConeParam2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTimeParam0)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fTimeParam0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fConeParam0)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fConeParam0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fConeParam1)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fConeParam1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fConeParam2)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fConeParam2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimVertexGeometry */
static void G__setup_memvarWCSimVertexGeometry(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexGeometry));
   { WCSimVertexGeometry *p; p=(WCSimVertexGeometry*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRunNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fEventNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTriggerNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPMTs=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNDigits=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNFilterDigits=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fThisDigit=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fLastEntry=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCounter=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fVtxX1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fVtxY1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fVtxZ1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fVtxTime1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fVtxX2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fVtxY2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fVtxZ2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fVtxTime2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanQ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTotalQ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeanFilteredQ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTotalFilteredQ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMinTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMaxTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,71,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsFiltered=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDigitX=",0,"Digit X (cm)");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDigitY=",0,"Digit Y (cm)");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDigitZ=",0,"Digit Z (cm)");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDigitT=",0,"Digit T (ns)");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDigitQ=",0,"Digit Q (PEs)");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZenith=",0,"Zenith (degrees)");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fAzimuth=",0,"Azimuth (degrees)");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSolidAngle=",0,"SolidAngle = sin(angle)/sin(42)");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fConeAngle=",0,"Cone Angle (degrees)");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDistPoint=",0,"Distance from Vertex (S)");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDistTrack=",0,"Distance along Track (S1)");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDistPhoton=",0,"Distance along Photon (S2)");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDistScatter=",0,"Distance of Scattering ");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDeltaTime=",0,"DeltaT = T - VtxT");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDeltaSigma=",0,"SigmaT(Q)");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDeltaAngle=",0,"DeltaAngle  = ConeAngle - Angle");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDeltaPoint=",0,"DeltaPoint  = DistPoint/(fC/fN)");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDeltaTrack=",0,"DeltaTrack  = DistTrack/(fC)");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDeltaPhoton=",0,"DeltaPhoton = DistPhoton/(fC/fN)");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDeltaScatter=",0,"DeltaScatter = DeltaScatter/(fC/fN)");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPointPath=",0,"PointPath = fN*DistPoint");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fExtendedPath=",0,"ExtendedPath = DistTrack + fN*DistPhoton");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPointResidual=",0,"PointResidual = DeltaTime - PointPath");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fExtendedResidual=",0,"ExtendedResidual = DeltaTime - ExtendedPath");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDelta=",0,"Chosen Residual [Point/Extended/Null]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"vSeedVtxX=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"vSeedVtxY=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"vSeedVtxZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"vSeedVtxTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"vSeedDigitList=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoVertexmUcOallocatorlEWCSimRecoVertexmUgRsPgR),G__defined_typename("vector<WCSimRecoVertex*>"),-1,4,"vVertexList=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimVertexViewer */
static void G__setup_memvarWCSimVertexViewer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexViewer));
   { WCSimVertexViewer *p; p=(WCSimVertexViewer*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRbins=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fNewRmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fNewRmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fLbins=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fLmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fLmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fNewLmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fNewLmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTbins=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fNewTmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fNewTmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TString),-1,-1,4,"fTitleString=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TLatex),-1,-1,4,"fTitleLatex=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRunNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fEventNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTriggerNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TCanvas),-1,-1,4,"fVertexCanvas2D=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TH2D),-1,-1,4,"fVertexHistTimeFit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TMarker),-1,-1,4,"fVertexMarkerDigits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TMarker),-1,-1,4,"fVertexMarkerFilterDigits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TF1),-1,-1,4,"fVertexTimeFit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TLegend),-1,-1,4,"fVertexLegend2D=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TCanvas),-1,-1,4,"fVertexCanvas1D=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TH1D),-1,-1,4,"fVertexHistDigitsAll=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TH1D),-1,-1,4,"fVertexHistDigitsCone=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TH1D),-1,-1,4,"fVertexHistFilterDigitsCone=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TLegend),-1,-1,4,"fVertexLegend1D=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TCanvas),-1,-1,4,"fTimeCanvas=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TH1D),-1,-1,4,"fTimeHistDigitsAll=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TH1D),-1,-1,4,"fTimeHistDigitsCone=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TH1D),-1,-1,4,"fTimeHistFilterDigitsCone=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TLegend),-1,-1,4,"fTimeLegend=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TCanvas),-1,-1,4,"fTransCanvas=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TH1D),-1,-1,4,"fTransHistDigits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TH1D),-1,-1,4,"fTransHistFilterDigits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TLegend),-1,-1,4,"fTransLegend=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TCanvas),-1,-1,4,"fLongCanvas=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TH1D),-1,-1,4,"fLongHistDigits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TH1D),-1,-1,4,"fLongHistFilterDigits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TLegend),-1,-1,4,"fLongLegend=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlETMarkermUcOallocatorlETMarkermUgRsPgR),G__defined_typename("vector<TMarker*>"),-1,4,"wcVertexDigits=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlETMarkermUcOallocatorlETMarkermUgRsPgR),G__defined_typename("vector<TMarker*>"),-1,4,"wcVertexFilterDigits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimRingFinder */
static void G__setup_memvarWCSimRingFinder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRingFinder));
   { WCSimRingFinder *p; p=(WCSimRingFinder*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fUseVertex=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fUseTSpectrum2=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fHoughX=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fHoughY=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fHoughPoints=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fConeAngleBins=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fConeAngleMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fConeAngleMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimHoughTransform),-1,-1,4,"fHoughTransform=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimHoughTransformArray),-1,-1,4,"fHoughTransformArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoRingmUcOallocatorlEWCSimRecoRingmUgRsPgR),G__defined_typename("vector<WCSimRecoRing*>"),-1,4,"fRingList=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimRingViewer */
static void G__setup_memvarWCSimRingViewer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRingViewer));
   { WCSimRingViewer *p; p=(WCSimRingViewer*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TCanvas),-1,-1,4,"fCanvas=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimNtuple */
static void G__setup_memvarWCSimNtuple(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimNtuple));
   { WCSimNtuple *p; p=(WCSimNtuple*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TString),-1,-1,2,"fNtpFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimNtupleFactory */
static void G__setup_memvarWCSimNtupleFactory(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimNtupleFactory));
   { WCSimNtupleFactory *p; p=(WCSimNtupleFactory*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimNtuple),-1,-1,4,"fRecoNtuple=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimNtuple),-1,-1,4,"fVertexNtuple=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimNtuple),-1,-1,4,"fVertexSeedNtuple=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimRecoNtuple */
static void G__setup_memvarWCSimRecoNtuple(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoNtuple));
   { WCSimRecoNtuple *p; p=(WCSimRecoNtuple*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TFile),-1,-1,4,"fRecoFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TTree),-1,-1,4,"fRecoTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRunNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fEventNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTriggerNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTruePDG=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrueP=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrueE=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrueG4VtxX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrueG4VtxY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrueG4VtxZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrueG4EndX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrueG4EndY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrueG4EndZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrueVtxX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrueVtxY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrueVtxZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrueEndX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrueEndY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrueEndZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrueDirX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrueDirY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrueDirZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrueLength=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrueVtxTraceFwd=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrueVtxTraceBwd=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrueVtxDistToEdge=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrueEndDistToEdge=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTrueTrackPDG[1000]=",0,"Note that if you change these sizes");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTrueTrackParentPDG[1000]=",0,"you also have to change WCSimRecoNtuple::ResetVariables()");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrueTrackVtxX[1000]=",0,"to zero the right number of entries");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrueTrackVtxY[1000]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrueTrackVtxZ[1000]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrueTrackDirX[1000]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrueTrackDirY[1000]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrueTrackDirZ[1000]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNDigits=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNFilterDigits=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNRings=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fFoundVertex=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fFoundDirection=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fFoundRings=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRecoVtxX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRecoVtxY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRecoVtxZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRecoVtxTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRecoDirX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRecoDirY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRecoDirZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRecoConeAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRecoTrackLength=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRecoVtxFOM=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRecoVtxSteps=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRecoVtxPass=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRecoVtxStatus=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRecoVtxTraceFwd=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRecoVtxTraceBwd=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRecoVtxDistToEdge=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRecoRingVtxX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRecoRingVtxY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRecoRingVtxZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRecoRingDirX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRecoRingDirY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRecoRingDirZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRecoRingAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRecoRingHeight=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRecoRingHeightFrac=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRecoDelta=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRecoDeltaTrans=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRecoDeltaLong=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRecoDeltaAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRecoRingDeltaAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSimplePositionX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSimplePositionY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSimplePositionZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSimplePositionDelta=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSimplePositionDeltaTrans=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSimplePositionDeltaLong=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPointPositionX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPointPositionY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPointPositionZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPointPositionFOM=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPointPositionSteps=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPointPositionPass=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPointPositionDelta=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPointPositionDeltaTrans=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPointPositionDeltaLong=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSimpleDirectionX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSimpleDirectionY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSimpleDirectionZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSimpleDirectionDeltaAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPointDirectionX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPointDirectionY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPointDirectionZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPointDirectionFOM=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPointDirectionSteps=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPointDirectionPass=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPointDirectionDeltaAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPointVtxX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPointVtxY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPointVtxZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPointDirX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPointDirY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPointDirZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPointConeAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPointTrackLength=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPointVtxFOM=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPointVtxSteps=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPointVtxPass=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPointVtxDelta=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPointVtxDeltaTrans=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPointVtxDeltaLong=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPointVtxDeltaAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fExtendedVtxX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fExtendedVtxY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fExtendedVtxZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fExtendedDirX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fExtendedDirY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fExtendedDirZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fExtendedConeAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fExtendedTrackLength=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fExtendedVtxFOM=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fExtendedVtxSteps=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fExtendedVtxPass=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fExtendedVtxDelta=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fExtendedVtxDeltaTrans=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fExtendedVtxDeltaLong=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fExtendedVtxDeltaAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fExtendedVtxTimeParam0=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fExtendedVtxConeParam0=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fExtendedVtxConeParam1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fExtendedVtxConeParam2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimVertexNtuple */
static void G__setup_memvarWCSimVertexNtuple(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexNtuple));
   { WCSimVertexNtuple *p; p=(WCSimVertexNtuple*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TFile),-1,-1,4,"fRecoFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TTree),-1,-1,4,"fRecoTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TString),-1,-1,4,"fRecoFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRunNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fEventNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTriggerNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fVtxX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fVtxY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fVtxZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fVtxTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDirX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDirY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDirZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrueVtxX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrueVtxY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrueVtxZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrueDirX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrueDirY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrueDirZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrueLength=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"index=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"last=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fIsFiltered=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDigitX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDigitY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDigitZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDigitT=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDigitQ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fConeAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZenith=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fAzimuth=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSolidAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDistPoint=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDistTrack=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDistPhoton=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDistScatter=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDeltaTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDeltaSigma=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDeltaAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDeltaPoint=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDeltaTrack=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDeltaPhoton=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDeltaScatter=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPointPath=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fExtendedPath=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPointResidual=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fExtendedResidual=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fExtendedResidualCorrected=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimVertexSeedNtuple */
static void G__setup_memvarWCSimVertexSeedNtuple(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexSeedNtuple));
   { WCSimVertexSeedNtuple *p; p=(WCSimVertexSeedNtuple*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TFile),-1,-1,4,"fRecoFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TTree),-1,-1,4,"fRecoTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TString),-1,-1,4,"fRecoFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRunNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fEventNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTriggerNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"index=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"last=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrueVtxX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrueVtxY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrueVtxZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrueDirX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrueDirY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrueDirZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRecoVtxX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRecoVtxY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRecoVtxZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRecoVtxTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRecoDelta=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRecoDeltaTrans=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRecoDeltaLong=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimNtupleWriter */
static void G__setup_memvarWCSimNtupleWriter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimNtupleWriter));
   { WCSimNtupleWriter *p; p=(WCSimNtupleWriter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimReco),-1,-1,4,"fReco=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoEvent),-1,-1,4,"fRecoEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimTrueEvent),-1,-1,4,"fTrueEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimNtuple),-1,-1,4,"fNtuple=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TString),-1,-1,4,"fNtupleName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TString),-1,-1,4,"fNtpFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimMsg */
static void G__setup_memvarWCSimMsg(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimMsg));
   { WCSimMsg *p; p=(WCSimMsg*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimMsgcLcLEMsgLevel),-1,-2,1,G__FastAllocString(2048).Format("kVerbose=%lldLL",(long long)WCSimMsg::kVerbose).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimMsgcLcLEMsgLevel),-1,-2,1,G__FastAllocString(2048).Format("kDebug=%lldLL",(long long)WCSimMsg::kDebug).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimMsgcLcLEMsgLevel),-1,-2,1,G__FastAllocString(2048).Format("kNotice=%lldLL",(long long)WCSimMsg::kNotice).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimMsgcLcLEMsgLevel),-1,-2,1,G__FastAllocString(2048).Format("kSynopsis=%lldLL",(long long)WCSimMsg::kSynopsis).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimMsgcLcLEMsgLevel),G__defined_typename("MsgLevel_t"),-1,4,"fMinLevel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarWCSimAnalysisRootDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncWCSimRecoDigit(void) {
   /* WCSimRecoDigit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoDigit));
   G__memfunc_setup("WCSimRecoDigit",1341,G__WCSimAnalysisRootDict_162_0_1, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoDigit), -1, 0, 8, 1, 1, 0, 
"i - 'Int_t' 0 - region d - 'Double_t' 0 - x "
"d - 'Double_t' 0 - y d - 'Double_t' 0 - z "
"d - 'Double_t' 0 - rawT d - 'Double_t' 0 - rawQ "
"d - 'Double_t' 0 - calT d - 'Double_t' 0 - calQ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRegion",900,G__WCSimAnalysisRootDict_162_0_2, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetX",376,G__WCSimAnalysisRootDict_162_0_3, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetY",377,G__WCSimAnalysisRootDict_162_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZ",378,G__WCSimAnalysisRootDict_162_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRawTime",985,G__WCSimAnalysisRootDict_162_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRawQPEs",931,G__WCSimAnalysisRootDict_162_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__WCSimAnalysisRootDict_162_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQPEs",633,G__WCSimAnalysisRootDict_162_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsFiltered",1003,G__WCSimAnalysisRootDict_162_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFilter",914,G__WCSimAnalysisRootDict_162_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 '1' pass", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetFilter",1129,G__WCSimAnalysisRootDict_162_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PassFilter",1021,G__WCSimAnalysisRootDict_162_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimAnalysisRootDict_162_0_14, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimRecoDigit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimAnalysisRootDict_162_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRecoDigit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimAnalysisRootDict_162_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimRecoDigit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimAnalysisRootDict_162_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimRecoDigit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimAnalysisRootDict_162_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimAnalysisRootDict_162_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRecoDigit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimAnalysisRootDict_162_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRecoDigit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimAnalysisRootDict_162_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRecoDigit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimAnalysisRootDict_162_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRecoDigit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimRecoDigit", 1341, G__WCSimAnalysisRootDict_162_0_26, (int) ('i'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoDigit), -1, 0, 1, 1, 1, 0, "u 'WCSimRecoDigit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimRecoDigit", 1467, G__WCSimAnalysisRootDict_162_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimAnalysisRootDict_162_0_28, (int) ('u'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoDigit), -1, 1, 1, 1, 1, 0, "u 'WCSimRecoDigit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimLikelihoodDigit(void) {
   /* WCSimLikelihoodDigit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodDigit));
   G__memfunc_setup("WCSimLikelihoodDigit",1976,G__WCSimAnalysisRootDict_198_0_1, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodDigit), -1, 0, 9, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z d - 'Double_t' 0 - t "
"d - 'Double_t' 0 - Q i - 'Int_t' 0 - tubeId "
"d - 'Double_t' 0 - faceX d - 'Double_t' 0 - faceY "
"d - 'Double_t' 0 - faceZ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WCSimLikelihoodDigit",1976,G__WCSimAnalysisRootDict_198_0_2, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodDigit), -1, 0, 1, 1, 1, 0, "U 'WCSimRootCherenkovDigiHit' - 0 - myDigiHit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTubeId",861,G__WCSimAnalysisRootDict_198_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQ",369,G__WCSimAnalysisRootDict_198_0_4, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetT",372,G__WCSimAnalysisRootDict_198_0_5, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetX",376,G__WCSimAnalysisRootDict_198_0_6, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetY",377,G__WCSimAnalysisRootDict_198_0_7, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZ",378,G__WCSimAnalysisRootDict_198_0_8, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFaceX",743,G__WCSimAnalysisRootDict_198_0_9, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFaceY",744,G__WCSimAnalysisRootDict_198_0_10, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFaceZ",745,G__WCSimAnalysisRootDict_198_0_11, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimAnalysisRootDict_198_0_12, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimLikelihoodDigit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimAnalysisRootDict_198_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimLikelihoodDigit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimAnalysisRootDict_198_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimLikelihoodDigit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimAnalysisRootDict_198_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimLikelihoodDigit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimAnalysisRootDict_198_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimAnalysisRootDict_198_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimLikelihoodDigit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimAnalysisRootDict_198_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimLikelihoodDigit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimAnalysisRootDict_198_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimLikelihoodDigit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimAnalysisRootDict_198_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimLikelihoodDigit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimLikelihoodDigit", 1976, G__WCSimAnalysisRootDict_198_0_24, (int) ('i'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodDigit), -1, 0, 1, 1, 1, 0, "u 'WCSimLikelihoodDigit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimLikelihoodDigit", 2102, G__WCSimAnalysisRootDict_198_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimAnalysisRootDict_198_0_26, (int) ('u'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodDigit), -1, 1, 1, 1, 1, 0, "u 'WCSimLikelihoodDigit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimLikelihoodDigitArray(void) {
   /* WCSimLikelihoodDigitArray */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodDigitArray));
   G__memfunc_setup("WCSimLikelihoodDigitArray",2487,G__WCSimAnalysisRootDict_199_0_1, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodDigitArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WCSimLikelihoodDigitArray",2487,G__WCSimAnalysisRootDict_199_0_2, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodDigitArray), -1, 0, 1, 1, 1, 0, "U 'WCSimRootEvent' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDigit",785,G__WCSimAnalysisRootDict_199_0_3, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodDigit), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - digit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNDigits",978,G__WCSimAnalysisRootDict_199_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimAnalysisRootDict_199_0_5, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimLikelihoodDigitArray::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimAnalysisRootDict_199_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimLikelihoodDigitArray::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimAnalysisRootDict_199_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimLikelihoodDigitArray::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimAnalysisRootDict_199_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimLikelihoodDigitArray::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimAnalysisRootDict_199_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimAnalysisRootDict_199_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimLikelihoodDigitArray::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimAnalysisRootDict_199_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimLikelihoodDigitArray::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimAnalysisRootDict_199_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimLikelihoodDigitArray::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimAnalysisRootDict_199_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimLikelihoodDigitArray::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimLikelihoodDigitArray", 2487, G__WCSimAnalysisRootDict_199_0_17, (int) ('i'), 
G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodDigitArray), -1, 0, 1, 1, 1, 0, "u 'WCSimLikelihoodDigitArray' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimLikelihoodDigitArray", 2613, G__WCSimAnalysisRootDict_199_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimAnalysisRootDict_199_0_19, (int) ('u'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodDigitArray), -1, 1, 1, 1, 1, 0, "u 'WCSimLikelihoodDigitArray' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimLikelihoodTrack(void) {
   /* WCSimLikelihoodTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodTrack));
   G__memfunc_setup("TrackTypeToString",1745,G__WCSimAnalysisRootDict_237_0_1, 117, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_string), -1, 0, 1, 1, 1, 0, "i 'WCSimLikelihoodTrack::TrackType' - 0 - myType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WCSimLikelihoodTrack",1980,G__WCSimAnalysisRootDict_237_0_2, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WCSimLikelihoodTrack",1980,G__WCSimAnalysisRootDict_237_0_3, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodTrack), -1, 0, 8, 1, 1, 0, 
"d - - 0 - x d - - 0 - y "
"d - - 0 - z d - - 0 - t "
"d - - 0 - theta d - - 0 - phi "
"d - - 0 - E i 'WCSimLikelihoodTrack::TrackType' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetX",388,G__WCSimAnalysisRootDict_237_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetY",389,G__WCSimAnalysisRootDict_237_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZ",390,G__WCSimAnalysisRootDict_237_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetT",384,G__WCSimAnalysisRootDict_237_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTheta",802,G__WCSimAnalysisRootDict_237_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - th", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhi",589,G__WCSimAnalysisRootDict_237_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetE",369,G__WCSimAnalysisRootDict_237_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - E", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetType",718,G__WCSimAnalysisRootDict_237_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i 'WCSimLikelihoodTrack::TrackType' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetX",376,G__WCSimAnalysisRootDict_237_0_12, 100, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetY",377,G__WCSimAnalysisRootDict_237_0_13, 100, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZ",378,G__WCSimAnalysisRootDict_237_0_14, 100, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVtx",610,G__WCSimAnalysisRootDict_237_0_15, 117, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TVector3), -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetT",372,G__WCSimAnalysisRootDict_237_0_16, 100, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTheta",790,G__WCSimAnalysisRootDict_237_0_17, 100, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhi",577,G__WCSimAnalysisRootDict_237_0_18, 100, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDirX",663,G__WCSimAnalysisRootDict_237_0_19, 100, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDirY",664,G__WCSimAnalysisRootDict_237_0_20, 100, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDirZ",665,G__WCSimAnalysisRootDict_237_0_21, 100, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDir",575,G__WCSimAnalysisRootDict_237_0_22, 117, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TVector3), -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetE",357,G__WCSimAnalysisRootDict_237_0_23, 100, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetType",706,G__WCSimAnalysisRootDict_237_0_24, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodTrackcLcLTrackType), -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimAnalysisRootDict_237_0_25, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimLikelihoodTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimAnalysisRootDict_237_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimLikelihoodTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimAnalysisRootDict_237_0_27, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimLikelihoodTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimAnalysisRootDict_237_0_28, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimLikelihoodTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimAnalysisRootDict_237_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimAnalysisRootDict_237_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimLikelihoodTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimAnalysisRootDict_237_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimLikelihoodTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimAnalysisRootDict_237_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimLikelihoodTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimAnalysisRootDict_237_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimLikelihoodTrack::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimLikelihoodTrack", 1980, G__WCSimAnalysisRootDict_237_0_37, (int) ('i'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodTrack), -1, 0, 1, 1, 1, 0, "u 'WCSimLikelihoodTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimLikelihoodTrack", 2106, G__WCSimAnalysisRootDict_237_0_38, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimAnalysisRootDict_237_0_39, (int) ('u'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodTrack), -1, 1, 1, 1, 1, 0, "u 'WCSimLikelihoodTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimRecoVertex(void) {
   /* WCSimRecoVertex */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex));
   G__memfunc_setup("WCSimRecoVertex",1482,G__WCSimAnalysisRootDict_239_0_1, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WCSimRecoVertex",1482,G__WCSimAnalysisRootDict_239_0_2, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WCSimRecoVertex",1482,G__WCSimAnalysisRootDict_239_0_3, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 6, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z d - 'Double_t' 0 - px "
"d - 'Double_t' 0 - py d - 'Double_t' 0 - pz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WCSimRecoVertex",1482,G__WCSimAnalysisRootDict_239_0_4, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 11, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z d - 'Double_t' 0 - t "
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - fom "
"i - 'Int_t' 0 - nsteps g - 'Bool_t' 0 - pass "
"i - 'Int_t' 0 - status", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WCSimRecoVertex",1482,G__WCSimAnalysisRootDict_239_0_5, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 13, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z d - 'Double_t' 0 - t "
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - angle "
"d - 'Double_t' 0 - length d - 'Double_t' 0 - fom "
"i - 'Int_t' 0 - nsteps g - 'Bool_t' 0 - pass "
"i - 'Int_t' 0 - status", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVertex",938,G__WCSimAnalysisRootDict_239_0_6, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z d - 'Double_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVertex",938,G__WCSimAnalysisRootDict_239_0_7, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDirection",1229,G__WCSimAnalysisRootDict_239_0_8, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetConeAngle",1176,G__WCSimAnalysisRootDict_239_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - angle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrackLength",1411,G__WCSimAnalysisRootDict_239_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - length", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFOM",526,G__WCSimAnalysisRootDict_239_0_11, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - fom i - 'Int_t' 0 - nsteps "
"g - 'Bool_t' 0 - pass", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStatus",944,G__WCSimAnalysisRootDict_239_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - status", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetX",376,G__WCSimAnalysisRootDict_239_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetY",377,G__WCSimAnalysisRootDict_239_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZ",378,G__WCSimAnalysisRootDict_239_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__WCSimAnalysisRootDict_239_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FoundVertex",1146,G__WCSimAnalysisRootDict_239_0_17, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDirX",663,G__WCSimAnalysisRootDict_239_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDirY",664,G__WCSimAnalysisRootDict_239_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDirZ",665,G__WCSimAnalysisRootDict_239_0_20, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FoundDirection",1437,G__WCSimAnalysisRootDict_239_0_21, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetConeAngle",1164,G__WCSimAnalysisRootDict_239_0_22, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrackLength",1399,G__WCSimAnalysisRootDict_239_0_23, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFOM",514,G__WCSimAnalysisRootDict_239_0_24, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIterations",1346,G__WCSimAnalysisRootDict_239_0_25, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPass",695,G__WCSimAnalysisRootDict_239_0_26, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStatus",932,G__WCSimAnalysisRootDict_239_0_27, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__WCSimAnalysisRootDict_239_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimAnalysisRootDict_239_0_29, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimRecoVertex::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimAnalysisRootDict_239_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRecoVertex::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimAnalysisRootDict_239_0_31, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimRecoVertex::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimAnalysisRootDict_239_0_32, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimRecoVertex::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimAnalysisRootDict_239_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimAnalysisRootDict_239_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRecoVertex::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimAnalysisRootDict_239_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRecoVertex::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimAnalysisRootDict_239_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRecoVertex::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimAnalysisRootDict_239_0_40, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRecoVertex::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimRecoVertex", 1482, G__WCSimAnalysisRootDict_239_0_41, (int) ('i'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 1, 1, 1, 0, "u 'WCSimRecoVertex' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimRecoVertex", 1608, G__WCSimAnalysisRootDict_239_0_42, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimAnalysisRootDict_239_0_43, (int) ('u'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 1, 1, 1, 1, 0, "u 'WCSimRecoVertex' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimRecoRing(void) {
   /* WCSimRecoRing */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoRing));
   G__memfunc_setup("WCSimRecoRing",1244,G__WCSimAnalysisRootDict_240_0_1, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoRing), -1, 0, 8, 1, 1, 0, 
"d - 'Double_t' 0 - vtxx d - 'Double_t' 0 - vtxy "
"d - 'Double_t' 0 - vtxz d - 'Double_t' 0 - dirx "
"d - 'Double_t' 0 - diry d - 'Double_t' 0 - dirz "
"d - 'Double_t' 0 - angle d - 'Double_t' 0 - height", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVtxX",698,G__WCSimAnalysisRootDict_240_0_2, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVtxY",699,G__WCSimAnalysisRootDict_240_0_3, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVtxZ",700,G__WCSimAnalysisRootDict_240_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDirX",663,G__WCSimAnalysisRootDict_240_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDirY",664,G__WCSimAnalysisRootDict_240_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDirZ",665,G__WCSimAnalysisRootDict_240_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAngle",775,G__WCSimAnalysisRootDict_240_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHeight",889,G__WCSimAnalysisRootDict_240_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimAnalysisRootDict_240_0_10, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimRecoRing::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimAnalysisRootDict_240_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRecoRing::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimAnalysisRootDict_240_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimRecoRing::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimAnalysisRootDict_240_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimRecoRing::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimAnalysisRootDict_240_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimAnalysisRootDict_240_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRecoRing::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimAnalysisRootDict_240_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRecoRing::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimAnalysisRootDict_240_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRecoRing::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimAnalysisRootDict_240_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRecoRing::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimRecoRing", 1244, G__WCSimAnalysisRootDict_240_0_22, (int) ('i'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoRing), -1, 0, 1, 1, 1, 0, "u 'WCSimRecoRing' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimRecoRing", 1370, G__WCSimAnalysisRootDict_240_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimAnalysisRootDict_240_0_24, (int) ('u'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoRing), -1, 1, 1, 1, 1, 0, "u 'WCSimRecoRing' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimRecoEvent(void) {
   /* WCSimRecoEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoEvent));
   G__memfunc_setup("WCSimRecoEvent",1358,G__WCSimAnalysisRootDict_241_0_1, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__WCSimAnalysisRootDict_241_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHeader",885,G__WCSimAnalysisRootDict_241_0_3, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - run i - 'Int_t' 0 - event "
"i - 'Int_t' 0 - trigger", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRun",597,G__WCSimAnalysisRootDict_241_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEvent",802,G__WCSimAnalysisRootDict_241_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrigger",1012,G__WCSimAnalysisRootDict_241_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddDigit",762,G__WCSimAnalysisRootDict_241_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "U 'WCSimRecoDigit' - 0 - digit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddFilterDigit",1376,G__WCSimAnalysisRootDict_241_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "U 'WCSimRecoDigit' - 0 - digit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddRing",665,G__WCSimAnalysisRootDict_241_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "U 'WCSimRecoRing' - 0 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDigit",785,G__WCSimAnalysisRootDict_241_0_10, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoDigit), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNDigits",978,G__WCSimAnalysisRootDict_241_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFilterDigit",1399,G__WCSimAnalysisRootDict_241_0_12, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoDigit), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNFilterDigits",1592,G__WCSimAnalysisRootDict_241_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRing",688,G__WCSimAnalysisRootDict_241_0_14, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoRing), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNRings",881,G__WCSimAnalysisRootDict_241_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPrimaryRing",1428,G__WCSimAnalysisRootDict_241_0_16, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoRing), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVertex",938,G__WCSimAnalysisRootDict_241_0_17, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z d - 'Double_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDirection",1229,G__WCSimAnalysisRootDict_241_0_18, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetConeAngle",1176,G__WCSimAnalysisRootDict_241_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - angle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrackLength",1411,G__WCSimAnalysisRootDict_241_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - length", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVtxFOM",848,G__WCSimAnalysisRootDict_241_0_21, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - fom i - 'Int_t' 0 - nsteps "
"g - 'Bool_t' 0 - pass", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVtxStatus",1266,G__WCSimAnalysisRootDict_241_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - status", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVertex",926,G__WCSimAnalysisRootDict_241_0_23, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVtxX",698,G__WCSimAnalysisRootDict_241_0_24, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVtxY",699,G__WCSimAnalysisRootDict_241_0_25, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVtxZ",700,G__WCSimAnalysisRootDict_241_0_26, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVtxTime",1009,G__WCSimAnalysisRootDict_241_0_27, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDirX",663,G__WCSimAnalysisRootDict_241_0_28, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDirY",664,G__WCSimAnalysisRootDict_241_0_29, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDirZ",665,G__WCSimAnalysisRootDict_241_0_30, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetConeAngle",1164,G__WCSimAnalysisRootDict_241_0_31, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrackLength",1399,G__WCSimAnalysisRootDict_241_0_32, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVtxFOM",836,G__WCSimAnalysisRootDict_241_0_33, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVtxIterations",1668,G__WCSimAnalysisRootDict_241_0_34, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVtxPass",1017,G__WCSimAnalysisRootDict_241_0_35, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVtxStatus",1254,G__WCSimAnalysisRootDict_241_0_36, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FoundVertex",1146,G__WCSimAnalysisRootDict_241_0_37, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FoundDirection",1437,G__WCSimAnalysisRootDict_241_0_38, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FoundRings",1023,G__WCSimAnalysisRootDict_241_0_39, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFilterDone",1304,G__WCSimAnalysisRootDict_241_0_40, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsFilterDone",1192,G__WCSimAnalysisRootDict_241_0_41, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVertexFinderDone",1928,G__WCSimAnalysisRootDict_241_0_42, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsVertexFinderDone",1816,G__WCSimAnalysisRootDict_241_0_43, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRingFinderDone",1690,G__WCSimAnalysisRootDict_241_0_44, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsRingFinderDone",1578,G__WCSimAnalysisRootDict_241_0_45, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDigitList",1197,G__WCSimAnalysisRootDict_241_0_46, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoDigitmUcOallocatorlEWCSimRecoDigitmUgRsPgR), G__defined_typename("vector<WCSimRecoDigit*>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFilterDigitList",1811,G__WCSimAnalysisRootDict_241_0_47, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoDigitmUcOallocatorlEWCSimRecoDigitmUgRsPgR), G__defined_typename("vector<WCSimRecoDigit*>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRingList",1100,G__WCSimAnalysisRootDict_241_0_48, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoRingmUcOallocatorlEWCSimRecoRingmUgRsPgR), G__defined_typename("vector<WCSimRecoRing*>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintDigitList",1434,G__WCSimAnalysisRootDict_241_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintFilterDigitList",2048,G__WCSimAnalysisRootDict_241_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintEvent",1039,G__WCSimAnalysisRootDict_241_0_51, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearDigits",1099,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearFilterDigits",1713,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearRings",1002,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimAnalysisRootDict_241_0_55, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimRecoEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimAnalysisRootDict_241_0_56, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRecoEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimAnalysisRootDict_241_0_57, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimRecoEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimAnalysisRootDict_241_0_58, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimRecoEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimAnalysisRootDict_241_0_62, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimAnalysisRootDict_241_0_63, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRecoEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimAnalysisRootDict_241_0_64, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRecoEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimAnalysisRootDict_241_0_65, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRecoEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimAnalysisRootDict_241_0_66, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRecoEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimRecoEvent", 1358, G__WCSimAnalysisRootDict_241_0_67, (int) ('i'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoEvent), -1, 0, 1, 1, 1, 0, "u 'WCSimRecoEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimRecoEvent", 1484, G__WCSimAnalysisRootDict_241_0_68, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimAnalysisRootDict_241_0_69, (int) ('u'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoEvent), -1, 1, 1, 1, 1, 0, "u 'WCSimRecoEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimTimeLikelihood(void) {
   /* WCSimTimeLikelihood */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimTimeLikelihood));
   G__memfunc_setup("WCSimTimeLikelihood",1878,G__WCSimAnalysisRootDict_250_0_1, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimTimeLikelihood), -1, 0, 2, 1, 1, 0, 
"U 'WCSimLikelihoodDigitArray' - 0 - myDigitArray U 'WCSimLikelihoodTrack' - 0 - myTrack", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__WCSimAnalysisRootDict_250_0_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'WCSimLikelihoodDigitArray' - 0 - myDigitArray U 'WCSimLikelihoodTrack' - 0 - myTrack", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Calc2LnL",683,G__WCSimAnalysisRootDict_250_0_3, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrackLength",1399,G__WCSimAnalysisRootDict_250_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimTimeLikelihood", 1878, G__WCSimAnalysisRootDict_250_0_5, (int) ('i'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimTimeLikelihood), -1, 0, 1, 1, 1, 0, "u 'WCSimTimeLikelihood' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimTimeLikelihood", 2004, G__WCSimAnalysisRootDict_250_0_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimAnalysisRootDict_250_0_7, (int) ('u'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimTimeLikelihood), -1, 1, 1, 1, 1, 0, "u 'WCSimTimeLikelihood' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimLikelihoodFitter(void) {
   /* WCSimLikelihoodFitter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodFitter));
   G__memfunc_setup("WCSimLikelihoodFitter",2101,G__WCSimAnalysisRootDict_287_0_1, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodFitter), -1, 0, 1, 1, 1, 0, "U 'WCSimRootEvent' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Minimize2LnL",1146,G__WCSimAnalysisRootDict_287_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Calc2LnL",683,G__WCSimAnalysisRootDict_287_0_3, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Calc2LnL",683,G__WCSimAnalysisRootDict_287_0_4, 100, -1, -1, 0, 1, 1, 1, 0, "U 'WCSimLikelihoodTrack' - 0 - myTrack", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Charge2LnL",898,G__WCSimAnalysisRootDict_287_0_5, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Charge2LnL",898,G__WCSimAnalysisRootDict_287_0_6, 100, -1, -1, 0, 1, 1, 1, 0, "U 'WCSimLikelihoodTrack' - 0 - myTrack", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcMuDirect",1168,G__WCSimAnalysisRootDict_287_0_7, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcMuIndirect",1383,G__WCSimAnalysisRootDict_287_0_8, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Time2LnL",711,G__WCSimAnalysisRootDict_287_0_9, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimLikelihoodFitter", 2101, G__WCSimAnalysisRootDict_287_0_10, (int) ('i'), 
G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodFitter), -1, 0, 1, 1, 1, 0, "u 'WCSimLikelihoodFitter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimLikelihoodFitter", 2227, G__WCSimAnalysisRootDict_287_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimAnalysisRootDict_287_0_12, (int) ('u'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodFitter), -1, 1, 1, 1, 1, 0, "u 'WCSimLikelihoodFitter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimLikelihoodTuner(void) {
   /* WCSimLikelihoodTuner */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodTuner));
   G__memfunc_setup("WCSimLikelihoodTuner",2005,G__WCSimAnalysisRootDict_290_0_1, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodTuner), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadEmissionProfiles",2059,G__WCSimAnalysisRootDict_290_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i 'WCSimLikelihoodTrack::TrackType' - 0 - myType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadEmissionProfiles",2059,G__WCSimAnalysisRootDict_290_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'WCSimLikelihoodTrack' - 0 - myTracK", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TransmissionFunction",2128,G__WCSimAnalysisRootDict_290_0_4, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - s U 'WCSimLikelihoodTrack' - 0 - myTrack "
"U 'WCSimLikelihoodDigit' - 0 - myDigit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Efficiency",1013,G__WCSimAnalysisRootDict_290_0_5, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - s U 'WCSimLikelihoodTrack' - 0 - myTrack "
"U 'WCSimLikelihoodDigit' - 0 - myDigit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SolidAngle",994,G__WCSimAnalysisRootDict_290_0_6, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - s U 'WCSimLikelihoodTrack' - 0 - myTrack "
"U 'WCSimLikelihoodDigit' - 0 - myDigit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ScatteringTable",1532,G__WCSimAnalysisRootDict_290_0_7, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalculateIndIntegrals",2130,G__WCSimAnalysisRootDict_290_0_8, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - i U 'WCSimLikelihoodTrack' - 0 - myTrack", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalculateChIntegrals",2018,G__WCSimAnalysisRootDict_290_0_9, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - i U 'WCSimLikelihoodTrack' - 0 - myTrack "
"U 'WCSimLikelihoodDigit' - 0 - myDigit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalculateCoefficients",2144,G__WCSimAnalysisRootDict_290_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'WCSimLikelihoodTrack' - 0 - myTrack U 'WCSimLikelihoodDigit' - 0 - myDigit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalculateCoefficientsVector",2771,G__WCSimAnalysisRootDict_290_0_11, 117, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 2, 1, 1, 0, 
"U 'WCSimLikelihoodTrack' - 0 - myTrack U 'WCSimLikelihoodDigit' - 0 - myDigit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TabulateIndirectIntegrals",2573,G__WCSimAnalysisRootDict_290_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"i 'WCSimLikelihoodTrack::TrackType' - 0 - myType u 'TString' - 0 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TabulateDirectIntegrals",2358,G__WCSimAnalysisRootDict_290_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"i 'WCSimLikelihoodTrack::TrackType' - 0 - myType u 'TString' - 0 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TabulateIntegrals",1755,G__WCSimAnalysisRootDict_290_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"i 'WCSimLikelihoodTrack::TrackType' - 0 - myType u 'TString' - 0 - filename", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimLikelihoodTuner", 2005, G__WCSimAnalysisRootDict_290_0_15, (int) ('i'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodTuner), -1, 0, 1, 1, 1, 0, "u 'WCSimLikelihoodTuner' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimLikelihoodTuner", 2131, G__WCSimAnalysisRootDict_290_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimAnalysisRootDict_290_0_17, (int) ('u'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodTuner), -1, 1, 1, 1, 1, 0, "u 'WCSimLikelihoodTuner' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimChargeLikelihood(void) {
   /* WCSimChargeLikelihood */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimChargeLikelihood));
   G__memfunc_setup("WCSimChargeLikelihood",2065,G__WCSimAnalysisRootDict_291_0_1, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimChargeLikelihood), -1, 0, 2, 1, 1, 0, 
"U 'WCSimLikelihoodDigitArray' - 0 - myDigitArray U 'WCSimLikelihoodTrack' - 0 - myTrack", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__WCSimAnalysisRootDict_291_0_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'WCSimLikelihoodDigitArray' - 0 - myDigitArray U 'WCSimLikelihoodTrack' - 0 - myTrack", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Calc2LnL",683,G__WCSimAnalysisRootDict_291_0_3, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ChargeExpectation",1742,G__WCSimAnalysisRootDict_291_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLightFlux",1207,G__WCSimAnalysisRootDict_291_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMuIndirect",1300,G__WCSimAnalysisRootDict_291_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMuDirect",1085,G__WCSimAnalysisRootDict_291_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LookupChIntegrals",1742,G__WCSimAnalysisRootDict_291_0_8, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LookupIndIntegrals",1854,G__WCSimAnalysisRootDict_291_0_9, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ScatteringTable",1532,G__WCSimAnalysisRootDict_291_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrackParameters",1833,G__WCSimAnalysisRootDict_291_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalculateExactLikelihood",2439,G__WCSimAnalysisRootDict_291_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetR0Interval",1255,G__WCSimAnalysisRootDict_291_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCosTheta0Interval",1968,G__WCSimAnalysisRootDict_291_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimChargeLikelihood", 2065, G__WCSimAnalysisRootDict_291_0_15, (int) ('i'), 
G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimChargeLikelihood), -1, 0, 1, 1, 1, 0, "u 'WCSimChargeLikelihood' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimChargeLikelihood", 2191, G__WCSimAnalysisRootDict_291_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimAnalysisRootDict_291_0_17, (int) ('u'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimChargeLikelihood), -1, 1, 1, 1, 1, 0, "u 'WCSimChargeLikelihood' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimDisplay(void) {
   /* WCSimDisplay */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDisplay));
   G__memfunc_setup("WCSimDisplay",1177,G__WCSimAnalysisRootDict_655_0_1, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDisplay), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawDisplay",1124,G__WCSimAnalysisRootDict_655_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'WCSimRecoEvent' - 0 - recoevent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawCleanDisplay",1607,G__WCSimAnalysisRootDict_655_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'WCSimRecoEvent' - 0 - recoevent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawRecoEvent",1305,G__WCSimAnalysisRootDict_655_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'WCSimRecoEvent' - 0 - recoevent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawTrueEvent",1328,G__WCSimAnalysisRootDict_655_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'WCSimTrueEvent' - 0 - trueevent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ResetDisplay",1241,G__WCSimAnalysisRootDict_655_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrintDisplay",1251,G__WCSimAnalysisRootDict_655_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPulseHeightCut",1722,G__WCSimAnalysisRootDict_655_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - cut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPulseHeightCut",1710,G__WCSimAnalysisRootDict_655_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintGIF",739,G__WCSimAnalysisRootDict_655_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 '1' yesno", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintEPS",757,G__WCSimAnalysisRootDict_655_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 '1' yesno", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimAnalysisRootDict_655_0_12, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimDisplay::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimAnalysisRootDict_655_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimDisplay::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimAnalysisRootDict_655_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimDisplay::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimAnalysisRootDict_655_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimDisplay::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimAnalysisRootDict_655_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimAnalysisRootDict_655_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimDisplay::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimAnalysisRootDict_655_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimDisplay::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimAnalysisRootDict_655_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimDisplay::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimAnalysisRootDict_655_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimDisplay::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimDisplay", 1177, G__WCSimAnalysisRootDict_655_0_24, (int) ('i'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDisplay), -1, 0, 1, 1, 1, 0, "u 'WCSimDisplay' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimDisplay", 1303, G__WCSimAnalysisRootDict_655_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimAnalysisRootDict_655_0_26, (int) ('u'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDisplay), -1, 1, 1, 1, 1, 0, "u 'WCSimDisplay' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimReco(void) {
   /* WCSimReco */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimReco));
   G__memfunc_setup("Run",309,G__WCSimAnalysisRootDict_656_0_1, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Run",309,G__WCSimAnalysisRootDict_656_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'WCSimRecoEvent' - 0 - -", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("RunFilter",923,G__WCSimAnalysisRootDict_656_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'WCSimRecoEvent' - 0 - -", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("RunRecoVertex",1340,G__WCSimAnalysisRootDict_656_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'WCSimRecoEvent' - 0 - -", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("RunRecoRings",1217,G__WCSimAnalysisRootDict_656_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'WCSimRecoEvent' - 0 - -", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Class",502,G__WCSimAnalysisRootDict_656_0_6, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimReco::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimAnalysisRootDict_656_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimReco::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimAnalysisRootDict_656_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimReco::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimAnalysisRootDict_656_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimReco::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimAnalysisRootDict_656_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimAnalysisRootDict_656_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimReco::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimAnalysisRootDict_656_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimReco::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimAnalysisRootDict_656_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimReco::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimAnalysisRootDict_656_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimReco::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~WCSimReco", 970, G__WCSimAnalysisRootDict_656_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimAnalysisRootDict_656_0_19, (int) ('u'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimReco), -1, 1, 1, 1, 1, 0, "u 'WCSimReco' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimTrueEvent(void) {
   /* WCSimTrueEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimTrueEvent));
   G__memfunc_setup("WCSimTrueEvent",1381,G__WCSimAnalysisRootDict_657_0_1, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimTrueEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHeader",885,G__WCSimAnalysisRootDict_657_0_2, 121, -1, -1, 0, 18, 1, 1, 0, 
"i - 'Int_t' 0 - ipdg d - 'Double_t' 0 - g4vx "
"d - 'Double_t' 0 - g4vy d - 'Double_t' 0 - g4vz "
"d - 'Double_t' 0 - g4ex d - 'Double_t' 0 - g4ey "
"d - 'Double_t' 0 - g4ez d - 'Double_t' 0 - vx "
"d - 'Double_t' 0 - vy d - 'Double_t' 0 - vz "
"d - 'Double_t' 0 - ex d - 'Double_t' 0 - ey "
"d - 'Double_t' 0 - ez d - 'Double_t' 0 - px "
"d - 'Double_t' 0 - py d - 'Double_t' 0 - pz "
"d - 'Double_t' 0 - trkE d - 'Double_t' 0 - trkP", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPDG",507,G__WCSimAnalysisRootDict_657_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetG4VtxX",821,G__WCSimAnalysisRootDict_657_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetG4VtxY",822,G__WCSimAnalysisRootDict_657_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetG4VtxZ",823,G__WCSimAnalysisRootDict_657_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetG4EndX",778,G__WCSimAnalysisRootDict_657_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetG4EndY",779,G__WCSimAnalysisRootDict_657_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetG4EndZ",780,G__WCSimAnalysisRootDict_657_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVtxX",698,G__WCSimAnalysisRootDict_657_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVtxY",699,G__WCSimAnalysisRootDict_657_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVtxZ",700,G__WCSimAnalysisRootDict_657_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEndX",655,G__WCSimAnalysisRootDict_657_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEndY",656,G__WCSimAnalysisRootDict_657_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEndZ",657,G__WCSimAnalysisRootDict_657_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDirX",663,G__WCSimAnalysisRootDict_657_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDirY",664,G__WCSimAnalysisRootDict_657_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDirZ",665,G__WCSimAnalysisRootDict_657_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLength",898,G__WCSimAnalysisRootDict_657_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMomentum",1138,G__WCSimAnalysisRootDict_657_0_20, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergy",906,G__WCSimAnalysisRootDict_657_0_21, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNTracks",982,G__WCSimAnalysisRootDict_657_0_22, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrack",789,G__WCSimAnalysisRootDict_657_0_23, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimTrueTrack), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - itrack", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTrack",766,G__WCSimAnalysisRootDict_657_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "U 'WCSimTrueTrack' - 0 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearTracks",1103,G__WCSimAnalysisRootDict_657_0_25, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__WCSimAnalysisRootDict_657_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintEvent",1039,G__WCSimAnalysisRootDict_657_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimAnalysisRootDict_657_0_28, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimTrueEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimAnalysisRootDict_657_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimTrueEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimAnalysisRootDict_657_0_30, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimTrueEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimAnalysisRootDict_657_0_31, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimTrueEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimAnalysisRootDict_657_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimAnalysisRootDict_657_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimTrueEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimAnalysisRootDict_657_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimTrueEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimAnalysisRootDict_657_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimTrueEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimAnalysisRootDict_657_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimTrueEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimTrueEvent", 1381, G__WCSimAnalysisRootDict_657_0_40, (int) ('i'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimTrueEvent), -1, 0, 1, 1, 1, 0, "u 'WCSimTrueEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimTrueEvent", 1507, G__WCSimAnalysisRootDict_657_0_41, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimAnalysisRootDict_657_0_42, (int) ('u'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimTrueEvent), -1, 1, 1, 1, 1, 0, "u 'WCSimTrueEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimDisplayViewer(void) {
   /* WCSimDisplayViewer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDisplayViewer));
   G__memfunc_setup("WCSimDisplayViewer",1803,G__WCSimAnalysisRootDict_658_0_1, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDisplayViewer), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RootStyle",949,G__WCSimAnalysisRootDict_658_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__WCSimAnalysisRootDict_658_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("controlStart",1295,G__WCSimAnalysisRootDict_658_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("controlNext",1184,G__WCSimAnalysisRootDict_658_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("controlPrevious",1630,G__WCSimAnalysisRootDict_658_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("controlGoTo",1146,G__WCSimAnalysisRootDict_658_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("controlPrint",1294,G__WCSimAnalysisRootDict_658_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildDisplay",1222,G__WCSimAnalysisRootDict_658_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateDisplay",1337,G__WCSimAnalysisRootDict_658_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - entry", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DisplayEvent",1240,G__WCSimAnalysisRootDict_658_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - entry", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DisplayRecoClusters",1972,G__WCSimAnalysisRootDict_658_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 '1' yesno", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DisplayRecoEvent",1633,G__WCSimAnalysisRootDict_658_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 '1' yesno", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DisplayTrueEvent",1656,G__WCSimAnalysisRootDict_658_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 '1' yesno", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPulseHeightCut",1722,G__WCSimAnalysisRootDict_658_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - cut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UseDisplay",1027,G__WCSimAnalysisRootDict_658_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - display", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintGIF",739,G__WCSimAnalysisRootDict_658_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 '1' yesno", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintEPS",757,G__WCSimAnalysisRootDict_658_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 '1' yesno", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintDisplayList",1663,G__WCSimAnalysisRootDict_658_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimAnalysisRootDict_658_0_20, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimDisplayViewer::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimAnalysisRootDict_658_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimDisplayViewer::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimAnalysisRootDict_658_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimDisplayViewer::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimAnalysisRootDict_658_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimDisplayViewer::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimAnalysisRootDict_658_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimAnalysisRootDict_658_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimDisplayViewer::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimAnalysisRootDict_658_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimDisplayViewer::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimAnalysisRootDict_658_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimDisplayViewer::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimAnalysisRootDict_658_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimDisplayViewer::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimDisplayViewer", 1803, G__WCSimAnalysisRootDict_658_0_32, (int) ('i'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDisplayViewer), -1, 0, 1, 1, 1, 0, "u 'WCSimDisplayViewer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimDisplayViewer", 1929, G__WCSimAnalysisRootDict_658_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimAnalysisRootDict_658_0_34, (int) ('u'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDisplayViewer), -1, 1, 1, 1, 1, 0, "u 'WCSimDisplayViewer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimDisplayFactory(void) {
   /* WCSimDisplayFactory */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDisplayFactory));
   G__memfunc_setup("Instance",821,G__WCSimAnalysisRootDict_667_0_1, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDisplayFactory), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (WCSimDisplayFactory* (*)())(&WCSimDisplayFactory::Instance) ), 0);
   G__memfunc_setup("MakeDisplay",1108,G__WCSimAnalysisRootDict_667_0_2, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDisplay), -1, 0, 1, 1, 1, 0, "C - - 10 '\"default\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WCSimDisplayFactory",1905,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDisplayFactory), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimAnalysisRootDict_667_0_4, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimDisplayFactory::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimAnalysisRootDict_667_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimDisplayFactory::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimAnalysisRootDict_667_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimDisplayFactory::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimAnalysisRootDict_667_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimDisplayFactory::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimAnalysisRootDict_667_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimAnalysisRootDict_667_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimDisplayFactory::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimAnalysisRootDict_667_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimDisplayFactory::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimAnalysisRootDict_667_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimDisplayFactory::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimAnalysisRootDict_667_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimDisplayFactory::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimDisplayFactory", 1905, G__WCSimAnalysisRootDict_667_0_16, (int) ('i'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDisplayFactory), -1, 0, 1, 1, 1, 0, "u 'WCSimDisplayFactory' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimAnalysisRootDict_667_0_17, (int) ('u'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDisplayFactory), -1, 1, 1, 1, 1, 0, "u 'WCSimDisplayFactory' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimTrueTrack(void) {
   /* WCSimTrueTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimTrueTrack));
   G__memfunc_setup("WCSimTrueTrack",1368,G__WCSimAnalysisRootDict_668_0_1, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimTrueTrack), -1, 0, 19, 1, 1, 0, 
"i - 'Int_t' 0 - ipdg i - 'Int_t' 0 - ipdgParent "
"d - 'Double_t' 0 - g4vx d - 'Double_t' 0 - g4vy "
"d - 'Double_t' 0 - g4vz d - 'Double_t' 0 - g4ex "
"d - 'Double_t' 0 - g4ey d - 'Double_t' 0 - g4ez "
"d - 'Double_t' 0 - vx d - 'Double_t' 0 - vy "
"d - 'Double_t' 0 - vz d - 'Double_t' 0 - ex "
"d - 'Double_t' 0 - ey d - 'Double_t' 0 - ez "
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - trkE "
"d - 'Double_t' 0 - trkP", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetG4VtxX",821,G__WCSimAnalysisRootDict_668_0_2, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetG4VtxY",822,G__WCSimAnalysisRootDict_668_0_3, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetG4VtxZ",823,G__WCSimAnalysisRootDict_668_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetG4EndX",778,G__WCSimAnalysisRootDict_668_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetG4EndY",779,G__WCSimAnalysisRootDict_668_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetG4EndZ",780,G__WCSimAnalysisRootDict_668_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVtxX",698,G__WCSimAnalysisRootDict_668_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVtxY",699,G__WCSimAnalysisRootDict_668_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVtxZ",700,G__WCSimAnalysisRootDict_668_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEndX",655,G__WCSimAnalysisRootDict_668_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEndY",656,G__WCSimAnalysisRootDict_668_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEndZ",657,G__WCSimAnalysisRootDict_668_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDirX",663,G__WCSimAnalysisRootDict_668_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDirY",664,G__WCSimAnalysisRootDict_668_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDirZ",665,G__WCSimAnalysisRootDict_668_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMomentum",1138,G__WCSimAnalysisRootDict_668_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergy",906,G__WCSimAnalysisRootDict_668_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrackPDG",1008,G__WCSimAnalysisRootDict_668_0_19, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParentPDG",1125,G__WCSimAnalysisRootDict_668_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintTrack",1026,G__WCSimAnalysisRootDict_668_0_21, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimAnalysisRootDict_668_0_22, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimTrueTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimAnalysisRootDict_668_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimTrueTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimAnalysisRootDict_668_0_24, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimTrueTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimAnalysisRootDict_668_0_25, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimTrueTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimAnalysisRootDict_668_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimAnalysisRootDict_668_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimTrueTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimAnalysisRootDict_668_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimTrueTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimAnalysisRootDict_668_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimTrueTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimAnalysisRootDict_668_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimTrueTrack::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimTrueTrack", 1368, G__WCSimAnalysisRootDict_668_0_34, (int) ('i'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimTrueTrack), -1, 0, 1, 1, 1, 0, "u 'WCSimTrueTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimTrueTrack", 1494, G__WCSimAnalysisRootDict_668_0_35, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimAnalysisRootDict_668_0_36, (int) ('u'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimTrueTrack), -1, 1, 1, 1, 1, 0, "u 'WCSimTrueTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimDisplayAB(void) {
   /* WCSimDisplayAB */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDisplayAB));
   G__memfunc_setup("WCSimDisplayAB",1308,G__WCSimAnalysisRootDict_686_0_1, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDisplayAB), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawDisplay",1124,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'WCSimRecoEvent' - 0 - recoevent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawCleanDisplay",1607,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'WCSimRecoEvent' - 0 - recoevent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawRecoEvent",1305,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'WCSimRecoEvent' - 0 - recoevent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawTrueEvent",1328,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'WCSimTrueEvent' - 0 - trueevent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ResetDisplay",1241,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrintDisplay",1251,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildGeometry",1340,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawNewDisplay",1422,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateDisplay",1337,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintDisplayGIF",1465,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintDisplayEPS",1483,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("QPEtoCOL",679,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "d - 'Double_t' 0 - Q", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TIMEtoCOL",752,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "d - 'Double_t' 0 - T", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeLegendQPE",1203,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeLegendTIME",1276,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeLegendRECO",1270,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawVertex",1036,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 7, 1, 4, 0, 
"d - 'Double_t' 0 - vx d - 'Double_t' 0 - vy "
"d - 'Double_t' 0 - vz d - 'Double_t' 0 - px "
"d - 'Double_t' 0 - py d - 'Double_t' 0 - pz "
"i - 'Int_t' 0 - colourcode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawRing",798,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 8, 1, 4, 0, 
"d - 'Double_t' 0 - vx d - 'Double_t' 0 - vy "
"d - 'Double_t' 0 - vz d - 'Double_t' 0 - px "
"d - 'Double_t' 0 - py d - 'Double_t' 0 - pz "
"d - 'Double_t' 0 - angle i - 'Int_t' 0 - colourcode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimAnalysisRootDict_686_0_22, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimDisplayAB::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimAnalysisRootDict_686_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimDisplayAB::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimAnalysisRootDict_686_0_24, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimDisplayAB::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimAnalysisRootDict_686_0_25, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimDisplayAB::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimAnalysisRootDict_686_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimAnalysisRootDict_686_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimDisplayAB::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimAnalysisRootDict_686_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimDisplayAB::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimAnalysisRootDict_686_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimDisplayAB::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimAnalysisRootDict_686_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimDisplayAB::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimDisplayAB", 1308, G__WCSimAnalysisRootDict_686_0_34, (int) ('i'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDisplayAB), -1, 0, 1, 1, 1, 0, "u 'WCSimDisplayAB' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimDisplayAB", 1434, G__WCSimAnalysisRootDict_686_0_35, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimEveDisplay(void) {
   /* WCSimEveDisplay */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimEveDisplay));
   G__memfunc_setup("WCSimEveDisplay",1465,G__WCSimAnalysisRootDict_699_0_1, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimEveDisplay), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawDisplay",1124,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'WCSimRecoEvent' - 0 - recoevent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawCleanDisplay",1607,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'WCSimRecoEvent' - 0 - recoevent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawRecoEvent",1305,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'WCSimRecoEvent' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawTrueEvent",1328,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'WCSimTrueEvent' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ResetDisplay",1241,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrintDisplay",1251,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildGeometry",1340,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimAnalysisRootDict_699_0_10, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimEveDisplay::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimAnalysisRootDict_699_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimEveDisplay::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimAnalysisRootDict_699_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimEveDisplay::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimAnalysisRootDict_699_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimEveDisplay::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimAnalysisRootDict_699_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimAnalysisRootDict_699_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimEveDisplay::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimAnalysisRootDict_699_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimEveDisplay::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimAnalysisRootDict_699_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimEveDisplay::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimAnalysisRootDict_699_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimEveDisplay::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimEveDisplay", 1465, G__WCSimAnalysisRootDict_699_0_22, (int) ('i'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimEveDisplay), -1, 0, 1, 1, 1, 0, "u 'WCSimEveDisplay' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimEveDisplay", 1591, G__WCSimAnalysisRootDict_699_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimAnalysisRootDict_699_0_24, (int) ('u'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimEveDisplay), -1, 1, 1, 1, 1, 0, "u 'WCSimEveDisplay' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimEventWriter(void) {
   /* WCSimEventWriter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimEventWriter));
   G__memfunc_setup("WCSimEventWriter",1602,G__WCSimAnalysisRootDict_700_0_1, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimEventWriter), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddFile",649,G__WCSimAnalysisRootDict_700_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteOutGeometry",1679,G__WCSimAnalysisRootDict_700_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 '1' yesno", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteOutTracks",1451,G__WCSimAnalysisRootDict_700_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 '1' yesno", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteOutDigits",1447,G__WCSimAnalysisRootDict_700_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 '1' yesno", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Run",309,G__WCSimAnalysisRootDict_700_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '-1' entries", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteThisDigit",1428,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteThisTrack",1432,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CloseFiles",1001,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimAnalysisRootDict_700_0_11, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimEventWriter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimAnalysisRootDict_700_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimEventWriter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimAnalysisRootDict_700_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimEventWriter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimAnalysisRootDict_700_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimEventWriter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimAnalysisRootDict_700_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimAnalysisRootDict_700_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimEventWriter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimAnalysisRootDict_700_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimEventWriter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimAnalysisRootDict_700_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimEventWriter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimAnalysisRootDict_700_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimEventWriter::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimEventWriter", 1602, G__WCSimAnalysisRootDict_700_0_23, (int) ('i'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimEventWriter), -1, 0, 1, 1, 1, 0, "u 'WCSimEventWriter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimEventWriter", 1728, G__WCSimAnalysisRootDict_700_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimAnalysisRootDict_700_0_25, (int) ('u'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimEventWriter), -1, 1, 1, 1, 1, 0, "u 'WCSimEventWriter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimGeometry(void) {
   /* WCSimGeometry */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimGeometry));
   G__memfunc_setup("AsString",811,G__WCSimAnalysisRootDict_701_0_1, 67, -1, -1, 0, 1, 1, 1, 1, "u 'WCSimGeometry::EGeoConfiguration' 'WCSimGeometry::GeoConfiguration_t' 0 - config", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__WCSimAnalysisRootDict_701_0_2, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimGeometry), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (WCSimGeometry* (*)())(&WCSimGeometry::Instance) ), 0);
   G__memfunc_setup("BuildGeometry",1340,G__WCSimAnalysisRootDict_701_0_3, 121, -1, -1, 0, 1, 3, 1, 0, "U 'WCSimRootGeom' - 0 - geom", (char*)NULL, (void*) G__func2void( (void (*)(WCSimRootGeom*))(&WCSimGeometry::BuildGeometry) ), 0);
   G__memfunc_setup("PrintGeometry",1369,G__WCSimAnalysisRootDict_701_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimGeometry::PrintGeometry) ), 0);
   G__memfunc_setup("WriteGeometry",1367,G__WCSimAnalysisRootDict_701_0_5, 121, -1, -1, 0, 1, 3, 1, 0, "C - - 10 '\"wcsim.geometry.root\"' filename", (char*)NULL, (void*) G__func2void( (void (*)(const char*))(&WCSimGeometry::WriteGeometry) ), 0);
   G__memfunc_setup("TouchGeometry",1359,G__WCSimAnalysisRootDict_701_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Bool_t (*)())(&WCSimGeometry::TouchGeometry) ), 0);
   G__memfunc_setup("Reset",515,G__WCSimAnalysisRootDict_701_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimGeometry::Reset) ), 0);
   G__memfunc_setup("SetGeometry",1144,G__WCSimAnalysisRootDict_701_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "U 'WCSimRootGeom' - 0 - geom", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteToFile",1102,G__WCSimAnalysisRootDict_701_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"wcsim.geometry.root\"' filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWCSimGeometry",1583,G__WCSimAnalysisRootDict_701_0_10, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRootGeom), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGeoConfig",1169,G__WCSimAnalysisRootDict_701_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGeoType",989,G__WCSimAnalysisRootDict_701_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsCylinder",1014,G__WCSimAnalysisRootDict_701_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCylRadius",1200,G__WCSimAnalysisRootDict_701_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCylLength",1194,G__WCSimAnalysisRootDict_701_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCylFiducialRadius",2001,G__WCSimAnalysisRootDict_701_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCylFiducialLength",1995,G__WCSimAnalysisRootDict_701_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsMailBox",872,G__WCSimAnalysisRootDict_701_0_18, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMailBoxX",1060,G__WCSimAnalysisRootDict_701_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMailBoxY",1061,G__WCSimAnalysisRootDict_701_0_20, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMailBoxZ",1062,G__WCSimAnalysisRootDict_701_0_21, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMailBoxFiducialX",1861,G__WCSimAnalysisRootDict_701_0_22, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMailBoxFiducialY",1862,G__WCSimAnalysisRootDict_701_0_23, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMailBoxFiducialZ",1863,G__WCSimAnalysisRootDict_701_0_24, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetArea",665,G__WCSimAnalysisRootDict_701_0_25, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVolume",920,G__WCSimAnalysisRootDict_701_0_26, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFiducialVolume",1721,G__WCSimAnalysisRootDict_701_0_27, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumPMTs",948,G__WCSimAnalysisRootDict_701_0_28, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPMTRadius",1145,G__WCSimAnalysisRootDict_701_0_29, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPMTCoverage",1341,G__WCSimAnalysisRootDict_701_0_30, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPMTSeparation",1575,G__WCSimAnalysisRootDict_701_0_31, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRegion",900,G__WCSimAnalysisRootDict_701_0_32, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - tube", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetX",376,G__WCSimAnalysisRootDict_701_0_33, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - tube", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetY",377,G__WCSimAnalysisRootDict_701_0_34, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - tube", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZ",378,G__WCSimAnalysisRootDict_701_0_35, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - tube", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InsideDetector",1430,G__WCSimAnalysisRootDict_701_0_36, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InsideFiducialVolume",2037,G__WCSimAnalysisRootDict_701_0_37, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InsideDetector",1430,G__WCSimAnalysisRootDict_701_0_38, 103, -1, G__defined_typename("Bool_t"), 0, 6, 1, 1, 0, 
"d - 'Double_t' 0 - vx d - 'Double_t' 0 - vy "
"d - 'Double_t' 0 - vz d - 'Double_t' 0 - ex "
"d - 'Double_t' 0 - ey d - 'Double_t' 0 - ez", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DistanceToEdge",1379,G__WCSimAnalysisRootDict_701_0_39, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProjectToNearEdge",1685,G__WCSimAnalysisRootDict_701_0_40, 121, -1, -1, 0, 10, 1, 1, 0, 
"d - 'Double_t' 0 - x0 d - 'Double_t' 0 - y0 "
"d - 'Double_t' 0 - z0 d - 'Double_t' 0 - px "
"d - 'Double_t' 0 - py d - 'Double_t' 0 - pz "
"d - 'Double_t' 1 - x d - 'Double_t' 1 - y "
"d - 'Double_t' 1 - z i - 'Int_t' 1 - region", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProjectToFarEdge",1576,G__WCSimAnalysisRootDict_701_0_41, 121, -1, -1, 0, 10, 1, 1, 0, 
"d - 'Double_t' 0 - x0 d - 'Double_t' 0 - y0 "
"d - 'Double_t' 0 - z0 d - 'Double_t' 0 - px "
"d - 'Double_t' 0 - py d - 'Double_t' 0 - pz "
"d - 'Double_t' 1 - x d - 'Double_t' 1 - y "
"d - 'Double_t' 1 - z i - 'Int_t' 1 - region", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ForwardProjectionToEdge",2346,G__WCSimAnalysisRootDict_701_0_42, 100, -1, G__defined_typename("Double_t"), 0, 6, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z d - 'Double_t' 0 - px "
"d - 'Double_t' 0 - py d - 'Double_t' 0 - pz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BackwardProjectionToEdge",2420,G__WCSimAnalysisRootDict_701_0_43, 100, -1, G__defined_typename("Double_t"), 0, 6, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z d - 'Double_t' 0 - px "
"d - 'Double_t' 0 - py d - 'Double_t' 0 - pz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProjectToEdge",1295,G__WCSimAnalysisRootDict_701_0_44, 121, -1, -1, 0, 11, 1, 1, 0, 
"g - 'Bool_t' 0 - useFarEdge d - 'Double_t' 0 - x0 "
"d - 'Double_t' 0 - y0 d - 'Double_t' 0 - z0 "
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 1 - x "
"d - 'Double_t' 1 - y d - 'Double_t' 1 - z "
"i - 'Int_t' 1 - region", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProjectToEdgeOld",1582,G__WCSimAnalysisRootDict_701_0_45, 121, -1, -1, 0, 11, 1, 1, 0, 
"g - 'Bool_t' 0 - UseFarEdge d - 'Double_t' 0 - x0 "
"d - 'Double_t' 0 - y0 d - 'Double_t' 0 - z0 "
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 1 - x "
"d - 'Double_t' 1 - y d - 'Double_t' 1 - z "
"i - 'Int_t' 1 - region", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("XYZtoUV",665,G__WCSimAnalysisRootDict_701_0_46, 121, -1, -1, 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 - region d - 'Double_t' 0 - x "
"d - 'Double_t' 0 - y d - 'Double_t' 0 - z "
"d - 'Double_t' 1 - u d - 'Double_t' 1 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindCircle",979,G__WCSimAnalysisRootDict_701_0_47, 121, -1, -1, 0, 16, 3, 1, 0, 
"d - 'Double_t' 0 - x0 d - 'Double_t' 0 - y0 "
"d - 'Double_t' 0 - z0 d - 'Double_t' 0 - x1 "
"d - 'Double_t' 0 - y1 d - 'Double_t' 0 - z1 "
"d - 'Double_t' 0 - x2 d - 'Double_t' 0 - y2 "
"d - 'Double_t' 0 - z2 d - 'Double_t' 1 - rx "
"d - 'Double_t' 1 - ry d - 'Double_t' 1 - rz "
"d - 'Double_t' 1 - nx d - 'Double_t' 1 - ny "
"d - 'Double_t' 1 - nz d - 'Double_t' 1 - r", (char*)NULL, (void*) G__func2void( (void (*)(Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&))(&WCSimGeometry::FindCircle) ), 0);
   G__memfunc_setup("FindCircle",979,G__WCSimAnalysisRootDict_701_0_48, 121, -1, -1, 0, 15, 3, 1, 0, 
"d - 'Double_t' 0 - xp d - 'Double_t' 0 - yp "
"d - 'Double_t' 0 - zp d - 'Double_t' 0 - x0 "
"d - 'Double_t' 0 - y0 d - 'Double_t' 0 - z0 "
"d - 'Double_t' 0 - angle_degrees d - 'Double_t' 0 - omega_degrees "
"d - 'Double_t' 1 - rx d - 'Double_t' 1 - ry "
"d - 'Double_t' 1 - rz d - 'Double_t' 1 - nx "
"d - 'Double_t' 1 - ny d - 'Double_t' 1 - nz "
"d - 'Double_t' 1 - r", (char*)NULL, (void*) G__func2void( (void (*)(Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&))(&WCSimGeometry::FindCircle) ), 0);
   G__memfunc_setup("FindCircleOld",1266,G__WCSimAnalysisRootDict_701_0_49, 121, -1, -1, 0, 15, 3, 1, 0, 
"d - 'Double_t' 0 - xp d - 'Double_t' 0 - yp "
"d - 'Double_t' 0 - zp d - 'Double_t' 0 - x0 "
"d - 'Double_t' 0 - y0 d - 'Double_t' 0 - z0 "
"d - 'Double_t' 0 - angle_degrees d - 'Double_t' 0 - omega_degrees "
"d - 'Double_t' 1 - rx d - 'Double_t' 1 - ry "
"d - 'Double_t' 1 - rz d - 'Double_t' 1 - nx "
"d - 'Double_t' 1 - ny d - 'Double_t' 1 - nz "
"d - 'Double_t' 1 - r", (char*)NULL, (void*) G__func2void( (void (*)(Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&))(&WCSimGeometry::FindCircleOld) ), 0);
   G__memfunc_setup("FindVertex",1023,G__WCSimAnalysisRootDict_701_0_50, 121, -1, -1, 0, 24, 3, 1, 0, 
"d - 'Double_t' 0 - x0 d - 'Double_t' 0 - y0 "
"d - 'Double_t' 0 - z0 d - 'Double_t' 0 - t0 "
"d - 'Double_t' 0 - x1 d - 'Double_t' 0 - y1 "
"d - 'Double_t' 0 - z1 d - 'Double_t' 0 - t1 "
"d - 'Double_t' 0 - x2 d - 'Double_t' 0 - y2 "
"d - 'Double_t' 0 - z2 d - 'Double_t' 0 - t2 "
"d - 'Double_t' 0 - x3 d - 'Double_t' 0 - y3 "
"d - 'Double_t' 0 - z3 d - 'Double_t' 0 - t3 "
"d - 'Double_t' 1 - vxm d - 'Double_t' 1 - vym "
"d - 'Double_t' 1 - vzm d - 'Double_t' 1 - vtm "
"d - 'Double_t' 1 - vxp d - 'Double_t' 1 - vyp "
"d - 'Double_t' 1 - vzp d - 'Double_t' 1 - vtp", (char*)NULL, (void*) G__func2void( (void (*)(Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&))(&WCSimGeometry::FindVertex) ), 0);
   G__memfunc_setup("DistanceToIntersectLine",2343,G__WCSimAnalysisRootDict_701_0_51, 121, -1, -1, 0, 13, 3, 1, 0, 
"d - 'Double_t' 0 - x0 d - 'Double_t' 0 - y0 "
"d - 'Double_t' 0 - z0 d - 'Double_t' 0 - vx "
"d - 'Double_t' 0 - vy d - 'Double_t' 0 - vz "
"d - 'Double_t' 0 - ex d - 'Double_t' 0 - ey "
"d - 'Double_t' 0 - ez d - 'Double_t' 1 - x "
"d - 'Double_t' 1 - y d - 'Double_t' 1 - z "
"d - 'Double_t' 1 - L", (char*)NULL, (void*) G__func2void( (void (*)(Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t&, Double_t&, Double_t&, Double_t&))(&WCSimGeometry::DistanceToIntersectLine) ), 0);
   G__memfunc_setup("DistanceToIntersectLine",2343,G__WCSimAnalysisRootDict_701_0_52, 100, -1, G__defined_typename("Double_t"), 0, 12, 3, 1, 0, 
"d - 'Double_t' 0 - x0 d - 'Double_t' 0 - y0 "
"d - 'Double_t' 0 - z0 d - 'Double_t' 0 - sx "
"d - 'Double_t' 0 - sy d - 'Double_t' 0 - sz "
"d - 'Double_t' 0 - ex d - 'Double_t' 0 - ey "
"d - 'Double_t' 0 - ez d - 'Double_t' 1 - x "
"d - 'Double_t' 1 - y d - 'Double_t' 1 - z", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t&, Double_t&, Double_t&))(&WCSimGeometry::DistanceToIntersectLine) ), 0);
   G__memfunc_setup("DistanceToIntersectLine",2343,G__WCSimAnalysisRootDict_701_0_53, 100, -1, G__defined_typename("Double_t"), 0, 4, 3, 1, 0, 
"D - 'Double_t' 0 - pos D - 'Double_t' 0 - start "
"D - 'Double_t' 0 - end D - 'Double_t' 0 - intersection", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t*, Double_t*, Double_t*, Double_t*))(&WCSimGeometry::DistanceToIntersectLine) ), 0);
   G__memfunc_setup("WCSimGeometry",1295,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimGeometry), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WCSimGeometry",1295,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimGeometry), -1, 0, 1, 1, 4, 0, "U 'WCSimRootGeom' - 0 - geom", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimAnalysisRootDict_701_0_56, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimGeometry::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimAnalysisRootDict_701_0_57, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimGeometry::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimAnalysisRootDict_701_0_58, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimGeometry::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimAnalysisRootDict_701_0_59, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimGeometry::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimAnalysisRootDict_701_0_63, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimAnalysisRootDict_701_0_64, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimGeometry::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimAnalysisRootDict_701_0_65, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimGeometry::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimAnalysisRootDict_701_0_66, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimGeometry::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimAnalysisRootDict_701_0_67, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimGeometry::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimGeometry", 1295, G__WCSimAnalysisRootDict_701_0_68, (int) ('i'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimGeometry), -1, 0, 1, 1, 1, 0, "u 'WCSimGeometry' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimAnalysisRootDict_701_0_69, (int) ('u'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimGeometry), -1, 1, 1, 1, 1, 0, "u 'WCSimGeometry' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimInterface(void) {
   /* WCSimInterface */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimInterface));
   G__memfunc_setup("Instance",821,G__WCSimAnalysisRootDict_705_0_1, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimInterface), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (WCSimInterface* (*)())(&WCSimInterface::Instance) ), 0);
   G__memfunc_setup("TouchData",893,G__WCSimAnalysisRootDict_705_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Bool_t (*)())(&WCSimInterface::TouchData) ), 0);
   G__memfunc_setup("TouchEvent",1029,G__WCSimAnalysisRootDict_705_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Bool_t (*)())(&WCSimInterface::TouchEvent) ), 0);
   G__memfunc_setup("LoadData",762,G__WCSimAnalysisRootDict_705_0_4, 121, -1, -1, 0, 1, 3, 1, 0, "C - - 10 - file", (char*)NULL, (void*) G__func2void( (void (*)(const char*))(&WCSimInterface::LoadData) ), 0);
   G__memfunc_setup("LoadEvent",898,G__WCSimAnalysisRootDict_705_0_5, 121, -1, -1, 0, 1, 3, 1, 0, "i - 'Int_t' 0 - ievent", (char*)NULL, (void*) G__func2void( (void (*)(Int_t))(&WCSimInterface::LoadEvent) ), 0);
   G__memfunc_setup("GetNumEvents",1221,G__WCSimAnalysisRootDict_705_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Int_t (*)())(&WCSimInterface::GetNumEvents) ), 0);
   G__memfunc_setup("FilterTrigger",1338,G__WCSimAnalysisRootDict_705_0_7, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRootTrigger), -1, 0, 1, 3, 1, 0, "U 'WCSimRootEvent' - 0 - event", (char*)NULL, (void*) G__func2void( (WCSimRootTrigger* (*)(WCSimRootEvent*))(&WCSimInterface::FilterTrigger) ), 0);
   G__memfunc_setup("TrueEvent",930,G__WCSimAnalysisRootDict_705_0_8, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimTrueEvent), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (WCSimTrueEvent* (*)())(&WCSimInterface::TrueEvent) ), 0);
   G__memfunc_setup("RecoEvent",907,G__WCSimAnalysisRootDict_705_0_9, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoEvent), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (WCSimRecoEvent* (*)())(&WCSimInterface::RecoEvent) ), 0);
   G__memfunc_setup("WCSimEvent",965,G__WCSimAnalysisRootDict_705_0_10, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRootEvent), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (WCSimRootEvent* (*)())(&WCSimInterface::WCSimEvent) ), 0);
   G__memfunc_setup("WCSimTrigger",1175,G__WCSimAnalysisRootDict_705_0_11, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRootTrigger), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (WCSimRootTrigger* (*)())(&WCSimInterface::WCSimTrigger) ), 0);
   G__memfunc_setup("GetRunNumber",1214,G__WCSimAnalysisRootDict_705_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Int_t (*)())(&WCSimInterface::GetRunNumber) ), 0);
   G__memfunc_setup("GetEventNumber",1419,G__WCSimAnalysisRootDict_705_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Int_t (*)())(&WCSimInterface::GetEventNumber) ), 0);
   G__memfunc_setup("GetTriggerNumber",1629,G__WCSimAnalysisRootDict_705_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Int_t (*)())(&WCSimInterface::GetTriggerNumber) ), 0);
   G__memfunc_setup("Reset",515,G__WCSimAnalysisRootDict_705_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimInterface::Reset) ), 0);
   G__memfunc_setup("SetEnergyThreshold",1859,G__WCSimAnalysisRootDict_705_0_16, 121, -1, -1, 0, 1, 3, 1, 0, "d - 'Double_t' 0 - input_mev", (char*)NULL, (void*) G__func2void( (void (*)(Double_t))(&WCSimInterface::SetEnergyThreshold) ), 0);
   G__memfunc_setup("SetRangeThreshold",1734,G__WCSimAnalysisRootDict_705_0_17, 121, -1, -1, 0, 1, 3, 1, 0, "d - 'Double_t' 0 - input_cm", (char*)NULL, (void*) G__func2void( (void (*)(Double_t))(&WCSimInterface::SetRangeThreshold) ), 0);
   G__memfunc_setup("SetTrueEnergyThreshold",2275,G__WCSimAnalysisRootDict_705_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - ke", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrueRangeThreshold",2150,G__WCSimAnalysisRootDict_705_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - ds", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrueEvent",1218,G__WCSimAnalysisRootDict_705_0_20, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimTrueEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRecoEvent",1195,G__WCSimAnalysisRootDict_705_0_21, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWCSimEvent",1253,G__WCSimAnalysisRootDict_705_0_22, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRootEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWCSimTrigger",1463,G__WCSimAnalysisRootDict_705_0_23, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRootTrigger), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWCSimEvent",1253,G__WCSimAnalysisRootDict_705_0_24, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRootEvent), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ievent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWCSimTrigger",1463,G__WCSimAnalysisRootDict_705_0_25, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRootTrigger), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ievent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddFile",649,G__WCSimAnalysisRootDict_705_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildEvent",1010,G__WCSimAnalysisRootDict_705_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ievent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckEvent",992,G__WCSimAnalysisRootDict_705_0_28, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntries",1018,G__WCSimAnalysisRootDict_705_0_29, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetForNewSample",1718,G__WCSimAnalysisRootDict_705_0_30, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WCSimInterface",1364,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimInterface), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildEvent",1010,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'WCSimRootTrigger' - 0 - trigger", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildTrueEvent",1426,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'WCSimRootTrigger' - 0 - trigger", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildRecoEvent",1403,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'WCSimRootTrigger' - 0 - trigger", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetTrueEvent",1445,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetRecoEvent",1422,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimAnalysisRootDict_705_0_37, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimInterface::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimAnalysisRootDict_705_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimInterface::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimAnalysisRootDict_705_0_39, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimInterface::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimAnalysisRootDict_705_0_40, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimInterface::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimAnalysisRootDict_705_0_44, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimAnalysisRootDict_705_0_45, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimInterface::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimAnalysisRootDict_705_0_46, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimInterface::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimAnalysisRootDict_705_0_47, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimInterface::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimAnalysisRootDict_705_0_48, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimInterface::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimInterface", 1364, G__WCSimAnalysisRootDict_705_0_49, (int) ('i'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimInterface), -1, 0, 1, 1, 1, 0, "u 'WCSimInterface' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimAnalysisRootDict_705_0_50, (int) ('u'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimInterface), -1, 1, 1, 1, 1, 0, "u 'WCSimInterface' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimParameters(void) {
   /* WCSimParameters */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimParameters));
   G__memfunc_setup("Instance",821,G__WCSimAnalysisRootDict_706_0_1, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimParameters), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (WCSimParameters* (*)())(&WCSimParameters::Instance) ), 0);
   G__memfunc_setup("UseSimpleParameters",1963,G__WCSimAnalysisRootDict_706_0_2, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimParameters::UseSimpleParameters) ), 0);
   G__memfunc_setup("UseSimpleTimeResolution",2394,G__WCSimAnalysisRootDict_706_0_3, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimParameters::UseSimpleTimeResolution) ), 0);
   G__memfunc_setup("UseSimpleTimeSlew",1729,G__WCSimAnalysisRootDict_706_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimParameters::UseSimpleTimeSlew) ), 0);
   G__memfunc_setup("UseSimpleRefractiveIndex",2458,G__WCSimAnalysisRootDict_706_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimParameters::UseSimpleRefractiveIndex) ), 0);
   G__memfunc_setup("SpeedOfLight",1182,G__WCSimAnalysisRootDict_706_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Double_t (*)())(&WCSimParameters::SpeedOfLight) ), 0);
   G__memfunc_setup("CherenkovAngle",1420,G__WCSimAnalysisRootDict_706_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Double_t (*)())(&WCSimParameters::CherenkovAngle) ), 0);
   G__memfunc_setup("TimeResolution",1475,G__WCSimAnalysisRootDict_706_0_8, 100, -1, G__defined_typename("Double_t"), 0, 1, 3, 1, 0, "d - 'Double_t' 0 - Q", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t))(&WCSimParameters::TimeResolution) ), 0);
   G__memfunc_setup("TimeSlew",810,G__WCSimAnalysisRootDict_706_0_9, 100, -1, G__defined_typename("Double_t"), 0, 1, 3, 1, 0, "d - 'Double_t' 0 - Q", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t))(&WCSimParameters::TimeSlew) ), 0);
   G__memfunc_setup("RefractiveIndex",1539,G__WCSimAnalysisRootDict_706_0_10, 100, -1, G__defined_typename("Double_t"), 0, 1, 3, 1, 0, "d - 'Double_t' 0 - r", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t))(&WCSimParameters::RefractiveIndex) ), 0);
   G__memfunc_setup("ThetaC",569,G__WCSimAnalysisRootDict_706_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 3, 1, 0, "", "Cherenkov Angle", (void*) G__func2void( (Double_t (*)())(&WCSimParameters::ThetaC) ), 0);
   G__memfunc_setup("CosThetaC",862,G__WCSimAnalysisRootDict_706_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 3, 1, 0, "", "Cosine of Cherenkov Angle", (void*) G__func2void( (Double_t (*)())(&WCSimParameters::CosThetaC) ), 0);
   G__memfunc_setup("PrintParameters",1569,G__WCSimAnalysisRootDict_706_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimParameters::PrintParameters) ), 0);
   G__memfunc_setup("RunPrintParameters",1878,G__WCSimAnalysisRootDict_706_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSimpleTimeResolution",2393,G__WCSimAnalysisRootDict_706_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SimpleTimeResolution",2093,G__WCSimAnalysisRootDict_706_0_16, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSimpleTimeSlew",1728,G__WCSimAnalysisRootDict_706_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SimpleTimeSlew",1428,G__WCSimAnalysisRootDict_706_0_18, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSimpleRefractiveIndex",2457,G__WCSimAnalysisRootDict_706_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SimpleRefractiveIndex",2157,G__WCSimAnalysisRootDict_706_0_20, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimeResolution",1763,G__WCSimAnalysisRootDict_706_0_21, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - Q", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimeSlew",1098,G__WCSimAnalysisRootDict_706_0_22, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - Q", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRefractiveIndex",1827,G__WCSimAnalysisRootDict_706_0_23, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSimpleTimeResolution",2381,G__WCSimAnalysisRootDict_706_0_24, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - Q", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSimpleTimeSlew",1716,G__WCSimAnalysisRootDict_706_0_25, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSimpleRefractiveIndex",2445,G__WCSimAnalysisRootDict_706_0_26, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WCSimParameters",1495,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimParameters), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimAnalysisRootDict_706_0_28, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimParameters::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimAnalysisRootDict_706_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimParameters::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimAnalysisRootDict_706_0_30, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimParameters::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimAnalysisRootDict_706_0_31, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimParameters::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimAnalysisRootDict_706_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimAnalysisRootDict_706_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimParameters::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimAnalysisRootDict_706_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimParameters::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimAnalysisRootDict_706_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimParameters::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimAnalysisRootDict_706_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimParameters::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimParameters", 1495, G__WCSimAnalysisRootDict_706_0_40, (int) ('i'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimParameters), -1, 0, 1, 1, 1, 0, "u 'WCSimParameters' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimAnalysisRootDict_706_0_41, (int) ('u'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimParameters), -1, 1, 1, 1, 1, 0, "u 'WCSimParameters' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimRecoObjectTable(void) {
   /* WCSimRecoObjectTable */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoObjectTable));
   G__memfunc_setup("Instance",821,G__WCSimAnalysisRootDict_707_0_1, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoObjectTable), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (WCSimRecoObjectTable* (*)())(&WCSimRecoObjectTable::Instance) ), 0);
   G__memfunc_setup("NewDigit",795,G__WCSimAnalysisRootDict_707_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteDigit",1092,G__WCSimAnalysisRootDict_707_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NumberOfDigits",1410,G__WCSimAnalysisRootDict_707_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NewCluster",1036,G__WCSimAnalysisRootDict_707_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteCluster",1333,G__WCSimAnalysisRootDict_707_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NumberOfClusters",1651,G__WCSimAnalysisRootDict_707_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NewClusterDigit",1533,G__WCSimAnalysisRootDict_707_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteClusterDigit",1830,G__WCSimAnalysisRootDict_707_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NumberOfClusterDigits",2148,G__WCSimAnalysisRootDict_707_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NewVertex",936,G__WCSimAnalysisRootDict_707_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteVertex",1233,G__WCSimAnalysisRootDict_707_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NumberOfVertices",1635,G__WCSimAnalysisRootDict_707_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NewRing",698,G__WCSimAnalysisRootDict_707_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteRing",995,G__WCSimAnalysisRootDict_707_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NumberOfRings",1313,G__WCSimAnalysisRootDict_707_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NewEvent",812,G__WCSimAnalysisRootDict_707_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteEvent",1109,G__WCSimAnalysisRootDict_707_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NumberOfEvents",1427,G__WCSimAnalysisRootDict_707_0_19, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__WCSimAnalysisRootDict_707_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__WCSimAnalysisRootDict_707_0_21, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WCSimRecoObjectTable",1931,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoObjectTable), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimAnalysisRootDict_707_0_23, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimRecoObjectTable::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimAnalysisRootDict_707_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRecoObjectTable::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimAnalysisRootDict_707_0_25, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimRecoObjectTable::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimAnalysisRootDict_707_0_26, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimRecoObjectTable::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimAnalysisRootDict_707_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimAnalysisRootDict_707_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRecoObjectTable::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimAnalysisRootDict_707_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRecoObjectTable::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimAnalysisRootDict_707_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRecoObjectTable::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimAnalysisRootDict_707_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRecoObjectTable::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimRecoObjectTable", 1931, G__WCSimAnalysisRootDict_707_0_35, (int) ('i'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoObjectTable), -1, 0, 1, 1, 1, 0, "u 'WCSimRecoObjectTable' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimAnalysisRootDict_707_0_36, (int) ('u'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoObjectTable), -1, 1, 1, 1, 1, 0, "u 'WCSimRecoObjectTable' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimRecoFactory(void) {
   /* WCSimRecoFactory */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoFactory));
   G__memfunc_setup("Instance",821,G__WCSimAnalysisRootDict_708_0_1, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoFactory), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (WCSimRecoFactory* (*)())(&WCSimRecoFactory::Instance) ), 0);
   G__memfunc_setup("MakeReco",775,G__WCSimAnalysisRootDict_708_0_2, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimReco), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeReco",775,G__WCSimAnalysisRootDict_708_0_3, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimReco), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WCSimRecoFactory",1572,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoFactory), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimAnalysisRootDict_708_0_5, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimRecoFactory::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimAnalysisRootDict_708_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRecoFactory::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimAnalysisRootDict_708_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimRecoFactory::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimAnalysisRootDict_708_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimRecoFactory::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimAnalysisRootDict_708_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimAnalysisRootDict_708_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRecoFactory::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimAnalysisRootDict_708_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRecoFactory::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimAnalysisRootDict_708_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRecoFactory::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimAnalysisRootDict_708_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRecoFactory::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimRecoFactory", 1572, G__WCSimAnalysisRootDict_708_0_17, (int) ('i'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoFactory), -1, 0, 1, 1, 1, 0, "u 'WCSimRecoFactory' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimAnalysisRootDict_708_0_18, (int) ('u'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoFactory), -1, 1, 1, 1, 1, 0, "u 'WCSimRecoFactory' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimRecoAB(void) {
   /* WCSimRecoAB */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoAB));
   G__memfunc_setup("WCSimRecoAB",975,G__WCSimAnalysisRootDict_710_0_1, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoAB), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Run",309,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Run",309,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'WCSimRecoEvent' - 0 - evt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RunFilter",923,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'WCSimRecoEvent' - 0 - evt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RunRecoVertex",1340,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'WCSimRecoEvent' - 0 - evt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RunRecoRings",1217,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'WCSimRecoEvent' - 0 - evt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__WCSimAnalysisRootDict_710_0_7, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimRecoAB::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimAnalysisRootDict_710_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRecoAB::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimAnalysisRootDict_710_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimRecoAB::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimAnalysisRootDict_710_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimRecoAB::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimAnalysisRootDict_710_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimAnalysisRootDict_710_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRecoAB::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimAnalysisRootDict_710_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRecoAB::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimAnalysisRootDict_710_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRecoAB::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimAnalysisRootDict_710_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRecoAB::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimRecoAB", 975, G__WCSimAnalysisRootDict_710_0_19, (int) ('i'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoAB), -1, 0, 1, 1, 1, 0, "u 'WCSimRecoAB' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimRecoAB", 1101, G__WCSimAnalysisRootDict_710_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimAnalysisRootDict_710_0_21, (int) ('u'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoAB), -1, 1, 1, 1, 1, 0, "u 'WCSimRecoAB' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimRecoCluster(void) {
   /* WCSimRecoCluster */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoCluster));
   G__memfunc_setup("WCSimRecoCluster",1582,G__WCSimAnalysisRootDict_711_0_1, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoCluster), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__WCSimAnalysisRootDict_711_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SortCluster",1162,G__WCSimAnalysisRootDict_711_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddDigit",762,G__WCSimAnalysisRootDict_711_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'WCSimRecoDigit' - 0 - digit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDigit",785,G__WCSimAnalysisRootDict_711_0_5, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoDigit), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNDigits",978,G__WCSimAnalysisRootDict_711_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimAnalysisRootDict_711_0_7, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimRecoCluster::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimAnalysisRootDict_711_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRecoCluster::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimAnalysisRootDict_711_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimRecoCluster::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimAnalysisRootDict_711_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimRecoCluster::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimAnalysisRootDict_711_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimAnalysisRootDict_711_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRecoCluster::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimAnalysisRootDict_711_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRecoCluster::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimAnalysisRootDict_711_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRecoCluster::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimAnalysisRootDict_711_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRecoCluster::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimRecoCluster", 1582, G__WCSimAnalysisRootDict_711_0_19, (int) ('i'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoCluster), -1, 0, 1, 1, 1, 0, "u 'WCSimRecoCluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimRecoCluster", 1708, G__WCSimAnalysisRootDict_711_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimAnalysisRootDict_711_0_21, (int) ('u'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoCluster), -1, 1, 1, 1, 1, 0, "u 'WCSimRecoCluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimRecoClusterDigit(void) {
   /* WCSimRecoClusterDigit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoClusterDigit));
   G__memfunc_setup("WCSimRecoClusterDigit",2079,G__WCSimAnalysisRootDict_712_0_1, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoClusterDigit), -1, 0, 1, 1, 1, 0, "U 'WCSimRecoDigit' - 0 - recoDigit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddClusterDigit",1500,G__WCSimAnalysisRootDict_712_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'WCSimRecoClusterDigit' - 0 - clusterDigit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNClusterDigits",1716,G__WCSimAnalysisRootDict_712_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClusterDigit",1523,G__WCSimAnalysisRootDict_712_0_4, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoClusterDigit), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - idigit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClusterDigitList",1935,G__WCSimAnalysisRootDict_712_0_5, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoClusterDigitmUcOallocatorlEWCSimRecoClusterDigitmUgRsPgR), G__defined_typename("vector<WCSimRecoClusterDigit*>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetX",376,G__WCSimAnalysisRootDict_712_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetY",377,G__WCSimAnalysisRootDict_712_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZ",378,G__WCSimAnalysisRootDict_712_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__WCSimAnalysisRootDict_712_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetClustered",1239,G__WCSimAnalysisRootDict_712_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 '1' yesno", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsClustered",1127,G__WCSimAnalysisRootDict_712_0_11, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsAllClustered",1408,G__WCSimAnalysisRootDict_712_0_12, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRecoDigit",1178,G__WCSimAnalysisRootDict_712_0_13, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoDigit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimAnalysisRootDict_712_0_14, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimRecoClusterDigit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimAnalysisRootDict_712_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRecoClusterDigit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimAnalysisRootDict_712_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimRecoClusterDigit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimAnalysisRootDict_712_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimRecoClusterDigit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimAnalysisRootDict_712_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimAnalysisRootDict_712_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRecoClusterDigit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimAnalysisRootDict_712_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRecoClusterDigit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimAnalysisRootDict_712_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRecoClusterDigit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimAnalysisRootDict_712_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRecoClusterDigit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimRecoClusterDigit", 2079, G__WCSimAnalysisRootDict_712_0_26, (int) ('i'), 
G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoClusterDigit), -1, 0, 1, 1, 1, 0, "u 'WCSimRecoClusterDigit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimRecoClusterDigit", 2205, G__WCSimAnalysisRootDict_712_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimAnalysisRootDict_712_0_28, (int) ('u'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoClusterDigit), -1, 1, 1, 1, 1, 0, "u 'WCSimRecoClusterDigit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimHoughTransform(void) {
   /* WCSimHoughTransform */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimHoughTransform));
   G__memfunc_setup("WCSimHoughTransform",1914,G__WCSimAnalysisRootDict_717_0_1, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimHoughTransform), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - phiBins i - 'Int_t' 0 - costhetaBins", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill",391,G__WCSimAnalysisRootDict_717_0_2, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - nx d - 'Double_t' 0 - ny "
"d - 'Double_t' 0 - nz d - 'Double_t' 0 - weight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill",391,G__WCSimAnalysisRootDict_717_0_3, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - phi d - 'Double_t' 0 - costheta "
"d - 'Double_t' 0 - weight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__WCSimAnalysisRootDict_717_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntries",1018,G__WCSimAnalysisRootDict_717_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIntegral",1110,G__WCSimAnalysisRootDict_717_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntry",818,G__WCSimAnalysisRootDict_717_0_7, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - binX i - 'Int_t' 0 - binY", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetX",376,G__WCSimAnalysisRootDict_717_0_8, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - binx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetY",377,G__WCSimAnalysisRootDict_717_0_9, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - biny", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhiBins",973,G__WCSimAnalysisRootDict_717_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetThetaBins",1186,G__WCSimAnalysisRootDict_717_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBinX",657,G__WCSimAnalysisRootDict_717_0_12, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBinY",658,G__WCSimAnalysisRootDict_717_0_13, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindPeak",770,G__WCSimAnalysisRootDict_717_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 1 - height", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindPeak",770,G__WCSimAnalysisRootDict_717_0_15, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 1 - phi d - 'Double_t' 1 - costheta "
"d - 'Double_t' 1 - height", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindPeak",770,G__WCSimAnalysisRootDict_717_0_16, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 1 - hx d - 'Double_t' 1 - hy "
"d - 'Double_t' 1 - hz d - 'Double_t' 1 - height", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTH2D",562,G__WCSimAnalysisRootDict_717_0_17, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TH2D), -1, 0, 1, 1, 1, 0, "C - - 10 - histname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRotatedTH2D",1285,G__WCSimAnalysisRootDict_717_0_18, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TH2D), -1, 0, 2, 1, 1, 0, 
"C - - 10 - histname d - 'Double_t' 0 '0.0' deltaPhi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimAnalysisRootDict_717_0_19, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimHoughTransform::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimAnalysisRootDict_717_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimHoughTransform::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimAnalysisRootDict_717_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimHoughTransform::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimAnalysisRootDict_717_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimHoughTransform::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimAnalysisRootDict_717_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimAnalysisRootDict_717_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimHoughTransform::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimAnalysisRootDict_717_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimHoughTransform::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimAnalysisRootDict_717_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimHoughTransform::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimAnalysisRootDict_717_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimHoughTransform::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimHoughTransform", 1914, G__WCSimAnalysisRootDict_717_0_31, (int) ('i'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimHoughTransform), -1, 0, 1, 1, 1, 0, "u 'WCSimHoughTransform' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimHoughTransform", 2040, G__WCSimAnalysisRootDict_717_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimAnalysisRootDict_717_0_33, (int) ('u'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimHoughTransform), -1, 1, 1, 1, 1, 0, "u 'WCSimHoughTransform' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimHoughTransformArray(void) {
   /* WCSimHoughTransformArray */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimHoughTransformArray));
   G__memfunc_setup("WCSimHoughTransformArray",2425,G__WCSimAnalysisRootDict_718_0_1, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimHoughTransformArray), -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - bins d - 'Double_t' 0 - min "
"d - 'Double_t' 0 - max i - 'Int_t' 0 - xbins "
"i - 'Int_t' 0 - ybins", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildArray",1007,G__WCSimAnalysisRootDict_718_0_2, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - bins d - 'Double_t' 0 - min "
"d - 'Double_t' 0 - max i - 'Int_t' 0 - xbins "
"i - 'Int_t' 0 - ybins", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintArray",1036,G__WCSimAnalysisRootDict_718_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBins",684,G__WCSimAnalysisRootDict_718_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetConeAngleBins",1560,G__WCSimAnalysisRootDict_718_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetConeAngleMin",1456,G__WCSimAnalysisRootDict_718_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetConeAngleMax",1458,G__WCSimAnalysisRootDict_718_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetConeAngle",1164,G__WCSimAnalysisRootDict_718_0_8, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - bin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXBins",772,G__WCSimAnalysisRootDict_718_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYBins",773,G__WCSimAnalysisRootDict_718_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAngle",775,G__WCSimAnalysisRootDict_718_0_11, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - bin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindBin",666,G__WCSimAnalysisRootDict_718_0_12, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - angle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHoughTransform",1751,G__WCSimAnalysisRootDict_718_0_13, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimHoughTransform), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nAngle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindPeak",770,G__WCSimAnalysisRootDict_718_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 1 - bin d - 'Double_t' 1 - height", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindPeak",770,G__WCSimAnalysisRootDict_718_0_15, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 1 - phi d - 'Double_t' 1 - costheta "
"d - 'Double_t' 1 - angle d - 'Double_t' 1 - height", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindPeak",770,G__WCSimAnalysisRootDict_718_0_16, 121, -1, -1, 0, 5, 1, 1, 0, 
"d - 'Double_t' 1 - hx d - 'Double_t' 1 - hy "
"d - 'Double_t' 1 - hz d - 'Double_t' 1 - angle "
"d - 'Double_t' 1 - height", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindPeak",770,G__WCSimAnalysisRootDict_718_0_17, 121, -1, -1, 0, 5, 1, 1, 0, 
"u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - hx u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - hy "
"u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - hz u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - angle "
"u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - height", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AngleMaxima",1092,G__WCSimAnalysisRootDict_718_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >' 'vector<std::vector<Float_t> >' 1 - fHoughArrayMaxAngle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitTSpectrum2",1276,G__WCSimAnalysisRootDict_718_0_19, 121, -1, -1, 0, 5, 1, 1, 0, 
"u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - houghDirX u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - houghDirY "
"u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - houghDirZ u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - houghAngle "
"u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - houghHeight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitTSpectrum3",1277,G__WCSimAnalysisRootDict_718_0_20, 121, -1, -1, 0, 5, 1, 1, 0, 
"u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - houghDirX u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - houghDirY "
"u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - houghDirZ u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - houghAngle "
"u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - houghHeight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__WCSimAnalysisRootDict_718_0_21, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteArray",1106,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimAnalysisRootDict_718_0_23, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimHoughTransformArray::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimAnalysisRootDict_718_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimHoughTransformArray::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimAnalysisRootDict_718_0_25, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimHoughTransformArray::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimAnalysisRootDict_718_0_26, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimHoughTransformArray::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimAnalysisRootDict_718_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimAnalysisRootDict_718_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimHoughTransformArray::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimAnalysisRootDict_718_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimHoughTransformArray::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimAnalysisRootDict_718_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimHoughTransformArray::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimAnalysisRootDict_718_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimHoughTransformArray::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimHoughTransformArray", 2425, G__WCSimAnalysisRootDict_718_0_35, (int) ('i'), 
G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimHoughTransformArray), -1, 0, 1, 1, 1, 0, "u 'WCSimHoughTransformArray' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimHoughTransformArray", 2551, G__WCSimAnalysisRootDict_718_0_36, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimAnalysisRootDict_718_0_37, (int) ('u'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimHoughTransformArray), -1, 1, 1, 1, 1, 0, "u 'WCSimHoughTransformArray' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimDataCleaner(void) {
   /* WCSimDataCleaner */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDataCleaner));
   G__memfunc_setup("Instance",821,G__WCSimAnalysisRootDict_727_0_1, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDataCleaner), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (WCSimDataCleaner* (*)())(&WCSimDataCleaner::Instance) ), 0);
   G__memfunc_setup("Config",598,G__WCSimAnalysisRootDict_727_0_2, 121, -1, -1, 0, 1, 3, 1, 0, "i - 'Int_t' 0 - config", (char*)NULL, (void*) G__func2void( (void (*)(Int_t))(&WCSimDataCleaner::Config) ), 0);
   G__memfunc_setup("MinPulseHeight",1414,G__WCSimAnalysisRootDict_727_0_3, 121, -1, -1, 0, 1, 3, 1, 0, "d - 'Double_t' 0 - min", (char*)NULL, (void*) G__func2void( (void (*)(Double_t))(&WCSimDataCleaner::MinPulseHeight) ), 0);
   G__memfunc_setup("NeighbourRadius",1547,G__WCSimAnalysisRootDict_727_0_4, 121, -1, -1, 0, 1, 3, 1, 0, "d - 'Double_t' 0 - radius", (char*)NULL, (void*) G__func2void( (void (*)(Double_t))(&WCSimDataCleaner::NeighbourRadius) ), 0);
   G__memfunc_setup("NeighbourDigits",1543,G__WCSimAnalysisRootDict_727_0_5, 121, -1, -1, 0, 1, 3, 1, 0, "i - 'Int_t' 0 - digits", (char*)NULL, (void*) G__func2void( (void (*)(Int_t))(&WCSimDataCleaner::NeighbourDigits) ), 0);
   G__memfunc_setup("ClusterRadius",1354,G__WCSimAnalysisRootDict_727_0_6, 121, -1, -1, 0, 1, 3, 1, 0, "d - 'Double_t' 0 - radius", (char*)NULL, (void*) G__func2void( (void (*)(Double_t))(&WCSimDataCleaner::ClusterRadius) ), 0);
   G__memfunc_setup("ClusterDigits",1350,G__WCSimAnalysisRootDict_727_0_7, 121, -1, -1, 0, 1, 3, 1, 0, "i - 'Int_t' 0 - digits", (char*)NULL, (void*) G__func2void( (void (*)(Int_t))(&WCSimDataCleaner::ClusterDigits) ), 0);
   G__memfunc_setup("TimeWindow",1031,G__WCSimAnalysisRootDict_727_0_8, 121, -1, -1, 0, 1, 3, 1, 0, "d - 'Double_t' 0 - window", (char*)NULL, (void*) G__func2void( (void (*)(Double_t))(&WCSimDataCleaner::TimeWindow) ), 0);
   G__memfunc_setup("PrintParameters",1569,G__WCSimAnalysisRootDict_727_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimDataCleaner::PrintParameters) ), 0);
   G__memfunc_setup("RunPrintParameters",1878,G__WCSimAnalysisRootDict_727_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetConfig",898,G__WCSimAnalysisRootDict_727_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - config", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMinPulseHeight",1714,G__WCSimAnalysisRootDict_727_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - min", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNeighbourRadius",1847,G__WCSimAnalysisRootDict_727_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - radius", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNeighbourDigits",1843,G__WCSimAnalysisRootDict_727_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - digits", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetClusterRadius",1654,G__WCSimAnalysisRootDict_727_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - radius", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetClusterDigits",1650,G__WCSimAnalysisRootDict_727_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - digits", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTimeWindow",1331,G__WCSimAnalysisRootDict_727_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - window", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Run",309,G__WCSimAnalysisRootDict_727_0_18, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoDigitmUcOallocatorlEWCSimRecoDigitmUgRsPgR), G__defined_typename("vector<WCSimRecoDigit*>"), 0, 1, 1, 1, 0, "U 'vector<WCSimRecoDigit*,allocator<WCSimRecoDigit*> >' 'vector<WCSimRecoDigit*>' 0 - digitlist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetDigits",1127,G__WCSimAnalysisRootDict_727_0_19, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoDigitmUcOallocatorlEWCSimRecoDigitmUgRsPgR), G__defined_typename("vector<WCSimRecoDigit*>"), 0, 1, 1, 1, 0, "U 'vector<WCSimRecoDigit*,allocator<WCSimRecoDigit*> >' 'vector<WCSimRecoDigit*>' 0 - digitlist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FilterDigits",1226,G__WCSimAnalysisRootDict_727_0_20, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoDigitmUcOallocatorlEWCSimRecoDigitmUgRsPgR), G__defined_typename("vector<WCSimRecoDigit*>"), 0, 1, 1, 1, 0, "U 'vector<WCSimRecoDigit*,allocator<WCSimRecoDigit*> >' 'vector<WCSimRecoDigit*>' 0 - digitlist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FilterAll",895,G__WCSimAnalysisRootDict_727_0_21, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoDigitmUcOallocatorlEWCSimRecoDigitmUgRsPgR), G__defined_typename("vector<WCSimRecoDigit*>"), 0, 1, 1, 1, 0, "U 'vector<WCSimRecoDigit*,allocator<WCSimRecoDigit*> >' 'vector<WCSimRecoDigit*>' 0 - digitlist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FilterByPulseHeight",1923,G__WCSimAnalysisRootDict_727_0_22, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoDigitmUcOallocatorlEWCSimRecoDigitmUgRsPgR), G__defined_typename("vector<WCSimRecoDigit*>"), 0, 1, 1, 1, 0, "U 'vector<WCSimRecoDigit*,allocator<WCSimRecoDigit*> >' 'vector<WCSimRecoDigit*>' 0 - digitlist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FilterByNeighbours",1847,G__WCSimAnalysisRootDict_727_0_23, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoDigitmUcOallocatorlEWCSimRecoDigitmUgRsPgR), G__defined_typename("vector<WCSimRecoDigit*>"), 0, 1, 1, 1, 0, "U 'vector<WCSimRecoDigit*,allocator<WCSimRecoDigit*> >' 'vector<WCSimRecoDigit*>' 0 - digitlist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FilterByClusters",1654,G__WCSimAnalysisRootDict_727_0_24, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoDigitmUcOallocatorlEWCSimRecoDigitmUgRsPgR), G__defined_typename("vector<WCSimRecoDigit*>"), 0, 1, 1, 1, 0, "U 'vector<WCSimRecoDigit*,allocator<WCSimRecoDigit*> >' 'vector<WCSimRecoDigit*>' 0 - digitlist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RecoClusters",1246,G__WCSimAnalysisRootDict_727_0_25, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoClustermUcOallocatorlEWCSimRecoClustermUgRsPgR), G__defined_typename("vector<WCSimRecoCluster*>"), 0, 1, 1, 1, 0, "U 'vector<WCSimRecoDigit*,allocator<WCSimRecoDigit*> >' 'vector<WCSimRecoDigit*>' 0 - digitlist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FilterGoldenDigits",1827,G__WCSimAnalysisRootDict_727_0_26, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoDigitmUcOallocatorlEWCSimRecoDigitmUgRsPgR), G__defined_typename("vector<WCSimRecoDigit*>"), 0, 1, 1, 1, 0, "U 'vector<WCSimRecoDigit*,allocator<WCSimRecoDigit*> >' 'vector<WCSimRecoDigit*>' 0 - digitlist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WCSimDataCleaner",1527,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDataCleaner), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimAnalysisRootDict_727_0_29, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimDataCleaner::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimAnalysisRootDict_727_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimDataCleaner::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimAnalysisRootDict_727_0_31, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimDataCleaner::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimAnalysisRootDict_727_0_32, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimDataCleaner::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimAnalysisRootDict_727_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimAnalysisRootDict_727_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimDataCleaner::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimAnalysisRootDict_727_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimDataCleaner::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimAnalysisRootDict_727_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimDataCleaner::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimAnalysisRootDict_727_0_40, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimDataCleaner::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimDataCleaner", 1527, G__WCSimAnalysisRootDict_727_0_41, (int) ('i'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDataCleaner), -1, 0, 1, 1, 1, 0, "u 'WCSimDataCleaner' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimAnalysisRootDict_727_0_42, (int) ('u'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimDataCleaner), -1, 1, 1, 1, 1, 0, "u 'WCSimDataCleaner' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimVertexFinder(void) {
   /* WCSimVertexFinder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexFinder));
   G__memfunc_setup("Instance",821,G__WCSimAnalysisRootDict_736_0_1, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexFinder), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (WCSimVertexFinder* (*)())(&WCSimVertexFinder::Instance) ), 0);
   G__memfunc_setup("PointFitOnly",1231,G__WCSimAnalysisRootDict_736_0_2, 121, -1, -1, 0, 1, 3, 1, 0, "g - 'Bool_t' 0 '1' yesno", (char*)NULL, (void*) G__func2void( (void (*)(Bool_t))(&WCSimVertexFinder::PointFitOnly) ), 0);
   G__memfunc_setup("UseTrueVertex",1355,G__WCSimAnalysisRootDict_736_0_3, 121, -1, -1, 0, 1, 3, 1, 0, "g - 'Bool_t' 0 '1' yesno", (char*)NULL, (void*) G__func2void( (void (*)(Bool_t))(&WCSimVertexFinder::UseTrueVertex) ), 0);
   G__memfunc_setup("UseTruePosition",1570,G__WCSimAnalysisRootDict_736_0_4, 121, -1, -1, 0, 1, 3, 1, 0, "g - 'Bool_t' 0 '1' yesno", (char*)NULL, (void*) G__func2void( (void (*)(Bool_t))(&WCSimVertexFinder::UseTruePosition) ), 0);
   G__memfunc_setup("UseTrueDirection",1646,G__WCSimAnalysisRootDict_736_0_5, 121, -1, -1, 0, 1, 3, 1, 0, "g - 'Bool_t' 0 '1' yesno", (char*)NULL, (void*) G__func2void( (void (*)(Bool_t))(&WCSimVertexFinder::UseTrueDirection) ), 0);
   G__memfunc_setup("SeedWithTrueVertex",1851,G__WCSimAnalysisRootDict_736_0_6, 121, -1, -1, 0, 1, 3, 1, 0, "g - 'Bool_t' 0 '1' yesno", (char*)NULL, (void*) G__func2void( (void (*)(Bool_t))(&WCSimVertexFinder::SeedWithTrueVertex) ), 0);
   G__memfunc_setup("SeedWithSimpleVertex",2053,G__WCSimAnalysisRootDict_736_0_7, 121, -1, -1, 0, 1, 3, 1, 0, "g - 'Bool_t' 0 '1' yesno", (char*)NULL, (void*) G__func2void( (void (*)(Bool_t))(&WCSimVertexFinder::SeedWithSimpleVertex) ), 0);
   G__memfunc_setup("SeedWithQuadruples",1859,G__WCSimAnalysisRootDict_736_0_8, 121, -1, -1, 0, 1, 3, 1, 0, "g - 'Bool_t' 0 '1' yesno", (char*)NULL, (void*) G__func2void( (void (*)(Bool_t))(&WCSimVertexFinder::SeedWithQuadruples) ), 0);
   G__memfunc_setup("NumSeeds",804,G__WCSimAnalysisRootDict_736_0_9, 121, -1, -1, 0, 1, 3, 1, 0, "i - 'Int_t' 0 - nseeds", (char*)NULL, (void*) G__func2void( (void (*)(Int_t))(&WCSimVertexFinder::NumSeeds) ), 0);
   G__memfunc_setup("FitWeights",1022,G__WCSimAnalysisRootDict_736_0_10, 121, -1, -1, 0, 2, 3, 1, 0, 
"d - 'Double_t' 0 - tw d - 'Double_t' 0 - cw", (char*)NULL, (void*) G__func2void( (void (*)(Double_t, Double_t))(&WCSimVertexFinder::FitWeights) ), 0);
   G__memfunc_setup("FitTimeParams",1302,G__WCSimAnalysisRootDict_736_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimVertexFinder::FitTimeParams) ), 0);
   G__memfunc_setup("FixTimeParams",1306,G__WCSimAnalysisRootDict_736_0_12, 121, -1, -1, 0, 1, 3, 1, 0, "d - 'Double_t' 0 - param0", (char*)NULL, (void*) G__func2void( (void (*)(Double_t))(&WCSimVertexFinder::FixTimeParams) ), 0);
   G__memfunc_setup("FitConeParams",1292,G__WCSimAnalysisRootDict_736_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimVertexFinder::FitConeParams) ), 0);
   G__memfunc_setup("FixConeParams",1296,G__WCSimAnalysisRootDict_736_0_14, 121, -1, -1, 0, 3, 3, 1, 0, 
"d - 'Double_t' 0 - param0 d - 'Double_t' 0 - param1 "
"d - 'Double_t' 0 - param2", (char*)NULL, (void*) G__func2void( (void (*)(Double_t, Double_t, Double_t))(&WCSimVertexFinder::FixConeParams) ), 0);
   G__memfunc_setup("FixVertexBias",1316,G__WCSimAnalysisRootDict_736_0_15, 121, -1, -1, 0, 1, 3, 1, 0, "d - 'Double_t' 0 - bias", (char*)NULL, (void*) G__func2void( (void (*)(Double_t))(&WCSimVertexFinder::FixVertexBias) ), 0);
   G__memfunc_setup("PrintParameters",1569,G__WCSimAnalysisRootDict_736_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimVertexFinder::PrintParameters) ), 0);
   G__memfunc_setup("RunPrintParameters",1878,G__WCSimAnalysisRootDict_736_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPointFitOnly",1531,G__WCSimAnalysisRootDict_736_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - yesno", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UsingTrueVertex",1572,G__WCSimAnalysisRootDict_736_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - yesno", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UsingTruePosition",1787,G__WCSimAnalysisRootDict_736_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - yesno", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UsingTrueDirection",1863,G__WCSimAnalysisRootDict_736_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - yesno", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SeedingWithTrueVertex",2169,G__WCSimAnalysisRootDict_736_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - yesno", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SeedingWithSimpleVertex",2371,G__WCSimAnalysisRootDict_736_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - yesno", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SeedingWithQuadruples",2177,G__WCSimAnalysisRootDict_736_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - yesno", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNumSeeds",1104,G__WCSimAnalysisRootDict_736_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nseeds", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFitTimeParams",1602,G__WCSimAnalysisRootDict_736_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFixTimeParams",1606,G__WCSimAnalysisRootDict_736_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - param0", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFitConeParams",1592,G__WCSimAnalysisRootDict_736_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFixConeParams",1596,G__WCSimAnalysisRootDict_736_0_29, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - param0 d - 'Double_t' 0 - param1 "
"d - 'Double_t' 0 - param2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFitWeights",1322,G__WCSimAnalysisRootDict_736_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - tw d - 'Double_t' 0 - cw", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVertexBias",1321,G__WCSimAnalysisRootDict_736_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - bias", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Run",309,G__WCSimAnalysisRootDict_736_0_32, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 1, 1, 1, 0, "U 'WCSimRecoEvent' - 0 - event", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RunPointFit",1122,G__WCSimAnalysisRootDict_736_0_33, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 1, 1, 1, 0, "U 'WCSimRecoEvent' - 0 - event", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RunExtendedFit",1417,G__WCSimAnalysisRootDict_736_0_34, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 1, 1, 1, 0, "U 'WCSimRecoEvent' - 0 - event", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RunPointFitFromTruth",2061,G__WCSimAnalysisRootDict_736_0_35, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 1, 1, 1, 0, "U 'WCSimRecoEvent' - 0 - event", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RunExtendedFitFromTruth",2356,G__WCSimAnalysisRootDict_736_0_36, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 1, 1, 1, 0, "U 'WCSimRecoEvent' - 0 - event", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RunPointFit",1122,G__WCSimAnalysisRootDict_736_0_37, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 4, 1, 1, 0, 
"U 'WCSimRecoEvent' - 0 - event d - 'Double_t' 0 - vx "
"d - 'Double_t' 0 - vy d - 'Double_t' 0 - vz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RunPointFit",1122,G__WCSimAnalysisRootDict_736_0_38, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 7, 1, 1, 0, 
"U 'WCSimRecoEvent' - 0 - event d - 'Double_t' 0 - vx "
"d - 'Double_t' 0 - vy d - 'Double_t' 0 - vz "
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RunExtendedFit",1417,G__WCSimAnalysisRootDict_736_0_39, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 7, 1, 1, 0, 
"U 'WCSimRecoEvent' - 0 - event d - 'Double_t' 0 - vx "
"d - 'Double_t' 0 - vy d - 'Double_t' 0 - vz "
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Run",309,G__WCSimAnalysisRootDict_736_0_40, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 7, 1, 1, 0, 
"U 'WCSimRecoEvent' - 0 - event d - 'Double_t' 0 - vx "
"d - 'Double_t' 0 - vy d - 'Double_t' 0 - vz "
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSimplePosition",1759,G__WCSimAnalysisRootDict_736_0_41, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSimpleDirection",1835,G__WCSimAnalysisRootDict_736_0_42, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPointPosition",1663,G__WCSimAnalysisRootDict_736_0_43, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPointDirection",1739,G__WCSimAnalysisRootDict_736_0_44, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPointVertex",1448,G__WCSimAnalysisRootDict_736_0_45, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetExtendedVertex",1743,G__WCSimAnalysisRootDict_736_0_46, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildTrueVertex",1550,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildDummyVertex",1658,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindSimplePosition",1856,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindSeedPosition",1623,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindSimpleDirection",1932,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 1, 1, 4, 0, "U 'WCSimRecoVertex' - 0 - vertex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindSeedDirection",1699,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 1, 1, 4, 0, "U 'WCSimRecoVertex' - 0 - vertex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitPointPosition",1666,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 1, 1, 4, 0, "U 'WCSimRecoVertex' - 0 - vertex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitPointDirection",1742,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 1, 1, 4, 0, "U 'WCSimRecoVertex' - 0 - vertex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitPointVertex",1451,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 1, 1, 4, 0, "U 'WCSimRecoVertex' - 0 - vertex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitExtendedVertex",1746,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 1, 1, 4, 0, "U 'WCSimRecoVertex' - 0 - vertex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CorrectExtendedVertex",2177,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 1, 1, 4, 0, "U 'WCSimRecoVertex' - 0 - vertex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FixSimplePosition",1766,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 3, 1, 4, 0, 
"d - 'Double_t' 0 - vx d - 'Double_t' 0 - vy "
"d - 'Double_t' 0 - vz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FixSimpleDirection",1842,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 6, 1, 4, 0, 
"d - 'Double_t' 0 - vx d - 'Double_t' 0 - vy "
"d - 'Double_t' 0 - vz d - 'Double_t' 0 - px "
"d - 'Double_t' 0 - py d - 'Double_t' 0 - pz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FixPointPosition",1670,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 3, 1, 4, 0, 
"d - 'Double_t' 0 - vx d - 'Double_t' 0 - vy "
"d - 'Double_t' 0 - vz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FixPointDirection",1746,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 6, 1, 4, 0, 
"d - 'Double_t' 0 - vx d - 'Double_t' 0 - vy "
"d - 'Double_t' 0 - vz d - 'Double_t' 0 - px "
"d - 'Double_t' 0 - py d - 'Double_t' 0 - pz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FixPointVertex",1455,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 6, 1, 4, 0, 
"d - 'Double_t' 0 - vx d - 'Double_t' 0 - vy "
"d - 'Double_t' 0 - vz d - 'Double_t' 0 - px "
"d - 'Double_t' 0 - py d - 'Double_t' 0 - pz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FixExtendedVertex",1750,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 6, 1, 4, 0, 
"d - 'Double_t' 0 - vx d - 'Double_t' 0 - vy "
"d - 'Double_t' 0 - vz d - 'Double_t' 0 - px "
"d - 'Double_t' 0 - py d - 'Double_t' 0 - pz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitPointPositionWithMinuit",2708,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 1, 1, 4, 0, "U 'WCSimRecoVertex' - 0 - vertex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitPointDirectionWithMinuit",2784,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 1, 1, 4, 0, "U 'WCSimRecoVertex' - 0 - vertex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitPointVertexWithMinuit",2493,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 1, 1, 4, 0, "U 'WCSimRecoVertex' - 0 - vertex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitExtendedVertexWithMinuit",2788,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 1, 1, 4, 0, "U 'WCSimRecoVertex' - 0 - vertex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PointResiduals",1462,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"d - 'Double_t' 0 - vx d - 'Double_t' 0 - vy "
"d - 'Double_t' 0 - vz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PointResiduals",1462,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 6, 1, 4, 0, 
"d - 'Double_t' 0 - vx d - 'Double_t' 0 - vy "
"d - 'Double_t' 0 - vz d - 'Double_t' 0 - px "
"d - 'Double_t' 0 - py d - 'Double_t' 0 - pz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ExtendedResiduals",1757,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 6, 1, 4, 0, 
"d - 'Double_t' 0 - vx d - 'Double_t' 0 - vy "
"d - 'Double_t' 0 - vz d - 'Double_t' 0 - px "
"d - 'Double_t' 0 - py d - 'Double_t' 0 - pz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PointPositionChi2",1701,G__WCSimAnalysisRootDict_736_0_71, 121, -1, -1, 0, 5, 1, 1, 0, 
"d - 'Double_t' 0 - vx d - 'Double_t' 0 - vy "
"d - 'Double_t' 0 - vz d - 'Double_t' 1 - vtime "
"d - 'Double_t' 1 - chi2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PointPositionChi2",1701,G__WCSimAnalysisRootDict_736_0_72, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 1 - vtime d - 'Double_t' 1 - chi2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PointDirectionChi2",1777,G__WCSimAnalysisRootDict_736_0_73, 121, -1, -1, 0, 8, 1, 1, 0, 
"d - 'Double_t' 0 - vx d - 'Double_t' 0 - vy "
"d - 'Double_t' 0 - vz d - 'Double_t' 0 - px "
"d - 'Double_t' 0 - py d - 'Double_t' 0 - pz "
"d - 'Double_t' 1 - vangle d - 'Double_t' 1 - chi2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PointDirectionChi2",1777,G__WCSimAnalysisRootDict_736_0_74, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 1 - vangle d - 'Double_t' 1 - chi2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PointVertexChi2",1486,G__WCSimAnalysisRootDict_736_0_75, 121, -1, -1, 0, 9, 1, 1, 0, 
"d - 'Double_t' 0 - vx d - 'Double_t' 0 - vy "
"d - 'Double_t' 0 - vz d - 'Double_t' 0 - px "
"d - 'Double_t' 0 - py d - 'Double_t' 0 - pz "
"d - 'Double_t' 1 - vangle d - 'Double_t' 1 - vtime "
"d - 'Double_t' 1 - chi2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PointVertexChi2",1486,G__WCSimAnalysisRootDict_736_0_76, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 1 - vangle d - 'Double_t' 1 - vtime "
"d - 'Double_t' 1 - chi2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ExtendedVertexChi2",1781,G__WCSimAnalysisRootDict_736_0_77, 121, -1, -1, 0, 9, 1, 1, 0, 
"d - 'Double_t' 0 - vx d - 'Double_t' 0 - vy "
"d - 'Double_t' 0 - vz d - 'Double_t' 0 - px "
"d - 'Double_t' 0 - py d - 'Double_t' 0 - pz "
"d - 'Double_t' 1 - vangle d - 'Double_t' 1 - vtime "
"d - 'Double_t' 1 - chi2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ExtendedVertexChi2",1781,G__WCSimAnalysisRootDict_736_0_78, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 1 - vangle d - 'Double_t' 1 - vtime "
"d - 'Double_t' 1 - chi2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PenaltyChi2",1059,G__WCSimAnalysisRootDict_736_0_79, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - vx d - 'Double_t' 0 - vy "
"d - 'Double_t' 0 - vz d - 'Double_t' 1 - chi2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FixPositionChi2",1474,G__WCSimAnalysisRootDict_736_0_80, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - vx d - 'Double_t' 0 - vy "
"d - 'Double_t' 0 - vz d - 'Double_t' 1 - chi2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FixDirectionChi2",1550,G__WCSimAnalysisRootDict_736_0_81, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 1 - chi2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitConePropertiesFoM",2007,G__WCSimAnalysisRootDict_736_0_82, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 1 - vangle d - 'Double_t' 1 - chi2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConePropertiesFoM",1716,G__WCSimAnalysisRootDict_736_0_83, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 1 - chi2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitPointConePropertiesLnL",2533,G__WCSimAnalysisRootDict_736_0_84, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 1 - vangle d - 'Double_t' 1 - chi2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitExtendedConePropertiesLnL",2828,G__WCSimAnalysisRootDict_736_0_85, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 1 - vangle d - 'Double_t' 1 - chi2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConePropertiesLnL",1720,G__WCSimAnalysisRootDict_736_0_86, 121, -1, -1, 0, 5, 1, 1, 0, 
"d - 'Double_t' 0 - vparam0 d - 'Double_t' 0 - vparam1 "
"d - 'Double_t' 0 - vparam2 d - 'Double_t' 1 - vangle "
"d - 'Double_t' 1 - chi2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindSimpleTimeProperties",2471,G__WCSimAnalysisRootDict_736_0_87, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 1 - vtime", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitTimePropertiesFoM",2017,G__WCSimAnalysisRootDict_736_0_88, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 1 - vtime d - 'Double_t' 1 - chi2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TimePropertiesFoM",1726,G__WCSimAnalysisRootDict_736_0_89, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - vtime d - 'Double_t' 1 - chi2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitPointTimePropertiesLnL",2543,G__WCSimAnalysisRootDict_736_0_90, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 1 - vtime d - 'Double_t' 1 - chi2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitExtendedTimePropertiesLnL",2838,G__WCSimAnalysisRootDict_736_0_91, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 1 - vtime d - 'Double_t' 1 - chi2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TimePropertiesLnL",1730,G__WCSimAnalysisRootDict_736_0_92, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - vtime d - 'Double_t' 0 - vparam "
"d - 'Double_t' 1 - chi2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIterations",1346,G__WCSimAnalysisRootDict_736_0_93, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("time_fit_itr",1279,G__WCSimAnalysisRootDict_736_0_94, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cone_fit_itr",1269,G__WCSimAnalysisRootDict_736_0_95, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("point_position_itr",1964,G__WCSimAnalysisRootDict_736_0_96, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("point_direction_itr",2040,G__WCSimAnalysisRootDict_736_0_97, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("point_vertex_itr",1749,G__WCSimAnalysisRootDict_736_0_98, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("extended_vertex_itr",2044,G__WCSimAnalysisRootDict_736_0_99, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("time_fit_reset_itr",1921,G__WCSimAnalysisRootDict_736_0_100, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cone_fit_reset_itr",1911,G__WCSimAnalysisRootDict_736_0_101, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("point_position_reset_itr",2606,G__WCSimAnalysisRootDict_736_0_102, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("point_direction_reset_itr",2682,G__WCSimAnalysisRootDict_736_0_103, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("point_vertex_reset_itr",2391,G__WCSimAnalysisRootDict_736_0_104, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("extended_vertex_reset_itr",2686,G__WCSimAnalysisRootDict_736_0_105, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("time_fit_iterations",2034,G__WCSimAnalysisRootDict_736_0_106, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cone_fit_iterations",2024,G__WCSimAnalysisRootDict_736_0_107, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("point_position_iterations",2719,G__WCSimAnalysisRootDict_736_0_108, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("point_direction_iterations",2795,G__WCSimAnalysisRootDict_736_0_109, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("point_vertex_iterations",2504,G__WCSimAnalysisRootDict_736_0_110, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("extended_vertex_iterations",2799,G__WCSimAnalysisRootDict_736_0_111, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__WCSimAnalysisRootDict_736_0_112, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WCSimVertexFinder",1689,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexFinder), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimAnalysisRootDict_736_0_115, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimVertexFinder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimAnalysisRootDict_736_0_116, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimVertexFinder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimAnalysisRootDict_736_0_117, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimVertexFinder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimAnalysisRootDict_736_0_118, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimVertexFinder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimAnalysisRootDict_736_0_122, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimAnalysisRootDict_736_0_123, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimVertexFinder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimAnalysisRootDict_736_0_124, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimVertexFinder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimAnalysisRootDict_736_0_125, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimVertexFinder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimAnalysisRootDict_736_0_126, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimVertexFinder::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimVertexFinder", 1689, G__WCSimAnalysisRootDict_736_0_127, (int) ('i'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexFinder), -1, 0, 1, 1, 1, 0, "u 'WCSimVertexFinder' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimAnalysisRootDict_736_0_128, (int) ('u'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexFinder), -1, 1, 1, 1, 1, 0, "u 'WCSimVertexFinder' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimVertexGeometry(void) {
   /* WCSimVertexGeometry */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexGeometry));
   G__memfunc_setup("Instance",821,G__WCSimAnalysisRootDict_741_0_1, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexGeometry), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (WCSimVertexGeometry* (*)())(&WCSimVertexGeometry::Instance) ), 0);
   G__memfunc_setup("LoadEvent",898,G__WCSimAnalysisRootDict_741_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'WCSimRecoEvent' - 0 - evt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcResiduals",1311,G__WCSimAnalysisRootDict_741_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'WCSimRecoEvent' - 0 - evt U 'WCSimRecoVertex' - 0 - vtx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcResiduals",1311,G__WCSimAnalysisRootDict_741_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'WCSimRecoVertex' - 0 - vtx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcResiduals",1311,G__WCSimAnalysisRootDict_741_0_5, 121, -1, -1, 0, 7, 1, 1, 0, 
"d - 'Double_t' 0 - vx d - 'Double_t' 0 - vy "
"d - 'Double_t' 0 - vz d - 'Double_t' 0 - vtxTime "
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcPointResiduals",1833,G__WCSimAnalysisRootDict_741_0_6, 121, -1, -1, 0, 7, 1, 1, 0, 
"d - 'Double_t' 0 - vx d - 'Double_t' 0 - vy "
"d - 'Double_t' 0 - vz d - 'Double_t' 0 - vtxTime "
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcExtendedResiduals",2128,G__WCSimAnalysisRootDict_741_0_7, 121, -1, -1, 0, 7, 1, 1, 0, 
"d - 'Double_t' 0 - vx d - 'Double_t' 0 - vy "
"d - 'Double_t' 0 - vz d - 'Double_t' 0 - vtxTime "
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcVertexSeeds",1509,G__WCSimAnalysisRootDict_741_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'WCSimRecoEvent' - 0 - evt i - 'Int_t' 0 '1' NSeeds", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcVertexSeeds",1509,G__WCSimAnalysisRootDict_741_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '1' NSeeds", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcSimpleVertex",1627,G__WCSimAnalysisRootDict_741_0_10, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 1, 1, 1, 0, "U 'WCSimRecoEvent' - 0 - evt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcSimpleVertex",1627,G__WCSimAnalysisRootDict_741_0_11, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcSimpleDirection",1918,G__WCSimAnalysisRootDict_741_0_12, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 2, 1, 1, 0, 
"U 'WCSimRecoEvent' - 0 - evt U 'WCSimRecoVertex' - 0 - vtx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcSimpleDirection",1918,G__WCSimAnalysisRootDict_741_0_13, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex), -1, 0, 1, 1, 1, 0, "U 'WCSimRecoVertex' - 0 - vtx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNDigits",978,G__WCSimAnalysisRootDict_741_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNFilterDigits",1592,G__WCSimAnalysisRootDict_741_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsFiltered",1003,G__WCSimAnalysisRootDict_741_0_16, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - idigit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDigitX",873,G__WCSimAnalysisRootDict_741_0_17, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - idigit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDigitY",874,G__WCSimAnalysisRootDict_741_0_18, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - idigit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDigitZ",875,G__WCSimAnalysisRootDict_741_0_19, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - idigit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDigitT",869,G__WCSimAnalysisRootDict_741_0_20, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - idigit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDigitQ",866,G__WCSimAnalysisRootDict_741_0_21, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - idigit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetConeAngle",1164,G__WCSimAnalysisRootDict_741_0_22, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - idigit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAngle",775,G__WCSimAnalysisRootDict_741_0_23, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - idigit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZenith",914,G__WCSimAnalysisRootDict_741_0_24, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - idigit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAzimuth",1026,G__WCSimAnalysisRootDict_741_0_25, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - idigit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSolidAngle",1282,G__WCSimAnalysisRootDict_741_0_26, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - idigit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDistPoint",1214,G__WCSimAnalysisRootDict_741_0_27, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - idigit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDistTrack",1193,G__WCSimAnalysisRootDict_741_0_28, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - idigit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDistPhoton",1324,G__WCSimAnalysisRootDict_741_0_29, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - idigit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDistScatter",1418,G__WCSimAnalysisRootDict_741_0_30, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - idigit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDeltaTime",1177,G__WCSimAnalysisRootDict_741_0_31, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - idigit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDeltaSigma",1275,G__WCSimAnalysisRootDict_741_0_32, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - idigit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDeltaAngle",1265,G__WCSimAnalysisRootDict_741_0_33, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - idigit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDeltaPoint",1300,G__WCSimAnalysisRootDict_741_0_34, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - idigit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDeltaTrack",1279,G__WCSimAnalysisRootDict_741_0_35, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - idigit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDeltaPhoton",1410,G__WCSimAnalysisRootDict_741_0_36, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - idigit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDeltaScatter",1504,G__WCSimAnalysisRootDict_741_0_37, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - idigit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPointPath",1207,G__WCSimAnalysisRootDict_741_0_38, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - idigit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetExtendedPath",1502,G__WCSimAnalysisRootDict_741_0_39, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - idigit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPointResidual",1635,G__WCSimAnalysisRootDict_741_0_40, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - idigit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetExtendedResidual",1930,G__WCSimAnalysisRootDict_741_0_41, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - idigit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDelta",778,G__WCSimAnalysisRootDict_741_0_42, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - idigit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDeltaCorrection",1826,G__WCSimAnalysisRootDict_741_0_43, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - idigit d - 'Double_t' 0 - length", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNSeeds",866,G__WCSimAnalysisRootDict_741_0_44, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSeedVtxX",1083,G__WCSimAnalysisRootDict_741_0_45, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - ivtx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSeedVtxY",1084,G__WCSimAnalysisRootDict_741_0_46, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - ivtx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSeedVtxZ",1085,G__WCSimAnalysisRootDict_741_0_47, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - ivtx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSeedVtxTime",1394,G__WCSimAnalysisRootDict_741_0_48, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - ivtx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WCSimVertexGeometry",1933,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexGeometry), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcSimpleVertex",1627,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 4, 0, 
"d - 'Double_t' 1 - vtxX d - 'Double_t' 1 - vtxY "
"d - 'Double_t' 1 - vtxZ d - 'Double_t' 1 - vtxTime", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ChooseNextQuadruple",1971,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 16, 1, 4, 0, 
"d - 'Double_t' 1 - x0 d - 'Double_t' 1 - y0 "
"d - 'Double_t' 1 - z0 d - 'Double_t' 1 - t0 "
"d - 'Double_t' 1 - x1 d - 'Double_t' 1 - y1 "
"d - 'Double_t' 1 - z1 d - 'Double_t' 1 - t1 "
"d - 'Double_t' 1 - x2 d - 'Double_t' 1 - y2 "
"d - 'Double_t' 1 - z2 d - 'Double_t' 1 - t2 "
"d - 'Double_t' 1 - x3 d - 'Double_t' 1 - y3 "
"d - 'Double_t' 1 - z3 d - 'Double_t' 1 - t3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ChooseNextDigit",1521,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 4, 0, 
"d - 'Double_t' 1 - x d - 'Double_t' 1 - y "
"d - 'Double_t' 1 - z d - 'Double_t' 1 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimAnalysisRootDict_741_0_53, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimVertexGeometry::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimAnalysisRootDict_741_0_54, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimVertexGeometry::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimAnalysisRootDict_741_0_55, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimVertexGeometry::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimAnalysisRootDict_741_0_56, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimVertexGeometry::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimAnalysisRootDict_741_0_60, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimAnalysisRootDict_741_0_61, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimVertexGeometry::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimAnalysisRootDict_741_0_62, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimVertexGeometry::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimAnalysisRootDict_741_0_63, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimVertexGeometry::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimAnalysisRootDict_741_0_64, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimVertexGeometry::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimVertexGeometry", 1933, G__WCSimAnalysisRootDict_741_0_65, (int) ('i'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexGeometry), -1, 0, 1, 1, 1, 0, "u 'WCSimVertexGeometry' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimAnalysisRootDict_741_0_66, (int) ('u'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexGeometry), -1, 1, 1, 1, 1, 0, "u 'WCSimVertexGeometry' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimVertexViewer(void) {
   /* WCSimVertexViewer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexViewer));
   G__memfunc_setup("WCSimVertexViewer",1715,G__WCSimAnalysisRootDict_743_0_1, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexViewer), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawDisplay",1124,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'WCSimRecoEvent' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawCleanDisplay",1607,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'WCSimRecoEvent' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawTrueEvent",1328,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'WCSimTrueEvent' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawRecoEvent",1305,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'WCSimRecoEvent' - 0 - recoevent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawNewRecoEvent",1603,G__WCSimAnalysisRootDict_743_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'WCSimRecoEvent' - 0 - recoevent U 'WCSimRecoVertex' - 0 '0' vertex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetDisplay",1241,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrintDisplay",1251,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildDisplay",1222,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawNewDisplay",1422,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintDisplayGIF",1465,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintDisplayEPS",1483,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("QPEtoCOL",679,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "d - 'Double_t' 0 - Q", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("QPEtoSIZE",772,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 4, 0, "d - 'Double_t' 0 - Q", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimAnalysisRootDict_743_0_17, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimVertexViewer::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimAnalysisRootDict_743_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimVertexViewer::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimAnalysisRootDict_743_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimVertexViewer::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimAnalysisRootDict_743_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimVertexViewer::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimAnalysisRootDict_743_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimAnalysisRootDict_743_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimVertexViewer::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimAnalysisRootDict_743_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimVertexViewer::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimAnalysisRootDict_743_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimVertexViewer::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimAnalysisRootDict_743_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimVertexViewer::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimVertexViewer", 1715, G__WCSimAnalysisRootDict_743_0_29, (int) ('i'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexViewer), -1, 0, 1, 1, 1, 0, "u 'WCSimVertexViewer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimVertexViewer", 1841, G__WCSimAnalysisRootDict_743_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimRingFinder(void) {
   /* WCSimRingFinder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRingFinder));
   G__memfunc_setup("Instance",821,G__WCSimAnalysisRootDict_744_0_1, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRingFinder), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (WCSimRingFinder* (*)())(&WCSimRingFinder::Instance) ), 0);
   G__memfunc_setup("UseRecoVertex",1332,G__WCSimAnalysisRootDict_744_0_2, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimRingFinder::UseRecoVertex) ), 0);
   G__memfunc_setup("HoughX",595,G__WCSimAnalysisRootDict_744_0_3, 121, -1, -1, 0, 1, 3, 1, 0, "i - 'Int_t' 0 - x", (char*)NULL, (void*) G__func2void( (void (*)(Int_t))(&WCSimRingFinder::HoughX) ), 0);
   G__memfunc_setup("HoughY",596,G__WCSimAnalysisRootDict_744_0_4, 121, -1, -1, 0, 1, 3, 1, 0, "i - 'Int_t' 0 - y", (char*)NULL, (void*) G__func2void( (void (*)(Int_t))(&WCSimRingFinder::HoughY) ), 0);
   G__memfunc_setup("HoughPoints",1144,G__WCSimAnalysisRootDict_744_0_5, 121, -1, -1, 0, 1, 3, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) G__func2void( (void (*)(Int_t))(&WCSimRingFinder::HoughPoints) ), 0);
   G__memfunc_setup("ConeAngleBins",1272,G__WCSimAnalysisRootDict_744_0_6, 121, -1, -1, 0, 1, 3, 1, 0, "i - 'Int_t' 0 - bins", (char*)NULL, (void*) G__func2void( (void (*)(Int_t))(&WCSimRingFinder::ConeAngleBins) ), 0);
   G__memfunc_setup("ConeAngleMin",1168,G__WCSimAnalysisRootDict_744_0_7, 121, -1, -1, 0, 1, 3, 1, 0, "d - 'Double_t' 0 - min", (char*)NULL, (void*) G__func2void( (void (*)(Double_t))(&WCSimRingFinder::ConeAngleMin) ), 0);
   G__memfunc_setup("ConeAngleMax",1170,G__WCSimAnalysisRootDict_744_0_8, 121, -1, -1, 0, 1, 3, 1, 0, "d - 'Double_t' 0 - max", (char*)NULL, (void*) G__func2void( (void (*)(Double_t))(&WCSimRingFinder::ConeAngleMax) ), 0);
   G__memfunc_setup("PrintParameters",1569,G__WCSimAnalysisRootDict_744_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimRingFinder::PrintParameters) ), 0);
   G__memfunc_setup("RunPrintParameters",1878,G__WCSimAnalysisRootDict_744_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHoughX",895,G__WCSimAnalysisRootDict_744_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHoughY",896,G__WCSimAnalysisRootDict_744_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHoughPoints",1444,G__WCSimAnalysisRootDict_744_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetConeAngleBins",1572,G__WCSimAnalysisRootDict_744_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - bins", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetConeAngleMin",1468,G__WCSimAnalysisRootDict_744_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - min", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetConeAngleMax",1470,G__WCSimAnalysisRootDict_744_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUsingRecoVertex",1849,G__WCSimAnalysisRootDict_744_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UsingRecoVertex",1549,G__WCSimAnalysisRootDict_744_0_18, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUsingTSpectrum2",1803,G__WCSimAnalysisRootDict_744_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UsingTSpectrum2",1503,G__WCSimAnalysisRootDict_744_0_20, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Run",309,G__WCSimAnalysisRootDict_744_0_21, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoRingmUcOallocatorlEWCSimRecoRingmUgRsPgR), G__defined_typename("vector<WCSimRecoRing*>"), 0, 1, 1, 1, 0, "U 'WCSimRecoVertex' - 0 - vtx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Run",309,G__WCSimAnalysisRootDict_744_0_22, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoRingmUcOallocatorlEWCSimRecoRingmUgRsPgR), G__defined_typename("vector<WCSimRecoRing*>"), 0, 2, 1, 1, 0, 
"U 'WCSimRecoEvent' - 0 - evt U 'WCSimRecoVertex' - 0 - vtx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Run",309,G__WCSimAnalysisRootDict_744_0_23, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoRingmUcOallocatorlEWCSimRecoRingmUgRsPgR), G__defined_typename("vector<WCSimRecoRing*>"), 0, 2, 1, 1, 0, 
"U 'vector<WCSimRecoDigit*,allocator<WCSimRecoDigit*> >' 'vector<WCSimRecoDigit*>' 0 - digitlist U 'WCSimRecoVertex' - 0 - vtx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HoughTransform",1463,G__WCSimAnalysisRootDict_744_0_24, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimHoughTransform), -1, 0, 3, 1, 1, 0, 
"U 'WCSimRecoEvent' - 0 - evt U 'WCSimRecoVertex' - 0 - vtx "
"d - 'Double_t' 0 - angle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HoughTransform",1463,G__WCSimAnalysisRootDict_744_0_25, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimHoughTransform), -1, 0, 3, 1, 1, 0, 
"U 'vector<WCSimRecoDigit*,allocator<WCSimRecoDigit*> >' 'vector<WCSimRecoDigit*>' 0 - digitlist U 'WCSimRecoVertex' - 0 - vtx "
"d - 'Double_t' 0 - angle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HoughTransformArray",1974,G__WCSimAnalysisRootDict_744_0_26, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimHoughTransformArray), -1, 0, 2, 1, 1, 0, 
"U 'WCSimRecoEvent' - 0 - evt U 'WCSimRecoVertex' - 0 - vtx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HoughTransformArray",1974,G__WCSimAnalysisRootDict_744_0_27, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimHoughTransformArray), -1, 0, 2, 1, 1, 0, 
"U 'vector<WCSimRecoDigit*,allocator<WCSimRecoDigit*> >' 'vector<WCSimRecoDigit*>' 0 - digitlist U 'WCSimRecoVertex' - 0 - vtx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WCSimRingFinder",1451,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRingFinder), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimAnalysisRootDict_744_0_30, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimRingFinder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimAnalysisRootDict_744_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRingFinder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimAnalysisRootDict_744_0_32, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimRingFinder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimAnalysisRootDict_744_0_33, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimRingFinder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimAnalysisRootDict_744_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimAnalysisRootDict_744_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRingFinder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimAnalysisRootDict_744_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRingFinder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimAnalysisRootDict_744_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRingFinder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimAnalysisRootDict_744_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRingFinder::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimRingFinder", 1451, G__WCSimAnalysisRootDict_744_0_42, (int) ('i'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRingFinder), -1, 0, 1, 1, 1, 0, "u 'WCSimRingFinder' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimAnalysisRootDict_744_0_43, (int) ('u'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRingFinder), -1, 1, 1, 1, 1, 0, "u 'WCSimRingFinder' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimRingViewer(void) {
   /* WCSimRingViewer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRingViewer));
   G__memfunc_setup("WCSimRingViewer",1477,G__WCSimAnalysisRootDict_745_0_1, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRingViewer), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Display",726,G__WCSimAnalysisRootDict_745_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'WCSimRecoEvent' - 0 - evt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimAnalysisRootDict_745_0_4, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimRingViewer::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimAnalysisRootDict_745_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRingViewer::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimAnalysisRootDict_745_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimRingViewer::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimAnalysisRootDict_745_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimRingViewer::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimAnalysisRootDict_745_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimAnalysisRootDict_745_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRingViewer::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimAnalysisRootDict_745_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRingViewer::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimAnalysisRootDict_745_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRingViewer::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimAnalysisRootDict_745_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRingViewer::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimRingViewer", 1477, G__WCSimAnalysisRootDict_745_0_16, (int) ('i'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRingViewer), -1, 0, 1, 1, 1, 0, "u 'WCSimRingViewer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimRingViewer", 1603, G__WCSimAnalysisRootDict_745_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimAnalysisRootDict_745_0_18, (int) ('u'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRingViewer), -1, 1, 1, 1, 1, 0, "u 'WCSimRingViewer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimNtuple(void) {
   /* WCSimNtuple */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimNtuple));
   G__memfunc_setup("WCSimNtuple",1083,G__WCSimAnalysisRootDict_746_0_1, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimNtuple), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill",391,G__WCSimAnalysisRootDict_746_0_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'WCSimTrueEvent' - 0 - trueEvent U 'WCSimRecoEvent' - 0 - recoEvent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("OpenFile",786,G__WCSimAnalysisRootDict_746_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - filename", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CloseFile",886,G__WCSimAnalysisRootDict_746_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,G__WCSimAnalysisRootDict_746_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFileName",1069,G__WCSimAnalysisRootDict_746_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimAnalysisRootDict_746_0_7, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimNtuple::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimAnalysisRootDict_746_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimNtuple::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimAnalysisRootDict_746_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimNtuple::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimAnalysisRootDict_746_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimNtuple::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimAnalysisRootDict_746_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimAnalysisRootDict_746_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimNtuple::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimAnalysisRootDict_746_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimNtuple::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimAnalysisRootDict_746_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimNtuple::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimAnalysisRootDict_746_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimNtuple::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimNtuple", 1083, G__WCSimAnalysisRootDict_746_0_19, (int) ('i'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimNtuple), -1, 0, 1, 1, 1, 0, "u 'WCSimNtuple' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimNtuple", 1209, G__WCSimAnalysisRootDict_746_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimAnalysisRootDict_746_0_21, (int) ('u'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimNtuple), -1, 1, 1, 1, 1, 0, "u 'WCSimNtuple' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimNtupleFactory(void) {
   /* WCSimNtupleFactory */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimNtupleFactory));
   G__memfunc_setup("Instance",821,G__WCSimAnalysisRootDict_747_0_1, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimNtupleFactory), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (WCSimNtupleFactory* (*)())(&WCSimNtupleFactory::Instance) ), 0);
   G__memfunc_setup("MakeNtuple",1014,G__WCSimAnalysisRootDict_747_0_2, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimNtuple), -1, 0, 1, 1, 1, 0, "C - - 10 '\"default\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WCSimNtupleFactory",1811,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimNtupleFactory), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimAnalysisRootDict_747_0_4, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimNtupleFactory::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimAnalysisRootDict_747_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimNtupleFactory::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimAnalysisRootDict_747_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimNtupleFactory::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimAnalysisRootDict_747_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimNtupleFactory::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimAnalysisRootDict_747_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimAnalysisRootDict_747_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimNtupleFactory::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimAnalysisRootDict_747_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimNtupleFactory::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimAnalysisRootDict_747_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimNtupleFactory::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimAnalysisRootDict_747_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimNtupleFactory::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimNtupleFactory", 1811, G__WCSimAnalysisRootDict_747_0_16, (int) ('i'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimNtupleFactory), -1, 0, 1, 1, 1, 0, "u 'WCSimNtupleFactory' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimAnalysisRootDict_747_0_17, (int) ('u'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimNtupleFactory), -1, 1, 1, 1, 1, 0, "u 'WCSimNtupleFactory' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimRecoNtuple(void) {
   /* WCSimRecoNtuple */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoNtuple));
   G__memfunc_setup("WCSimRecoNtuple",1476,G__WCSimAnalysisRootDict_748_0_1, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoNtuple), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill",391,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"U 'WCSimTrueEvent' - 0 - trueEvent U 'WCSimRecoEvent' - 0 - recoEvent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CloseFile",886,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ResetVariables",1436,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteVariables",1444,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"U 'WCSimTrueEvent' - 0 - trueEvent U 'WCSimRecoEvent' - 0 - recoEvent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteToFile",1102,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimAnalysisRootDict_748_0_8, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimRecoNtuple::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimAnalysisRootDict_748_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRecoNtuple::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimAnalysisRootDict_748_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimRecoNtuple::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimAnalysisRootDict_748_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimRecoNtuple::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimAnalysisRootDict_748_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimAnalysisRootDict_748_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRecoNtuple::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimAnalysisRootDict_748_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRecoNtuple::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimAnalysisRootDict_748_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRecoNtuple::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimAnalysisRootDict_748_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRecoNtuple::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimRecoNtuple", 1476, G__WCSimAnalysisRootDict_748_0_20, (int) ('i'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoNtuple), -1, 0, 1, 1, 1, 0, "u 'WCSimRecoNtuple' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimRecoNtuple", 1602, G__WCSimAnalysisRootDict_748_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimAnalysisRootDict_748_0_22, (int) ('u'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimRecoNtuple), -1, 1, 1, 1, 1, 0, "u 'WCSimRecoNtuple' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimVertexNtuple(void) {
   /* WCSimVertexNtuple */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexNtuple));
   G__memfunc_setup("WCSimVertexNtuple",1721,G__WCSimAnalysisRootDict_749_0_1, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexNtuple), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill",391,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"U 'WCSimTrueEvent' - 0 - trueEvent U 'WCSimRecoEvent' - 0 - recoEvent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CloseFile",886,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ResetVariables",1436,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteVariables",1444,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"U 'WCSimTrueEvent' - 0 - trueEvent U 'WCSimRecoEvent' - 0 - recoEvent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteToFile",1102,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimAnalysisRootDict_749_0_8, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimVertexNtuple::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimAnalysisRootDict_749_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimVertexNtuple::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimAnalysisRootDict_749_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimVertexNtuple::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimAnalysisRootDict_749_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimVertexNtuple::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimAnalysisRootDict_749_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimAnalysisRootDict_749_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimVertexNtuple::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimAnalysisRootDict_749_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimVertexNtuple::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimAnalysisRootDict_749_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimVertexNtuple::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimAnalysisRootDict_749_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimVertexNtuple::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimVertexNtuple", 1721, G__WCSimAnalysisRootDict_749_0_20, (int) ('i'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexNtuple), -1, 0, 1, 1, 1, 0, "u 'WCSimVertexNtuple' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimVertexNtuple", 1847, G__WCSimAnalysisRootDict_749_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimAnalysisRootDict_749_0_22, (int) ('u'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexNtuple), -1, 1, 1, 1, 1, 0, "u 'WCSimVertexNtuple' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimVertexSeedNtuple(void) {
   /* WCSimVertexSeedNtuple */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexSeedNtuple));
   G__memfunc_setup("WCSimVertexSeedNtuple",2106,G__WCSimAnalysisRootDict_750_0_1, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexSeedNtuple), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill",391,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"U 'WCSimTrueEvent' - 0 - trueEvent U 'WCSimRecoEvent' - 0 - recoEvent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CloseFile",886,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ResetVariables",1436,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteVariables",1444,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"U 'WCSimTrueEvent' - 0 - trueEvent U 'WCSimRecoEvent' - 0 - recoEvent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteToFile",1102,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimAnalysisRootDict_750_0_8, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimVertexSeedNtuple::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimAnalysisRootDict_750_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimVertexSeedNtuple::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimAnalysisRootDict_750_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimVertexSeedNtuple::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimAnalysisRootDict_750_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimVertexSeedNtuple::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimAnalysisRootDict_750_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimAnalysisRootDict_750_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimVertexSeedNtuple::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimAnalysisRootDict_750_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimVertexSeedNtuple::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimAnalysisRootDict_750_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimVertexSeedNtuple::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimAnalysisRootDict_750_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimVertexSeedNtuple::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimVertexSeedNtuple", 2106, G__WCSimAnalysisRootDict_750_0_20, (int) ('i'), 
G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexSeedNtuple), -1, 0, 1, 1, 1, 0, "u 'WCSimVertexSeedNtuple' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimVertexSeedNtuple", 2232, G__WCSimAnalysisRootDict_750_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimAnalysisRootDict_750_0_22, (int) ('u'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimVertexSeedNtuple), -1, 1, 1, 1, 1, 0, "u 'WCSimVertexSeedNtuple' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimNtupleWriter(void) {
   /* WCSimNtupleWriter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimNtupleWriter));
   G__memfunc_setup("WCSimNtupleWriter",1720,G__WCSimAnalysisRootDict_751_0_1, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimNtupleWriter), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__WCSimAnalysisRootDict_751_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UseNtuple",933,G__WCSimAnalysisRootDict_751_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - ntuple", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFileName",1069,G__WCSimAnalysisRootDict_751_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Run",309,G__WCSimAnalysisRootDict_751_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '-1' entries", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Run",309,G__WCSimAnalysisRootDict_751_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - i1 i - 'Int_t' 0 - i2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildNtuple",1128,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimAnalysisRootDict_751_0_8, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimNtupleWriter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimAnalysisRootDict_751_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimNtupleWriter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimAnalysisRootDict_751_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimNtupleWriter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimAnalysisRootDict_751_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimNtupleWriter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimAnalysisRootDict_751_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimAnalysisRootDict_751_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimNtupleWriter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimAnalysisRootDict_751_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimNtupleWriter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimAnalysisRootDict_751_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimNtupleWriter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimAnalysisRootDict_751_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimNtupleWriter::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimNtupleWriter", 1720, G__WCSimAnalysisRootDict_751_0_20, (int) ('i'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimNtupleWriter), -1, 0, 1, 1, 1, 0, "u 'WCSimNtupleWriter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimNtupleWriter", 1846, G__WCSimAnalysisRootDict_751_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimAnalysisRootDict_751_0_22, (int) ('u'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimNtupleWriter), -1, 1, 1, 1, 1, 0, "u 'WCSimNtupleWriter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimMsg(void) {
   /* WCSimMsg */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimMsg));
   G__memfunc_setup("Instance",821,G__WCSimAnalysisRootDict_752_0_1, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimMsg), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (WCSimMsg* (*)())(&WCSimMsg::Instance) ), 0);
   G__memfunc_setup("SetLevel",804,G__WCSimAnalysisRootDict_752_0_2, 121, -1, -1, 0, 1, 3, 1, 0, "u 'WCSimMsg::EMsgLevel' 'WCSimMsg::MsgLevel_t' 0 - minLevel", (char*)NULL, (void*) G__func2void( (void (*)(WCSimMsg::MsgLevel_t))(&WCSimMsg::SetLevel) ), 0);
   G__memfunc_setup("SetMsgLevel",1099,G__WCSimAnalysisRootDict_752_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'WCSimMsg::EMsgLevel' 'WCSimMsg::MsgLevel_t' 0 - minLevel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckMsgLevel",1277,G__WCSimAnalysisRootDict_752_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'WCSimMsg::EMsgLevel' 'WCSimMsg::MsgLevel_t' 0 - minLevel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WCSimMsg",746,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimMsg), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimAnalysisRootDict_752_0_6, 85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimMsg::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimAnalysisRootDict_752_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimMsg::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimAnalysisRootDict_752_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimMsg::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimAnalysisRootDict_752_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimMsg::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimAnalysisRootDict_752_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimAnalysisRootDict_752_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimMsg::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimAnalysisRootDict_752_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimMsg::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimAnalysisRootDict_752_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimMsg::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimAnalysisRootDict_752_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimMsg::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimMsg", 746, G__WCSimAnalysisRootDict_752_0_18, (int) ('i'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimMsg), -1, 0, 1, 1, 1, 0, "u 'WCSimMsg' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimAnalysisRootDict_752_0_19, (int) ('u'), G__get_linked_tagnum(&G__WCSimAnalysisRootDictLN_WCSimMsg), -1, 1, 1, 1, 1, 0, "u 'WCSimMsg' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncWCSimAnalysisRootDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalWCSimAnalysisRootDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcWCSimAnalysisRootDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__WCSimAnalysisRootDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR = { "vector<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimRecoDigit = { "WCSimRecoDigit" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimRootCherenkovDigiHit = { "WCSimRootCherenkovDigiHit" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimRootTrigger = { "WCSimRootTrigger" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimRootEvent = { "WCSimRootEvent" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimLikelihoodDigit = { "WCSimLikelihoodDigit" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimLikelihoodDigitArray = { "WCSimLikelihoodDigitArray" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimLikelihoodTrack = { "WCSimLikelihoodTrack" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimLikelihoodTrackcLcLTrackType = { "WCSimLikelihoodTrack::TrackType" , 101 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimRecoVertex = { "WCSimRecoVertex" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimRecoRing = { "WCSimRecoRing" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimRecoEvent = { "WCSimRecoEvent" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoDigitmUcOallocatorlEWCSimRecoDigitmUgRsPgR = { "vector<WCSimRecoDigit*,allocator<WCSimRecoDigit*> >" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEWCSimRecoDigitmUcOallocatorlEWCSimRecoDigitmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<WCSimRecoDigit*,allocator<WCSimRecoDigit*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoRingmUcOallocatorlEWCSimRecoRingmUgRsPgR = { "vector<WCSimRecoRing*,allocator<WCSimRecoRing*> >" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEWCSimRecoRingmUcOallocatorlEWCSimRecoRingmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<WCSimRecoRing*,allocator<WCSimRecoRing*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimTimeLikelihood = { "WCSimTimeLikelihood" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimLikelihoodFitter = { "WCSimLikelihoodFitter" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimRootGeom = { "WCSimRootGeom" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimLikelihoodTuner = { "WCSimLikelihoodTuner" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimChargeLikelihood = { "WCSimChargeLikelihood" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_TBox = { "TBox" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_TLegend = { "TLegend" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_TButton = { "TButton" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_TChain = { "TChain" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_TStyle = { "TStyle" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimDisplay = { "WCSimDisplay" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimReco = { "WCSimReco" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimTrueEvent = { "WCSimTrueEvent" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimDisplayViewer = { "WCSimDisplayViewer" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_vectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgR = { "vector<const char*,allocator<const char*> >" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<const char*,allocator<const char*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_vectorlEWCSimDisplaymUcOallocatorlEWCSimDisplaymUgRsPgR = { "vector<WCSimDisplay*,allocator<WCSimDisplay*> >" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEWCSimDisplaymUcOallocatorlEWCSimDisplaymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<WCSimDisplay*,allocator<WCSimDisplay*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimDisplayFactory = { "WCSimDisplayFactory" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimTrueTrack = { "WCSimTrueTrack" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_vectorlEWCSimTrueTrackmUcOallocatorlEWCSimTrueTrackmUgRsPgR = { "vector<WCSimTrueTrack*,allocator<WCSimTrueTrack*> >" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEWCSimTrueTrackmUcOallocatorlEWCSimTrueTrackmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<WCSimTrueTrack*,allocator<WCSimTrueTrack*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_TLatex = { "TLatex" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_TH2D = { "TH2D" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_TLine = { "TLine" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_TEllipse = { "TEllipse" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_TMarker = { "TMarker" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimDisplayAB = { "WCSimDisplayAB" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_vectorlETMarkermUcOallocatorlETMarkermUgRsPgR = { "vector<TMarker*,allocator<TMarker*> >" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlETMarkermUcOallocatorlETMarkermUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TMarker*,allocator<TMarker*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_vectorlETPolyMarkermUcOallocatorlETPolyMarkermUgRsPgR = { "vector<TPolyMarker*,allocator<TPolyMarker*> >" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlETPolyMarkermUcOallocatorlETPolyMarkermUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TPolyMarker*,allocator<TPolyMarker*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_vectorlETLinemUcOallocatorlETLinemUgRsPgR = { "vector<TLine*,allocator<TLine*> >" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlETLinemUcOallocatorlETLinemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TLine*,allocator<TLine*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimEveDisplay = { "WCSimEveDisplay" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimEventWriter = { "WCSimEventWriter" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimGeometry = { "WCSimGeometry" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimGeometrycLcLEGeoConfiguration = { "WCSimGeometry::EGeoConfiguration" , 101 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimGeometrycLcLEGeoType = { "WCSimGeometry::EGeoType" , 101 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimGeometrycLcLEGeoRegion = { "WCSimGeometry::EGeoRegion" , 101 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimInterface = { "WCSimInterface" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimParameters = { "WCSimParameters" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimRecoObjectTable = { "WCSimRecoObjectTable" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimRecoFactory = { "WCSimRecoFactory" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimRecoVertexcLcLEFitStatus = { "WCSimRecoVertex::EFitStatus" , 101 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimRecoAB = { "WCSimRecoAB" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimRecoCluster = { "WCSimRecoCluster" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimRecoClusterDigit = { "WCSimRecoClusterDigit" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoClusterDigitmUcOallocatorlEWCSimRecoClusterDigitmUgRsPgR = { "vector<WCSimRecoClusterDigit*,allocator<WCSimRecoClusterDigit*> >" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEWCSimRecoClusterDigitmUcOallocatorlEWCSimRecoClusterDigitmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<WCSimRecoClusterDigit*,allocator<WCSimRecoClusterDigit*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimHoughTransform = { "WCSimHoughTransform" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimHoughTransformArray = { "WCSimHoughTransformArray" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR = { "vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_vectorlEWCSimHoughTransformmUcOallocatorlEWCSimHoughTransformmUgRsPgR = { "vector<WCSimHoughTransform*,allocator<WCSimHoughTransform*> >" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEWCSimHoughTransformmUcOallocatorlEWCSimHoughTransformmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<WCSimHoughTransform*,allocator<WCSimHoughTransform*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimDataCleaner = { "WCSimDataCleaner" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimDataCleanercLcLEFilterConfig = { "WCSimDataCleaner::EFilterConfig" , 101 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoClustermUcOallocatorlEWCSimRecoClustermUgRsPgR = { "vector<WCSimRecoCluster*,allocator<WCSimRecoCluster*> >" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEWCSimRecoClustermUcOallocatorlEWCSimRecoClustermUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<WCSimRecoCluster*,allocator<WCSimRecoCluster*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_TMinuit = { "TMinuit" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimVertexFinder = { "WCSimVertexFinder" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoVertexmUcOallocatorlEWCSimRecoVertexmUgRsPgR = { "vector<WCSimRecoVertex*,allocator<WCSimRecoVertex*> >" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEWCSimRecoVertexmUcOallocatorlEWCSimRecoVertexmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<WCSimRecoVertex*,allocator<WCSimRecoVertex*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimVertexGeometry = { "WCSimVertexGeometry" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_TF1 = { "TF1" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimVertexViewer = { "WCSimVertexViewer" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimRingFinder = { "WCSimRingFinder" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimRingViewer = { "WCSimRingViewer" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimNtuple = { "WCSimNtuple" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimNtupleFactory = { "WCSimNtupleFactory" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimRecoNtuple = { "WCSimRecoNtuple" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimVertexNtuple = { "WCSimVertexNtuple" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimVertexSeedNtuple = { "WCSimVertexSeedNtuple" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimNtupleWriter = { "WCSimNtupleWriter" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimMsg = { "WCSimMsg" , 99 , -1 };
G__linked_taginfo G__WCSimAnalysisRootDictLN_WCSimMsgcLcLEMsgLevel = { "WCSimMsg::EMsgLevel" , 101 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableWCSimAnalysisRootDict() {
  G__WCSimAnalysisRootDictLN_TClass.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_TBuffer.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_TMemberInspector.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_TObject.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_TString.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_string.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_TObjArray.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_TClonesArray.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimRecoDigit.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimRootCherenkovDigiHit.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimRootTrigger.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimRootEvent.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimLikelihoodDigit.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimLikelihoodDigitArray.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_TVector3.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimLikelihoodTrack.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimLikelihoodTrackcLcLTrackType.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimRecoVertex.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimRecoRing.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimRecoEvent.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoDigitmUcOallocatorlEWCSimRecoDigitmUgRsPgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEWCSimRecoDigitmUcOallocatorlEWCSimRecoDigitmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoRingmUcOallocatorlEWCSimRecoRingmUgRsPgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEWCSimRecoRingmUcOallocatorlEWCSimRecoRingmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimTimeLikelihood.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_TFile.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimLikelihoodFitter.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimRootGeom.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimLikelihoodTuner.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimChargeLikelihood.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_TCanvas.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_TBox.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_TLegend.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_TButton.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_TTree.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_TChain.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_TStyle.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimDisplay.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimReco.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimTrueEvent.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimDisplayViewer.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_vectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_vectorlEWCSimDisplaymUcOallocatorlEWCSimDisplaymUgRsPgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEWCSimDisplaymUcOallocatorlEWCSimDisplaymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimDisplayFactory.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimTrueTrack.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_vectorlEWCSimTrueTrackmUcOallocatorlEWCSimTrueTrackmUgRsPgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEWCSimTrueTrackmUcOallocatorlEWCSimTrueTrackmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_TLatex.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_TH1D.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_TH2D.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_TLine.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_TEllipse.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_TMarker.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimDisplayAB.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_vectorlETMarkermUcOallocatorlETMarkermUgRsPgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlETMarkermUcOallocatorlETMarkermUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_vectorlETPolyMarkermUcOallocatorlETPolyMarkermUgRsPgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlETPolyMarkermUcOallocatorlETPolyMarkermUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_vectorlETLinemUcOallocatorlETLinemUgRsPgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlETLinemUcOallocatorlETLinemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimEveDisplay.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimEventWriter.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimGeometry.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimGeometrycLcLEGeoConfiguration.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimGeometrycLcLEGeoType.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimGeometrycLcLEGeoRegion.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimInterface.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimParameters.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimRecoObjectTable.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimRecoFactory.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimRecoVertexcLcLEFitStatus.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimRecoAB.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimRecoCluster.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimRecoClusterDigit.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoClusterDigitmUcOallocatorlEWCSimRecoClusterDigitmUgRsPgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEWCSimRecoClusterDigitmUcOallocatorlEWCSimRecoClusterDigitmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimHoughTransform.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimHoughTransformArray.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_vectorlEWCSimHoughTransformmUcOallocatorlEWCSimHoughTransformmUgRsPgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEWCSimHoughTransformmUcOallocatorlEWCSimHoughTransformmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimDataCleaner.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimDataCleanercLcLEFilterConfig.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoClustermUcOallocatorlEWCSimRecoClustermUgRsPgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEWCSimRecoClustermUcOallocatorlEWCSimRecoClustermUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_TMinuit.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimVertexFinder.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoVertexmUcOallocatorlEWCSimRecoVertexmUgRsPgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEWCSimRecoVertexmUcOallocatorlEWCSimRecoVertexmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimVertexGeometry.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_TF1.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimVertexViewer.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimRingFinder.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimRingViewer.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimNtuple.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimNtupleFactory.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimRecoNtuple.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimVertexNtuple.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimVertexSeedNtuple.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimNtupleWriter.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimMsg.tagnum = -1 ;
  G__WCSimAnalysisRootDictLN_WCSimMsgcLcLEMsgLevel.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableWCSimAnalysisRootDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_TString);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_string);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimRecoDigit),sizeof(WCSimRecoDigit),-1,324608,(char*)NULL,G__setup_memvarWCSimRecoDigit,G__setup_memfuncWCSimRecoDigit);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimRootCherenkovDigiHit);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimRootTrigger);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimRootEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodDigit),sizeof(WCSimLikelihoodDigit),-1,324608,(char*)NULL,G__setup_memvarWCSimLikelihoodDigit,G__setup_memfuncWCSimLikelihoodDigit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodDigitArray),sizeof(WCSimLikelihoodDigitArray),-1,324864,(char*)NULL,G__setup_memvarWCSimLikelihoodDigitArray,G__setup_memfuncWCSimLikelihoodDigitArray);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_TVector3);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodTrack),sizeof(WCSimLikelihoodTrack),-1,324864,(char*)NULL,G__setup_memvarWCSimLikelihoodTrack,G__setup_memfuncWCSimLikelihoodTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodTrackcLcLTrackType),sizeof(int),-1,0,(char*)NULL,NULL,NULL);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimRecoVertex),sizeof(WCSimRecoVertex),-1,324864,(char*)NULL,G__setup_memvarWCSimRecoVertex,G__setup_memfuncWCSimRecoVertex);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimRecoRing),sizeof(WCSimRecoRing),-1,324608,(char*)NULL,G__setup_memvarWCSimRecoRing,G__setup_memfuncWCSimRecoRing);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimRecoEvent),sizeof(WCSimRecoEvent),-1,292096,(char*)NULL,G__setup_memvarWCSimRecoEvent,G__setup_memfuncWCSimRecoEvent);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoDigitmUcOallocatorlEWCSimRecoDigitmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEWCSimRecoDigitmUcOallocatorlEWCSimRecoDigitmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoRingmUcOallocatorlEWCSimRecoRingmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEWCSimRecoRingmUcOallocatorlEWCSimRecoRingmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimTimeLikelihood),sizeof(WCSimTimeLikelihood),-1,295936,(char*)NULL,G__setup_memvarWCSimTimeLikelihood,G__setup_memfuncWCSimTimeLikelihood);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_TFile);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodFitter),sizeof(WCSimLikelihoodFitter),-1,295936,(char*)NULL,G__setup_memvarWCSimLikelihoodFitter,G__setup_memfuncWCSimLikelihoodFitter);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimRootGeom);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimLikelihoodTuner),sizeof(WCSimLikelihoodTuner),-1,263424,(char*)NULL,G__setup_memvarWCSimLikelihoodTuner,G__setup_memfuncWCSimLikelihoodTuner);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimChargeLikelihood),sizeof(WCSimChargeLikelihood),-1,295936,(char*)NULL,G__setup_memvarWCSimChargeLikelihood,G__setup_memfuncWCSimChargeLikelihood);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_TCanvas);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_TBox);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_TLegend);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_TButton);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_TTree);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_TChain);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_TStyle);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimDisplay),sizeof(WCSimDisplay),-1,292096,(char*)NULL,G__setup_memvarWCSimDisplay,G__setup_memfuncWCSimDisplay);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimReco),sizeof(WCSimReco),-1,290821,(char*)NULL,G__setup_memvarWCSimReco,G__setup_memfuncWCSimReco);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimTrueEvent),sizeof(WCSimTrueEvent),-1,292096,(char*)NULL,G__setup_memvarWCSimTrueEvent,G__setup_memfuncWCSimTrueEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimDisplayViewer),sizeof(WCSimDisplayViewer),-1,292096,(char*)NULL,G__setup_memvarWCSimDisplayViewer,G__setup_memfuncWCSimDisplayViewer);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_vectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_vectorlEWCSimDisplaymUcOallocatorlEWCSimDisplaymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEWCSimDisplaymUcOallocatorlEWCSimDisplaymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimDisplayFactory),sizeof(WCSimDisplayFactory),-1,292096,(char*)NULL,G__setup_memvarWCSimDisplayFactory,G__setup_memfuncWCSimDisplayFactory);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimTrueTrack),sizeof(WCSimTrueTrack),-1,324608,(char*)NULL,G__setup_memvarWCSimTrueTrack,G__setup_memfuncWCSimTrueTrack);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_vectorlEWCSimTrueTrackmUcOallocatorlEWCSimTrueTrackmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEWCSimTrueTrackmUcOallocatorlEWCSimTrueTrackmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_TLatex);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_TH1D);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_TH2D);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_TLine);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_TEllipse);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_TMarker);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimDisplayAB),sizeof(WCSimDisplayAB),-1,292096,(char*)NULL,G__setup_memvarWCSimDisplayAB,G__setup_memfuncWCSimDisplayAB);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_vectorlETMarkermUcOallocatorlETMarkermUgRsPgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlETMarkermUcOallocatorlETMarkermUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_vectorlETPolyMarkermUcOallocatorlETPolyMarkermUgRsPgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlETPolyMarkermUcOallocatorlETPolyMarkermUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_vectorlETLinemUcOallocatorlETLinemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlETLinemUcOallocatorlETLinemUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimEveDisplay),sizeof(WCSimEveDisplay),-1,292096,(char*)NULL,G__setup_memvarWCSimEveDisplay,G__setup_memfuncWCSimEveDisplay);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimEventWriter),sizeof(WCSimEventWriter),-1,292096,(char*)NULL,G__setup_memvarWCSimEventWriter,G__setup_memfuncWCSimEventWriter);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimGeometry),sizeof(WCSimGeometry),-1,324864,(char*)NULL,G__setup_memvarWCSimGeometry,G__setup_memfuncWCSimGeometry);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimGeometrycLcLEGeoConfiguration);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimGeometrycLcLEGeoType);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimGeometrycLcLEGeoRegion);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimInterface),sizeof(WCSimInterface),-1,292096,(char*)NULL,G__setup_memvarWCSimInterface,G__setup_memfuncWCSimInterface);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimParameters),sizeof(WCSimParameters),-1,292096,(char*)NULL,G__setup_memvarWCSimParameters,G__setup_memfuncWCSimParameters);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimRecoObjectTable),sizeof(WCSimRecoObjectTable),-1,292096,(char*)NULL,G__setup_memvarWCSimRecoObjectTable,G__setup_memfuncWCSimRecoObjectTable);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimRecoFactory),sizeof(WCSimRecoFactory),-1,292096,(char*)NULL,G__setup_memvarWCSimRecoFactory,G__setup_memfuncWCSimRecoFactory);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimRecoVertexcLcLEFitStatus);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimRecoAB),sizeof(WCSimRecoAB),-1,292096,(char*)NULL,G__setup_memvarWCSimRecoAB,G__setup_memfuncWCSimRecoAB);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimRecoCluster),sizeof(WCSimRecoCluster),-1,292096,(char*)NULL,G__setup_memvarWCSimRecoCluster,G__setup_memfuncWCSimRecoCluster);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimRecoClusterDigit),sizeof(WCSimRecoClusterDigit),-1,324608,(char*)NULL,G__setup_memvarWCSimRecoClusterDigit,G__setup_memfuncWCSimRecoClusterDigit);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoClusterDigitmUcOallocatorlEWCSimRecoClusterDigitmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEWCSimRecoClusterDigitmUcOallocatorlEWCSimRecoClusterDigitmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimHoughTransform),sizeof(WCSimHoughTransform),-1,324608,(char*)NULL,G__setup_memvarWCSimHoughTransform,G__setup_memfuncWCSimHoughTransform);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimHoughTransformArray),sizeof(WCSimHoughTransformArray),-1,324608,(char*)NULL,G__setup_memvarWCSimHoughTransformArray,G__setup_memfuncWCSimHoughTransformArray);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_vectorlEWCSimHoughTransformmUcOallocatorlEWCSimHoughTransformmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEWCSimHoughTransformmUcOallocatorlEWCSimHoughTransformmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimDataCleaner),sizeof(WCSimDataCleaner),-1,292096,(char*)NULL,G__setup_memvarWCSimDataCleaner,G__setup_memfuncWCSimDataCleaner);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimDataCleanercLcLEFilterConfig);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoClustermUcOallocatorlEWCSimRecoClustermUgRsPgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEWCSimRecoClustermUcOallocatorlEWCSimRecoClustermUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_TMinuit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimVertexFinder),sizeof(WCSimVertexFinder),-1,292096,(char*)NULL,G__setup_memvarWCSimVertexFinder,G__setup_memfuncWCSimVertexFinder);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_vectorlEWCSimRecoVertexmUcOallocatorlEWCSimRecoVertexmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_reverse_iteratorlEvectorlEWCSimRecoVertexmUcOallocatorlEWCSimRecoVertexmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimVertexGeometry),sizeof(WCSimVertexGeometry),-1,292096,(char*)NULL,G__setup_memvarWCSimVertexGeometry,G__setup_memfuncWCSimVertexGeometry);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_TF1);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimVertexViewer),sizeof(WCSimVertexViewer),-1,292096,(char*)NULL,G__setup_memvarWCSimVertexViewer,G__setup_memfuncWCSimVertexViewer);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimRingFinder),sizeof(WCSimRingFinder),-1,292096,(char*)NULL,G__setup_memvarWCSimRingFinder,G__setup_memfuncWCSimRingFinder);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimRingViewer),sizeof(WCSimRingViewer),-1,292096,(char*)NULL,G__setup_memvarWCSimRingViewer,G__setup_memfuncWCSimRingViewer);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimNtuple),sizeof(WCSimNtuple),-1,292096,(char*)NULL,G__setup_memvarWCSimNtuple,G__setup_memfuncWCSimNtuple);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimNtupleFactory),sizeof(WCSimNtupleFactory),-1,292096,(char*)NULL,G__setup_memvarWCSimNtupleFactory,G__setup_memfuncWCSimNtupleFactory);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimRecoNtuple),sizeof(WCSimRecoNtuple),-1,292096,(char*)NULL,G__setup_memvarWCSimRecoNtuple,G__setup_memfuncWCSimRecoNtuple);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimVertexNtuple),sizeof(WCSimVertexNtuple),-1,292096,(char*)NULL,G__setup_memvarWCSimVertexNtuple,G__setup_memfuncWCSimVertexNtuple);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimVertexSeedNtuple),sizeof(WCSimVertexSeedNtuple),-1,292096,(char*)NULL,G__setup_memvarWCSimVertexSeedNtuple,G__setup_memfuncWCSimVertexSeedNtuple);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimNtupleWriter),sizeof(WCSimNtupleWriter),-1,292096,(char*)NULL,G__setup_memvarWCSimNtupleWriter,G__setup_memfuncWCSimNtupleWriter);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimMsg),sizeof(WCSimMsg),-1,292096,(char*)NULL,G__setup_memvarWCSimMsg,G__setup_memfuncWCSimMsg);
   G__get_linked_tagnum_fwd(&G__WCSimAnalysisRootDictLN_WCSimMsgcLcLEMsgLevel);
}
extern "C" void G__cpp_setupWCSimAnalysisRootDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupWCSimAnalysisRootDict()");
  G__set_cpp_environmentWCSimAnalysisRootDict();
  G__cpp_setup_tagtableWCSimAnalysisRootDict();

  G__cpp_setup_inheritanceWCSimAnalysisRootDict();

  G__cpp_setup_typetableWCSimAnalysisRootDict();

  G__cpp_setup_memvarWCSimAnalysisRootDict();

  G__cpp_setup_memfuncWCSimAnalysisRootDict();
  G__cpp_setup_globalWCSimAnalysisRootDict();
  G__cpp_setup_funcWCSimAnalysisRootDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncWCSimAnalysisRootDict();
  return;
}
class G__cpp_setup_initWCSimAnalysisRootDict {
  public:
    G__cpp_setup_initWCSimAnalysisRootDict() { G__add_setup_func("WCSimAnalysisRootDict",(G__incsetup)(&G__cpp_setupWCSimAnalysisRootDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initWCSimAnalysisRootDict() { G__remove_setup_func("WCSimAnalysisRootDict"); }
};
G__cpp_setup_initWCSimAnalysisRootDict G__cpp_setup_initializerWCSimAnalysisRootDict;

